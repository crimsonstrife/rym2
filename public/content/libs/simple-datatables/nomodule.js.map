{"version":3,"file":"nomodule.js","sources":["../src/helpers.ts","../../diffDOM/dist/module.js","../src/virtual_dom.ts","../node_modules/dayjs/dayjs.min.js","../node_modules/dayjs/plugin/customParseFormat.js","../src/date.ts","../src/read_data.ts","../src/rows.ts","../src/columns.ts","../src/column_settings.ts","../src/templates.ts","../src/config.ts","../src/virtual_pager_dom.ts","../src/datatable.ts","../src/convert/csv.ts","../src/convert/json.ts","../src/export/csv.ts","../src/export/json.ts","../src/export/sql.ts","../src/export/txt.ts","../src/editing/config.ts","../src/editing/editor.ts","../src/editing/helpers.ts","../src/column_filter/config.ts","../src/column_filter/column_filter.ts"],"sourcesContent":["import {elementNodeType, columnSettingsType, textNodeType} from \"./types\"\n\n/**\n * Check is item is object\n */\nexport const isObject = (val: (string | number | boolean | object | null | undefined )) => Object.prototype.toString.call(val) === \"[object Object]\"\n\n/**\n * Check for valid JSON string\n */\nexport const isJson = (str: string) => {\n    let t = !1\n    try {\n        t = JSON.parse(str)\n    } catch (e) {\n        return !1\n    }\n    return !(null === t || (!Array.isArray(t) && !isObject(t))) && t\n}\n\n/**\n * Create DOM element node\n */\nexport const createElement = (nodeName: string, attrs?: { [key: string]: string}) => {\n    const dom = document.createElement(nodeName)\n    if (attrs && \"object\" == typeof attrs) {\n        for (const attr in attrs) {\n            if (\"html\" === attr) {\n                dom.innerHTML = attrs[attr]\n            } else {\n                dom.setAttribute(attr, attrs[attr])\n            }\n        }\n    }\n    return dom\n}\n\nexport const objToText = (obj: (elementNodeType| textNodeType)) => {\n    if ([\"#text\", \"#comment\"].includes(obj.nodeName)) {\n        return (obj as textNodeType).data\n    }\n    if (obj.childNodes) {\n        return obj.childNodes.map((childNode: (elementNodeType | textNodeType)) => objToText(childNode)).join(\"\")\n    }\n    return \"\"\n}\n\n\nexport const escapeText = function(text: string) {\n    return text\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n}\n\n\nexport const visibleToColumnIndex = function(visibleIndex: number, columns: columnSettingsType[]) {\n    let counter = 0\n    let columnIndex = 0\n    while (counter < (visibleIndex+1)) {\n        const columnSettings = columns[columnIndex]\n        if (!columnSettings.hidden) {\n            counter += 1\n        }\n        columnIndex += 1\n    }\n    return columnIndex-1\n}\n\nexport const columnToVisibleIndex = function(columnIndex: number, columns: columnSettingsType[]) {\n    let visibleIndex = columnIndex\n    let counter = 0\n    while (counter < columnIndex) {\n        const columnSettings = columns[counter]\n        if (columnSettings.hidden) {\n            visibleIndex -= 1\n        }\n        counter++\n    }\n    return visibleIndex\n}\n","function objToNode(objNode, insideSvg, options) {\n    var node;\n    if (objNode.nodeName === \"#text\") {\n        node = options.document.createTextNode(objNode.data);\n    }\n    else if (objNode.nodeName === \"#comment\") {\n        node = options.document.createComment(objNode.data);\n    }\n    else {\n        if (insideSvg) {\n            node = options.document.createElementNS(\"http://www.w3.org/2000/svg\", objNode.nodeName);\n        }\n        else if (objNode.nodeName.toLowerCase() === \"svg\") {\n            node = options.document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n            insideSvg = true;\n        }\n        else {\n            node = options.document.createElement(objNode.nodeName);\n        }\n        if (objNode.attributes) {\n            Object.entries(objNode.attributes).forEach(function (_a) {\n                var key = _a[0], value = _a[1];\n                return node.setAttribute(key, value);\n            });\n        }\n        if (objNode.childNodes) {\n            node = node;\n            objNode.childNodes.forEach(function (childNode) {\n                return node.appendChild(objToNode(childNode, insideSvg, options));\n            });\n        }\n        if (options.valueDiffing) {\n            if (objNode.value &&\n                (node instanceof HTMLButtonElement ||\n                    node instanceof HTMLDataElement ||\n                    node instanceof HTMLInputElement ||\n                    node instanceof HTMLLIElement ||\n                    node instanceof HTMLMeterElement ||\n                    node instanceof HTMLOptionElement ||\n                    node instanceof HTMLProgressElement ||\n                    node instanceof HTMLParamElement)) {\n                node.value = objNode.value;\n            }\n            if (objNode.checked && node instanceof HTMLInputElement) {\n                node.checked = objNode.checked;\n            }\n            if (objNode.selected && node instanceof HTMLOptionElement) {\n                node.selected = objNode.selected;\n            }\n        }\n    }\n    return node;\n}\n\n// ===== Apply a diff =====\nvar getFromRoute = function (node, route) {\n    route = route.slice();\n    while (route.length > 0) {\n        var c = route.splice(0, 1)[0];\n        node = node.childNodes[c];\n    }\n    return node;\n};\nfunction applyDiff(tree, diff, options // {preDiffApply, postDiffApply, textDiff, valueDiffing, _const}\n) {\n    var action = diff[options._const.action];\n    var route = diff[options._const.route];\n    var node;\n    if (![options._const.addElement, options._const.addTextElement].includes(action)) {\n        // For adding nodes, we calculate the route later on. It's different because it includes the position of the newly added item.\n        node = getFromRoute(tree, route);\n    }\n    var newNode;\n    var reference;\n    var nodeArray;\n    // pre-diff hook\n    var info = {\n        diff: diff,\n        node: node\n    };\n    if (options.preDiffApply(info)) {\n        return true;\n    }\n    switch (action) {\n        case options._const.addAttribute:\n            if (!node || !(node instanceof Element)) {\n                return false;\n            }\n            node.setAttribute(diff[options._const.name], diff[options._const.value]);\n            break;\n        case options._const.modifyAttribute:\n            if (!node || !(node instanceof Element)) {\n                return false;\n            }\n            node.setAttribute(diff[options._const.name], diff[options._const.newValue]);\n            if (node instanceof HTMLInputElement &&\n                diff[options._const.name] === \"value\") {\n                node.value = diff[options._const.newValue];\n            }\n            break;\n        case options._const.removeAttribute:\n            if (!node || !(node instanceof Element)) {\n                return false;\n            }\n            node.removeAttribute(diff[options._const.name]);\n            break;\n        case options._const.modifyTextElement:\n            if (!node || !(node instanceof Text)) {\n                return false;\n            }\n            options.textDiff(node, node.data, diff[options._const.oldValue], diff[options._const.newValue]);\n            if (node.parentNode instanceof HTMLTextAreaElement) {\n                node.parentNode.value = diff[options._const.newValue];\n            }\n            break;\n        case options._const.modifyValue:\n            if (!node || typeof node.value === \"undefined\") {\n                return false;\n            }\n            node.value = diff[options._const.newValue];\n            break;\n        case options._const.modifyComment:\n            if (!node || !(node instanceof Comment)) {\n                return false;\n            }\n            options.textDiff(node, node.data, diff[options._const.oldValue], diff[options._const.newValue]);\n            break;\n        case options._const.modifyChecked:\n            if (!node || typeof node.checked === \"undefined\") {\n                return false;\n            }\n            node.checked = diff[options._const.newValue];\n            break;\n        case options._const.modifySelected:\n            if (!node || typeof node.selected === \"undefined\") {\n                return false;\n            }\n            node.selected = diff[options._const.newValue];\n            break;\n        case options._const.replaceElement: {\n            var insideSvg = diff[options._const.newValue].nodeName.toLowerCase() === \"svg\" ||\n                node.parentNode.namespaceURI === \"http://www.w3.org/2000/svg\";\n            node.parentNode.replaceChild(objToNode(diff[options._const.newValue], insideSvg, options), node);\n            break;\n        }\n        case options._const.relocateGroup:\n            nodeArray = Array.apply(void 0, new Array(diff[options._const.groupLength])).map(function () {\n                return node.removeChild(node.childNodes[diff[options._const.from]]);\n            });\n            nodeArray.forEach(function (childNode, index) {\n                if (index === 0) {\n                    reference =\n                        node.childNodes[diff[options._const.to]];\n                }\n                node.insertBefore(childNode, reference || null);\n            });\n            break;\n        case options._const.removeElement:\n            node.parentNode.removeChild(node);\n            break;\n        case options._const.addElement: {\n            var parentRoute = route.slice();\n            var c = parentRoute.splice(parentRoute.length - 1, 1)[0];\n            node = getFromRoute(tree, parentRoute);\n            if (!(node instanceof Element)) {\n                return false;\n            }\n            node.insertBefore(objToNode(diff[options._const.element], node.namespaceURI === \"http://www.w3.org/2000/svg\", options), node.childNodes[c] || null);\n            break;\n        }\n        case options._const.removeTextElement: {\n            if (!node || node.nodeType !== 3) {\n                return false;\n            }\n            var parentNode = node.parentNode;\n            parentNode.removeChild(node);\n            if (parentNode instanceof HTMLTextAreaElement) {\n                parentNode.value = \"\";\n            }\n            break;\n        }\n        case options._const.addTextElement: {\n            var parentRoute = route.slice();\n            var c = parentRoute.splice(parentRoute.length - 1, 1)[0];\n            newNode = options.document.createTextNode(diff[options._const.value]);\n            node = getFromRoute(tree, parentRoute);\n            if (!node.childNodes) {\n                return false;\n            }\n            node.insertBefore(newNode, node.childNodes[c] || null);\n            if (node.parentNode instanceof HTMLTextAreaElement) {\n                node.parentNode.value = diff[options._const.value];\n            }\n            break;\n        }\n        default:\n            console.log(\"unknown action\");\n    }\n    // if a new node was created, we might be interested in its\n    // post diff hook\n    options.postDiffApply({\n        diff: info.diff,\n        node: info.node,\n        newNode: newNode\n    });\n    return true;\n}\nfunction applyDOM(tree, diffs, options) {\n    return diffs.every(function (diff) {\n        return applyDiff(tree, diff, options);\n    });\n}\n\n// ===== Undo a diff =====\nfunction swap(obj, p1, p2) {\n    var tmp = obj[p1];\n    obj[p1] = obj[p2];\n    obj[p2] = tmp;\n}\nfunction undoDiff(tree, diff, options // {preDiffApply, postDiffApply, textDiff, valueDiffing, _const}\n) {\n    switch (diff[options._const.action]) {\n        case options._const.addAttribute:\n            diff[options._const.action] = options._const.removeAttribute;\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.modifyAttribute:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.removeAttribute:\n            diff[options._const.action] = options._const.addAttribute;\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.modifyTextElement:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.modifyValue:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.modifyComment:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.modifyChecked:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.modifySelected:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.replaceElement:\n            swap(diff, options._const.oldValue, options._const.newValue);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.relocateGroup:\n            swap(diff, options._const.from, options._const.to);\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.removeElement:\n            diff[options._const.action] = options._const.addElement;\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.addElement:\n            diff[options._const.action] = options._const.removeElement;\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.removeTextElement:\n            diff[options._const.action] = options._const.addTextElement;\n            applyDiff(tree, diff, options);\n            break;\n        case options._const.addTextElement:\n            diff[options._const.action] = options._const.removeTextElement;\n            applyDiff(tree, diff, options);\n            break;\n        default:\n            console.log(\"unknown action\");\n    }\n}\nfunction undoDOM(tree, diffs, options) {\n    diffs = diffs.slice();\n    diffs.reverse();\n    diffs.forEach(function (diff) {\n        undoDiff(tree, diff, options);\n    });\n}\n\nvar elementDescriptors = function (el) {\n    var output = [];\n    output.push(el.nodeName);\n    if (el.nodeName !== \"#text\" && el.nodeName !== \"#comment\") {\n        el = el;\n        if (el.attributes) {\n            if (el.attributes[\"class\"]) {\n                output.push(\"\".concat(el.nodeName, \".\").concat(el.attributes[\"class\"].replace(/ /g, \".\")));\n            }\n            if (el.attributes.id) {\n                output.push(\"\".concat(el.nodeName, \"#\").concat(el.attributes.id));\n            }\n        }\n    }\n    return output;\n};\nvar findUniqueDescriptors = function (li) {\n    var uniqueDescriptors = {};\n    var duplicateDescriptors = {};\n    li.forEach(function (node) {\n        elementDescriptors(node).forEach(function (descriptor) {\n            var inUnique = descriptor in uniqueDescriptors;\n            var inDupes = descriptor in duplicateDescriptors;\n            if (!inUnique && !inDupes) {\n                uniqueDescriptors[descriptor] = true;\n            }\n            else if (inUnique) {\n                delete uniqueDescriptors[descriptor];\n                duplicateDescriptors[descriptor] = true;\n            }\n        });\n    });\n    return uniqueDescriptors;\n};\nvar uniqueInBoth = function (l1, l2) {\n    var l1Unique = findUniqueDescriptors(l1);\n    var l2Unique = findUniqueDescriptors(l2);\n    var inBoth = {};\n    Object.keys(l1Unique).forEach(function (key) {\n        if (l2Unique[key]) {\n            inBoth[key] = true;\n        }\n    });\n    return inBoth;\n};\nvar removeDone = function (tree) {\n    delete tree.outerDone;\n    delete tree.innerDone;\n    delete tree.valueDone;\n    if (tree.childNodes) {\n        return tree.childNodes.every(removeDone);\n    }\n    else {\n        return true;\n    }\n};\nvar cleanNode = function (diffNode) {\n    if (Object.prototype.hasOwnProperty.call(diffNode, \"data\")) {\n        var textNode = {\n            nodeName: diffNode.nodeName === \"#text\" ? \"#text\" : \"#comment\",\n            data: diffNode.data\n        };\n        return textNode;\n    }\n    else {\n        var elementNode = {\n            nodeName: diffNode.nodeName\n        };\n        diffNode = diffNode;\n        if (Object.prototype.hasOwnProperty.call(diffNode, \"attributes\")) {\n            elementNode.attributes = diffNode.attributes;\n        }\n        if (Object.prototype.hasOwnProperty.call(diffNode, \"checked\")) {\n            elementNode.checked = diffNode.checked;\n        }\n        if (Object.prototype.hasOwnProperty.call(diffNode, \"value\")) {\n            elementNode.value = diffNode.value;\n        }\n        if (Object.prototype.hasOwnProperty.call(diffNode, \"selected\")) {\n            elementNode.selected = diffNode.selected;\n        }\n        if (Object.prototype.hasOwnProperty.call(diffNode, \"childNodes\")) {\n            elementNode.childNodes = diffNode.childNodes.map(function (diffChildNode) {\n                return cleanNode(diffChildNode);\n            });\n        }\n        return elementNode;\n    }\n};\nvar isEqual = function (e1, e2) {\n    if (![\"nodeName\", \"value\", \"checked\", \"selected\", \"data\"].every(function (element) {\n        if (e1[element] !== e2[element]) {\n            return false;\n        }\n        return true;\n    })) {\n        return false;\n    }\n    if (Object.prototype.hasOwnProperty.call(e1, \"data\")) {\n        // Comment or Text\n        return true;\n    }\n    e1 = e1;\n    e2 = e2;\n    if (Boolean(e1.attributes) !== Boolean(e2.attributes)) {\n        return false;\n    }\n    if (Boolean(e1.childNodes) !== Boolean(e2.childNodes)) {\n        return false;\n    }\n    if (e1.attributes) {\n        var e1Attributes = Object.keys(e1.attributes);\n        var e2Attributes = Object.keys(e2.attributes);\n        if (e1Attributes.length !== e2Attributes.length) {\n            return false;\n        }\n        if (!e1Attributes.every(function (attribute) {\n            if (e1.attributes[attribute] !==\n                e2.attributes[attribute]) {\n                return false;\n            }\n            return true;\n        })) {\n            return false;\n        }\n    }\n    if (e1.childNodes) {\n        if (e1.childNodes.length !== e2.childNodes.length) {\n            return false;\n        }\n        if (!e1.childNodes.every(function (childNode, index) {\n            return isEqual(childNode, e2.childNodes[index]);\n        })) {\n            return false;\n        }\n    }\n    return true;\n};\nvar roughlyEqual = function (e1, e2, uniqueDescriptors, sameSiblings, preventRecursion) {\n    if (preventRecursion === void 0) { preventRecursion = false; }\n    if (!e1 || !e2) {\n        return false;\n    }\n    if (e1.nodeName !== e2.nodeName) {\n        return false;\n    }\n    if ([\"#text\", \"#comment\"].includes(e1.nodeName)) {\n        // Note that we initially don't care what the text content of a node is,\n        // the mere fact that it's the same tag and \"has text\" means it's roughly\n        // equal, and then we can find out the true text difference later.\n        return preventRecursion\n            ? true\n            : e1.data === e2.data;\n    }\n    e1 = e1;\n    e2 = e2;\n    if (e1.nodeName in uniqueDescriptors) {\n        return true;\n    }\n    if (e1.attributes && e2.attributes) {\n        if (e1.attributes.id) {\n            if (e1.attributes.id !== e2.attributes.id) {\n                return false;\n            }\n            else {\n                var idDescriptor = \"\".concat(e1.nodeName, \"#\").concat(e1.attributes.id);\n                if (idDescriptor in uniqueDescriptors) {\n                    return true;\n                }\n            }\n        }\n        if (e1.attributes[\"class\"] &&\n            e1.attributes[\"class\"] === e2.attributes[\"class\"]) {\n            var classDescriptor = \"\".concat(e1.nodeName, \".\").concat(e1.attributes[\"class\"].replace(/ /g, \".\"));\n            if (classDescriptor in uniqueDescriptors) {\n                return true;\n            }\n        }\n    }\n    if (sameSiblings) {\n        return true;\n    }\n    var nodeList1 = e1.childNodes ? e1.childNodes.slice().reverse() : [];\n    var nodeList2 = e2.childNodes ? e2.childNodes.slice().reverse() : [];\n    if (nodeList1.length !== nodeList2.length) {\n        return false;\n    }\n    if (preventRecursion) {\n        return nodeList1.every(function (element, index) {\n            return element.nodeName === nodeList2[index].nodeName;\n        });\n    }\n    else {\n        // note: we only allow one level of recursion at any depth. If 'preventRecursion'\n        // was not set, we must explicitly force it to true for child iterations.\n        var childUniqueDescriptors_1 = uniqueInBoth(nodeList1, nodeList2);\n        return nodeList1.every(function (element, index) {\n            return roughlyEqual(element, nodeList2[index], childUniqueDescriptors_1, true, true);\n        });\n    }\n};\n/**\n * based on https://en.wikibooks.org/wiki/Algorithm_implementation/Strings/Longest_common_substring#JavaScript\n */\nvar findCommonSubsets = function (c1, c2, marked1, marked2) {\n    var lcsSize = 0;\n    var index = [];\n    var c1Length = c1.length;\n    var c2Length = c2.length;\n    var // set up the matching table\n    matches = Array.apply(void 0, new Array(c1Length + 1)).map(function () { return []; });\n    var uniqueDescriptors = uniqueInBoth(c1, c2);\n    var // If all of the elements are the same tag, id and class, then we can\n    // consider them roughly the same even if they have a different number of\n    // children. This will reduce removing and re-adding similar elements.\n    subsetsSame = c1Length === c2Length;\n    if (subsetsSame) {\n        c1.some(function (element, i) {\n            var c1Desc = elementDescriptors(element);\n            var c2Desc = elementDescriptors(c2[i]);\n            if (c1Desc.length !== c2Desc.length) {\n                subsetsSame = false;\n                return true;\n            }\n            c1Desc.some(function (description, i) {\n                if (description !== c2Desc[i]) {\n                    subsetsSame = false;\n                    return true;\n                }\n            });\n            if (!subsetsSame) {\n                return true;\n            }\n        });\n    }\n    // fill the matches with distance values\n    for (var c1Index = 0; c1Index < c1Length; c1Index++) {\n        var c1Element = c1[c1Index];\n        for (var c2Index = 0; c2Index < c2Length; c2Index++) {\n            var c2Element = c2[c2Index];\n            if (!marked1[c1Index] &&\n                !marked2[c2Index] &&\n                roughlyEqual(c1Element, c2Element, uniqueDescriptors, subsetsSame)) {\n                matches[c1Index + 1][c2Index + 1] = matches[c1Index][c2Index]\n                    ? matches[c1Index][c2Index] + 1\n                    : 1;\n                if (matches[c1Index + 1][c2Index + 1] >= lcsSize) {\n                    lcsSize = matches[c1Index + 1][c2Index + 1];\n                    index = [c1Index + 1, c2Index + 1];\n                }\n            }\n            else {\n                matches[c1Index + 1][c2Index + 1] = 0;\n            }\n        }\n    }\n    if (lcsSize === 0) {\n        return false;\n    }\n    return {\n        oldValue: index[0] - lcsSize,\n        newValue: index[1] - lcsSize,\n        length: lcsSize\n    };\n};\nvar makeBooleanArray = function (n, v) {\n    return Array.apply(void 0, new Array(n)).map(function () { return v; });\n};\n/**\n * Generate arrays that indicate which node belongs to which subset,\n * or whether it's actually an orphan node, existing in only one\n * of the two trees, rather than somewhere in both.\n *\n * So if t1 = <img><canvas><br>, t2 = <canvas><br><img>.\n * The longest subset is \"<canvas><br>\" (length 2), so it will group 0.\n * The second longest is \"<img>\" (length 1), so it will be group 1.\n * gaps1 will therefore be [1,0,0] and gaps2 [0,0,1].\n *\n * If an element is not part of any group, it will stay being 'true', which\n * is the initial value. For example:\n * t1 = <img><p></p><br><canvas>, t2 = <b></b><br><canvas><img>\n *\n * The \"<p></p>\" and \"<b></b>\" do only show up in one of the two and will\n * therefore be marked by \"true\". The remaining parts are parts of the\n * groups 0 and 1:\n * gaps1 = [1, true, 0, 0], gaps2 = [true, 0, 0, 1]\n *\n */\nvar getGapInformation = function (t1, t2, stable) {\n    var gaps1 = t1.childNodes\n        ? makeBooleanArray(t1.childNodes.length, true)\n        : [];\n    var gaps2 = t2.childNodes\n        ? makeBooleanArray(t2.childNodes.length, true)\n        : [];\n    var group = 0;\n    // give elements from the same subset the same group number\n    stable.forEach(function (subset) {\n        var endOld = subset.oldValue + subset.length;\n        var endNew = subset.newValue + subset.length;\n        for (var j = subset.oldValue; j < endOld; j += 1) {\n            gaps1[j] = group;\n        }\n        for (var j = subset.newValue; j < endNew; j += 1) {\n            gaps2[j] = group;\n        }\n        group += 1;\n    });\n    return {\n        gaps1: gaps1,\n        gaps2: gaps2\n    };\n};\n/**\n * Find all matching subsets, based on immediate child differences only.\n */\nvar markBoth = function (marked1, marked2, subset, i) {\n    marked1[subset.oldValue + i] = true;\n    marked2[subset.newValue + i] = true;\n};\nvar markSubTrees = function (oldTree, newTree) {\n    // note: the child lists are views, and so update as we update old/newTree\n    var oldChildren = oldTree.childNodes ? oldTree.childNodes : [];\n    var newChildren = newTree.childNodes ? newTree.childNodes : [];\n    var marked1 = makeBooleanArray(oldChildren.length, false);\n    var marked2 = makeBooleanArray(newChildren.length, false);\n    var subsets = [];\n    var returnIndex = function () {\n        return arguments[1];\n    };\n    var foundAllSubsets = false;\n    var _loop_1 = function () {\n        var subset = findCommonSubsets(oldChildren, newChildren, marked1, marked2);\n        if (subset) {\n            subsets.push(subset);\n            var subsetArray = Array.apply(void 0, new Array(subset.length)).map(returnIndex);\n            subsetArray.forEach(function (item) {\n                return markBoth(marked1, marked2, subset, item);\n            });\n        }\n        else {\n            foundAllSubsets = true;\n        }\n    };\n    while (!foundAllSubsets) {\n        _loop_1();\n    }\n    oldTree.subsets = subsets;\n    oldTree.subsetsAge = 100;\n    return subsets;\n};\nvar DiffTracker = /** @class */ (function () {\n    function DiffTracker() {\n        this.list = [];\n    }\n    DiffTracker.prototype.add = function (diffs) {\n        var _a;\n        (_a = this.list).push.apply(_a, diffs);\n    };\n    DiffTracker.prototype.forEach = function (fn) {\n        this.list.forEach(function (li) { return fn(li); });\n    };\n    return DiffTracker;\n}());\n//export const elementHasValue = (element: Element) : boolean => element instanceof HTMLButtonElement || element instanceof HTMLDataElement || element instanceof HTMLInputElement || element instanceof HTMLLIElement || element instanceof HTMLMeterElement || element instanceof HTMLOptionElement || element instanceof HTMLProgressElement || element instanceof HTMLParamElement\n\nvar Diff = /** @class */ (function () {\n    function Diff(options) {\n        if (options === void 0) { options = {}; }\n        var _this = this;\n        Object.entries(options).forEach(function (_a) {\n            var key = _a[0], value = _a[1];\n            return (_this[key] = value);\n        });\n    }\n    Diff.prototype.toString = function () {\n        return JSON.stringify(this);\n    };\n    Diff.prototype.setValue = function (aKey, aValue) {\n        this[aKey] = aValue;\n        return this;\n    };\n    return Diff;\n}());\n\n// ===== Apply a virtual diff =====\nfunction getFromVirtualRoute(tree, route) {\n    var node = tree;\n    var parentNode;\n    var nodeIndex;\n    route = route.slice();\n    while (route.length > 0) {\n        nodeIndex = route.splice(0, 1)[0];\n        parentNode = node;\n        node = node.childNodes ? node.childNodes[nodeIndex] : undefined;\n    }\n    return {\n        node: node,\n        parentNode: parentNode,\n        nodeIndex: nodeIndex\n    };\n}\nfunction applyVirtualDiff(tree, diff, options // {preVirtualDiffApply, postVirtualDiffApply, _const}\n) {\n    var _a;\n    var node, parentNode, nodeIndex;\n    if (![options._const.addElement, options._const.addTextElement].includes(diff[options._const.action])) {\n        // For adding nodes, we calculate the route later on. It's different because it includes the position of the newly added item.\n        var routeInfo = getFromVirtualRoute(tree, diff[options._const.route]);\n        node = routeInfo.node;\n        parentNode = routeInfo.parentNode;\n        nodeIndex = routeInfo.nodeIndex;\n    }\n    var newSubsets = [];\n    // pre-diff hook\n    var info = {\n        diff: diff,\n        node: node\n    };\n    if (options.preVirtualDiffApply(info)) {\n        return true;\n    }\n    var newNode;\n    var nodeArray;\n    var route;\n    switch (diff[options._const.action]) {\n        case options._const.addAttribute:\n            if (!node.attributes) {\n                node.attributes = {};\n            }\n            node.attributes[diff[options._const.name]] =\n                diff[options._const.value];\n            if (diff[options._const.name] === \"checked\") {\n                node.checked = true;\n            }\n            else if (diff[options._const.name] === \"selected\") {\n                node.selected = true;\n            }\n            else if (node.nodeName === \"INPUT\" &&\n                diff[options._const.name] === \"value\") {\n                node.value = diff[options._const.value];\n            }\n            break;\n        case options._const.modifyAttribute:\n            node.attributes[diff[options._const.name]] =\n                diff[options._const.newValue];\n            break;\n        case options._const.removeAttribute:\n            delete node.attributes[diff[options._const.name]];\n            if (Object.keys(node.attributes).length === 0) {\n                delete node.attributes;\n            }\n            if (diff[options._const.name] === \"checked\") {\n                node.checked = false;\n            }\n            else if (diff[options._const.name] === \"selected\") {\n                delete node.selected;\n            }\n            else if (node.nodeName === \"INPUT\" &&\n                diff[options._const.name] === \"value\") {\n                delete node.value;\n            }\n            break;\n        case options._const.modifyTextElement:\n            node.data = diff[options._const.newValue];\n            if (parentNode.nodeName === \"TEXTAREA\") {\n                parentNode.value = diff[options._const.newValue];\n            }\n            break;\n        case options._const.modifyValue:\n            node.value = diff[options._const.newValue];\n            break;\n        case options._const.modifyComment:\n            node.data = diff[options._const.newValue];\n            break;\n        case options._const.modifyChecked:\n            node.checked = diff[options._const.newValue];\n            break;\n        case options._const.modifySelected:\n            node.selected = diff[options._const.newValue];\n            break;\n        case options._const.replaceElement:\n            newNode = diff[options._const.newValue];\n            parentNode.childNodes[nodeIndex] = newNode;\n            break;\n        case options._const.relocateGroup:\n            nodeArray = node.childNodes\n                .splice(diff[options._const.from], diff[options._const.groupLength])\n                .reverse();\n            nodeArray.forEach(function (movedNode) {\n                return node.childNodes.splice(diff[options._const.to], 0, movedNode);\n            });\n            if (node.subsets) {\n                node.subsets.forEach(function (map) {\n                    if (diff[options._const.from] < diff[options._const.to] &&\n                        map.oldValue <= diff[options._const.to] &&\n                        map.oldValue > diff[options._const.from]) {\n                        map.oldValue -= diff[options._const.groupLength];\n                        var splitLength = map.oldValue + map.length - diff[options._const.to];\n                        if (splitLength > 0) {\n                            // new insertion splits map.\n                            newSubsets.push({\n                                oldValue: diff[options._const.to] +\n                                    diff[options._const.groupLength],\n                                newValue: map.newValue + map.length - splitLength,\n                                length: splitLength\n                            });\n                            map.length -= splitLength;\n                        }\n                    }\n                    else if (diff[options._const.from] > diff[options._const.to] &&\n                        map.oldValue > diff[options._const.to] &&\n                        map.oldValue < diff[options._const.from]) {\n                        map.oldValue += diff[options._const.groupLength];\n                        var splitLength = map.oldValue + map.length - diff[options._const.to];\n                        if (splitLength > 0) {\n                            // new insertion splits map.\n                            newSubsets.push({\n                                oldValue: diff[options._const.to] +\n                                    diff[options._const.groupLength],\n                                newValue: map.newValue + map.length - splitLength,\n                                length: splitLength\n                            });\n                            map.length -= splitLength;\n                        }\n                    }\n                    else if (map.oldValue === diff[options._const.from]) {\n                        map.oldValue = diff[options._const.to];\n                    }\n                });\n            }\n            break;\n        case options._const.removeElement:\n            parentNode.childNodes.splice(nodeIndex, 1);\n            if (parentNode.subsets) {\n                parentNode.subsets.forEach(function (map) {\n                    if (map.oldValue > nodeIndex) {\n                        map.oldValue -= 1;\n                    }\n                    else if (map.oldValue === nodeIndex) {\n                        map[\"delete\"] = true;\n                    }\n                    else if (map.oldValue < nodeIndex &&\n                        map.oldValue + map.length > nodeIndex) {\n                        if (map.oldValue + map.length - 1 === nodeIndex) {\n                            map.length--;\n                        }\n                        else {\n                            newSubsets.push({\n                                newValue: map.newValue + nodeIndex - map.oldValue,\n                                oldValue: nodeIndex,\n                                length: map.length - nodeIndex + map.oldValue - 1\n                            });\n                            map.length = nodeIndex - map.oldValue;\n                        }\n                    }\n                });\n            }\n            node = parentNode;\n            break;\n        case options._const.addElement: {\n            route = diff[options._const.route].slice();\n            var c_1 = route.splice(route.length - 1, 1)[0];\n            node = (_a = getFromVirtualRoute(tree, route)) === null || _a === void 0 ? void 0 : _a.node;\n            newNode = diff[options._const.element];\n            if (!node.childNodes) {\n                node.childNodes = [];\n            }\n            if (c_1 >= node.childNodes.length) {\n                node.childNodes.push(newNode);\n            }\n            else {\n                node.childNodes.splice(c_1, 0, newNode);\n            }\n            if (node.subsets) {\n                node.subsets.forEach(function (map) {\n                    if (map.oldValue >= c_1) {\n                        map.oldValue += 1;\n                    }\n                    else if (map.oldValue < c_1 &&\n                        map.oldValue + map.length > c_1) {\n                        var splitLength = map.oldValue + map.length - c_1;\n                        newSubsets.push({\n                            newValue: map.newValue + map.length - splitLength,\n                            oldValue: c_1 + 1,\n                            length: splitLength\n                        });\n                        map.length -= splitLength;\n                    }\n                });\n            }\n            break;\n        }\n        case options._const.removeTextElement:\n            parentNode.childNodes.splice(nodeIndex, 1);\n            if (parentNode.nodeName === \"TEXTAREA\") {\n                delete parentNode.value;\n            }\n            if (parentNode.subsets) {\n                parentNode.subsets.forEach(function (map) {\n                    if (map.oldValue > nodeIndex) {\n                        map.oldValue -= 1;\n                    }\n                    else if (map.oldValue === nodeIndex) {\n                        map[\"delete\"] = true;\n                    }\n                    else if (map.oldValue < nodeIndex &&\n                        map.oldValue + map.length > nodeIndex) {\n                        if (map.oldValue + map.length - 1 === nodeIndex) {\n                            map.length--;\n                        }\n                        else {\n                            newSubsets.push({\n                                newValue: map.newValue + nodeIndex - map.oldValue,\n                                oldValue: nodeIndex,\n                                length: map.length - nodeIndex + map.oldValue - 1\n                            });\n                            map.length = nodeIndex - map.oldValue;\n                        }\n                    }\n                });\n            }\n            node = parentNode;\n            break;\n        case options._const.addTextElement: {\n            route = diff[options._const.route].slice();\n            var c_2 = route.splice(route.length - 1, 1)[0];\n            newNode = {};\n            newNode.nodeName = \"#text\";\n            newNode.data = diff[options._const.value];\n            node = getFromVirtualRoute(tree, route).node;\n            if (!node.childNodes) {\n                node.childNodes = [];\n            }\n            if (c_2 >= node.childNodes.length) {\n                node.childNodes.push(newNode);\n            }\n            else {\n                node.childNodes.splice(c_2, 0, newNode);\n            }\n            if (node.nodeName === \"TEXTAREA\") {\n                node.value = diff[options._const.newValue];\n            }\n            if (node.subsets) {\n                node.subsets.forEach(function (map) {\n                    if (map.oldValue >= c_2) {\n                        map.oldValue += 1;\n                    }\n                    if (map.oldValue < c_2 && map.oldValue + map.length > c_2) {\n                        var splitLength = map.oldValue + map.length - c_2;\n                        newSubsets.push({\n                            newValue: map.newValue + map.length - splitLength,\n                            oldValue: c_2 + 1,\n                            length: splitLength\n                        });\n                        map.length -= splitLength;\n                    }\n                });\n            }\n            break;\n        }\n        default:\n            console.log(\"unknown action\");\n    }\n    if (node.subsets) {\n        node.subsets = node.subsets.filter(function (map) { return !map[\"delete\"] && map.oldValue !== map.newValue; });\n        if (newSubsets.length) {\n            node.subsets = node.subsets.concat(newSubsets);\n        }\n    }\n    options.postVirtualDiffApply({\n        node: info.node,\n        diff: info.diff,\n        newNode: newNode\n    });\n    return;\n}\nfunction applyVirtual(tree, diffs, options) {\n    diffs.forEach(function (diff) {\n        applyVirtualDiff(tree, diff, options);\n    });\n    return true;\n}\n\nfunction nodeToObj(aNode, options) {\n    if (options === void 0) { options = { valueDiffing: true }; }\n    var objNode = {\n        nodeName: aNode.nodeName\n    };\n    if (aNode instanceof Text || aNode instanceof Comment) {\n        objNode.data = aNode.data;\n    }\n    else {\n        if (aNode.attributes && aNode.attributes.length > 0) {\n            objNode.attributes = {};\n            var nodeArray = Array.prototype.slice.call(aNode.attributes);\n            nodeArray.forEach(function (attribute) {\n                return (objNode.attributes[attribute.name] = attribute.value);\n            });\n        }\n        if (aNode.childNodes && aNode.childNodes.length > 0) {\n            objNode.childNodes = [];\n            var nodeArray = Array.prototype.slice.call(aNode.childNodes);\n            nodeArray.forEach(function (childNode) {\n                return objNode.childNodes.push(nodeToObj(childNode, options));\n            });\n        }\n        if (options.valueDiffing) {\n            if (aNode instanceof HTMLTextAreaElement) {\n                objNode.value = aNode.value;\n            }\n            if (aNode instanceof HTMLInputElement &&\n                [\"radio\", \"checkbox\"].includes(aNode.type.toLowerCase()) &&\n                aNode.checked !== undefined) {\n                objNode.checked = aNode.checked;\n            }\n            else if (aNode instanceof HTMLButtonElement ||\n                aNode instanceof HTMLDataElement ||\n                aNode instanceof HTMLInputElement ||\n                aNode instanceof HTMLLIElement ||\n                aNode instanceof HTMLMeterElement ||\n                aNode instanceof HTMLOptionElement ||\n                aNode instanceof HTMLProgressElement ||\n                aNode instanceof HTMLParamElement) {\n                objNode.value = aNode.value;\n            }\n            if (aNode instanceof HTMLOptionElement) {\n                objNode.selected = aNode.selected;\n            }\n        }\n    }\n    return objNode;\n}\n\n// from html-parse-stringify (MIT)\nvar tagRE = /<\\s*\\/*[a-zA-Z:_][a-zA-Z0-9:_\\-.]*\\s*(?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\"/>])*\\/*\\s*>|<!--(?:.|\\n|\\r)*?-->/g;\nvar attrRE = /\\s([^'\"/\\s><]+?)[\\s/>]|([^\\s=]+)=\\s?(\".*?\"|'.*?')/g;\nfunction unescape(string) {\n    return string\n        .replace(/&lt;/g, \"<\")\n        .replace(/&gt;/g, \">\")\n        .replace(/&amp;/g, \"&\");\n}\n// create optimized lookup object for\n// void elements as listed here:\n// https://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\nvar lookup = {\n    area: true,\n    base: true,\n    br: true,\n    col: true,\n    embed: true,\n    hr: true,\n    img: true,\n    input: true,\n    keygen: true,\n    link: true,\n    menuItem: true,\n    meta: true,\n    param: true,\n    source: true,\n    track: true,\n    wbr: true\n};\nvar parseTag = function (tag) {\n    var res = {\n        nodeName: \"\",\n        attributes: {}\n    };\n    var voidElement = false;\n    var type = \"tag\";\n    var tagMatch = tag.match(/<\\/?([^\\s]+?)[/\\s>]/);\n    if (tagMatch) {\n        res.nodeName = tagMatch[1];\n        if (lookup[tagMatch[1]] || tag.charAt(tag.length - 2) === \"/\") {\n            voidElement = true;\n        }\n        // handle comment tag\n        if (res.nodeName.startsWith(\"!--\")) {\n            var endIndex = tag.indexOf(\"-->\");\n            return {\n                type: \"comment\",\n                node: {\n                    nodeName: \"#comment\",\n                    data: endIndex !== -1 ? tag.slice(4, endIndex) : \"\"\n                },\n                voidElement: voidElement\n            };\n        }\n    }\n    var reg = new RegExp(attrRE);\n    var result = null;\n    var done = false;\n    while (!done) {\n        result = reg.exec(tag);\n        if (result === null) {\n            done = true;\n        }\n        else if (result[0].trim()) {\n            if (result[1]) {\n                var attr = result[1].trim();\n                var arr = [attr, \"\"];\n                if (attr.indexOf(\"=\") > -1)\n                    { arr = attr.split(\"=\"); }\n                res.attributes[arr[0]] = arr[1];\n                reg.lastIndex--;\n            }\n            else if (result[2])\n                { res.attributes[result[2]] = result[3]\n                    .trim()\n                    .substring(1, result[3].length - 1); }\n        }\n    }\n    return {\n        type: type,\n        node: res,\n        voidElement: voidElement\n    };\n};\nvar stringToObj = function (html, options) {\n    if (options === void 0) { options = { valueDiffing: true }; }\n    var result = [];\n    var current;\n    var level = -1;\n    var arr = [];\n    var inComponent = false;\n    // handle text at top level\n    if (html.indexOf(\"<\") !== 0) {\n        var end = html.indexOf(\"<\");\n        result.push({\n            nodeName: \"#text\",\n            data: end === -1 ? html : html.substring(0, end)\n        });\n    }\n    html.replace(tagRE, function (tag, index) {\n        var isOpen = tag.charAt(1) !== \"/\";\n        var isComment = tag.startsWith(\"<!--\");\n        var start = index + tag.length;\n        var nextChar = html.charAt(start);\n        if (isComment) {\n            var comment = parseTag(tag).node;\n            // if we're at root, push new base node\n            if (level < 0) {\n                result.push(comment);\n                return \"\";\n            }\n            var parent_1 = arr[level];\n            if (parent_1 && comment.nodeName) {\n                if (!parent_1.node.childNodes) {\n                    parent_1.node.childNodes = [];\n                }\n                parent_1.node.childNodes.push(comment);\n            }\n            return \"\";\n        }\n        if (isOpen) {\n            current = parseTag(tag);\n            level++;\n            if (!current.voidElement &&\n                !inComponent &&\n                nextChar &&\n                nextChar !== \"<\") {\n                if (!current.node.childNodes) {\n                    current.node.childNodes = [];\n                }\n                var data = unescape(html.slice(start, html.indexOf(\"<\", start)));\n                current.node.childNodes.push({\n                    nodeName: \"#text\",\n                    data: data\n                });\n                if (options.valueDiffing &&\n                    current.node.nodeName === \"TEXTAREA\") {\n                    current.node.value = data;\n                }\n            }\n            // if we're at root, push new base node\n            if (level === 0 && current.node.nodeName) {\n                result.push(current.node);\n            }\n            var parent_2 = arr[level - 1];\n            if (parent_2 && current.node.nodeName) {\n                if (!parent_2.node.childNodes) {\n                    parent_2.node.childNodes = [];\n                }\n                parent_2.node.childNodes.push(current.node);\n            }\n            arr[level] = current;\n        }\n        if (!isOpen || current.voidElement) {\n            if (level > -1 &&\n                (current.voidElement ||\n                    current.node.nodeName.toUpperCase() ===\n                        tag.slice(2, -1).toUpperCase())) {\n                level--;\n                // move current up a level to match the end tag\n                if (level > -1) {\n                    current = arr[level];\n                }\n            }\n            if (nextChar !== \"<\" && nextChar) {\n                // trailing text node\n                // if we're at the root, push a base text node. otherwise add as\n                // a child to the current node.\n                var childNodes = level === -1 ? result : arr[level].node.childNodes || [];\n                // calculate correct end of the data slice in case there's\n                // no tag after the text node.\n                var end = html.indexOf(\"<\", start);\n                var data = unescape(html.slice(start, end === -1 ? undefined : end));\n                childNodes.push({\n                    nodeName: \"#text\",\n                    data: data\n                });\n            }\n        }\n        return \"\";\n    });\n    return result[0];\n};\n\n// ===== Create a diff =====\nvar DiffFinder = /** @class */ (function () {\n    function DiffFinder(t1Node, t2Node, options) {\n        this.options = options;\n        this.t1 = (typeof Element !== \"undefined\" && t1Node instanceof Element\n            ? nodeToObj(t1Node, this.options)\n            : typeof t1Node === \"string\"\n                ? stringToObj(t1Node, this.options)\n                : JSON.parse(JSON.stringify(t1Node)));\n        this.t2 = (typeof Element !== \"undefined\" && t2Node instanceof Element\n            ? nodeToObj(t2Node, this.options)\n            : typeof t2Node === \"string\"\n                ? stringToObj(t2Node, this.options)\n                : JSON.parse(JSON.stringify(t2Node)));\n        this.diffcount = 0;\n        this.foundAll = false;\n        if (this.debug) {\n            this.t1Orig =\n                typeof Element !== \"undefined\" && t1Node instanceof Element\n                    ? nodeToObj(t1Node, this.options)\n                    : typeof t1Node === \"string\"\n                        ? stringToObj(t1Node, this.options)\n                        : JSON.parse(JSON.stringify(t1Node));\n            this.t2Orig =\n                typeof Element !== \"undefined\" && t2Node instanceof Element\n                    ? nodeToObj(t2Node, this.options)\n                    : typeof t2Node === \"string\"\n                        ? stringToObj(t2Node, this.options)\n                        : JSON.parse(JSON.stringify(t2Node));\n        }\n        this.tracker = new DiffTracker();\n    }\n    DiffFinder.prototype.init = function () {\n        return this.findDiffs(this.t1, this.t2);\n    };\n    DiffFinder.prototype.findDiffs = function (t1, t2) {\n        var diffs;\n        do {\n            if (this.options.debug) {\n                this.diffcount += 1;\n                if (this.diffcount > this.options.diffcap) {\n                    throw new Error(\"surpassed diffcap:\".concat(JSON.stringify(this.t1Orig), \" -> \").concat(JSON.stringify(this.t2Orig)));\n                }\n            }\n            diffs = this.findNextDiff(t1, t2, []);\n            if (diffs.length === 0) {\n                // Last check if the elements really are the same now.\n                // If not, remove all info about being done and start over.\n                // Sometimes a node can be marked as done, but the creation of subsequent diffs means that it has to be changed again.\n                if (!isEqual(t1, t2)) {\n                    if (this.foundAll) {\n                        console.error(\"Could not find remaining diffs!\");\n                    }\n                    else {\n                        this.foundAll = true;\n                        removeDone(t1);\n                        diffs = this.findNextDiff(t1, t2, []);\n                    }\n                }\n            }\n            if (diffs.length > 0) {\n                this.foundAll = false;\n                this.tracker.add(diffs);\n                applyVirtual(t1, diffs, this.options);\n            }\n        } while (diffs.length > 0);\n        return this.tracker.list;\n    };\n    DiffFinder.prototype.findNextDiff = function (t1, t2, route) {\n        var diffs;\n        var fdiffs;\n        if (this.options.maxDepth && route.length > this.options.maxDepth) {\n            return [];\n        }\n        // outer differences?\n        if (!t1.outerDone) {\n            diffs = this.findOuterDiff(t1, t2, route);\n            if (this.options.filterOuterDiff) {\n                fdiffs = this.options.filterOuterDiff(t1, t2, diffs);\n                if (fdiffs)\n                    { diffs = fdiffs; }\n            }\n            if (diffs.length > 0) {\n                t1.outerDone = true;\n                return diffs;\n            }\n            else {\n                t1.outerDone = true;\n            }\n        }\n        if (Object.prototype.hasOwnProperty.call(t1, \"data\")) {\n            // Comment or Text\n            return [];\n        }\n        t1 = t1;\n        t2 = t2;\n        // inner differences?\n        if (!t1.innerDone) {\n            diffs = this.findInnerDiff(t1, t2, route);\n            if (diffs.length > 0) {\n                return diffs;\n            }\n            else {\n                t1.innerDone = true;\n            }\n        }\n        if (this.options.valueDiffing && !t1.valueDone) {\n            // value differences?\n            diffs = this.findValueDiff(t1, t2, route);\n            if (diffs.length > 0) {\n                t1.valueDone = true;\n                return diffs;\n            }\n            else {\n                t1.valueDone = true;\n            }\n        }\n        // no differences\n        return [];\n    };\n    DiffFinder.prototype.findOuterDiff = function (t1, t2, route) {\n        var diffs = [];\n        var attr;\n        var attr1;\n        var attr2;\n        var attrLength;\n        var pos;\n        var i;\n        if (t1.nodeName !== t2.nodeName) {\n            if (!route.length) {\n                throw new Error(\"Top level nodes have to be of the same kind.\");\n            }\n            return [\n                new Diff()\n                    .setValue(this.options._const.action, this.options._const.replaceElement)\n                    .setValue(this.options._const.oldValue, cleanNode(t1))\n                    .setValue(this.options._const.newValue, cleanNode(t2))\n                    .setValue(this.options._const.route, route) ];\n        }\n        if (route.length &&\n            this.options.diffcap <\n                Math.abs((t1.childNodes || []).length - (t2.childNodes || []).length)) {\n            return [\n                new Diff()\n                    .setValue(this.options._const.action, this.options._const.replaceElement)\n                    .setValue(this.options._const.oldValue, cleanNode(t1))\n                    .setValue(this.options._const.newValue, cleanNode(t2))\n                    .setValue(this.options._const.route, route) ];\n        }\n        if (Object.prototype.hasOwnProperty.call(t1, \"data\") &&\n            t1.data !== t2.data) {\n            // Comment or text node.\n            if (t1.nodeName === \"#text\") {\n                return [\n                    new Diff()\n                        .setValue(this.options._const.action, this.options._const.modifyTextElement)\n                        .setValue(this.options._const.route, route)\n                        .setValue(this.options._const.oldValue, t1.data)\n                        .setValue(this.options._const.newValue, t2.data) ];\n            }\n            else {\n                return [\n                    new Diff()\n                        .setValue(this.options._const.action, this.options._const.modifyComment)\n                        .setValue(this.options._const.route, route)\n                        .setValue(this.options._const.oldValue, t1.data)\n                        .setValue(this.options._const.newValue, t2.data) ];\n            }\n        }\n        t1 = t1;\n        t2 = t2;\n        attr1 = t1.attributes ? Object.keys(t1.attributes).sort() : [];\n        attr2 = t2.attributes ? Object.keys(t2.attributes).sort() : [];\n        attrLength = attr1.length;\n        for (i = 0; i < attrLength; i++) {\n            attr = attr1[i];\n            pos = attr2.indexOf(attr);\n            if (pos === -1) {\n                diffs.push(new Diff()\n                    .setValue(this.options._const.action, this.options._const.removeAttribute)\n                    .setValue(this.options._const.route, route)\n                    .setValue(this.options._const.name, attr)\n                    .setValue(this.options._const.value, t1.attributes[attr]));\n            }\n            else {\n                attr2.splice(pos, 1);\n                if (t1.attributes[attr] !== t2.attributes[attr]) {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.modifyAttribute)\n                        .setValue(this.options._const.route, route)\n                        .setValue(this.options._const.name, attr)\n                        .setValue(this.options._const.oldValue, t1.attributes[attr])\n                        .setValue(this.options._const.newValue, t2.attributes[attr]));\n                }\n            }\n        }\n        attrLength = attr2.length;\n        for (i = 0; i < attrLength; i++) {\n            attr = attr2[i];\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.addAttribute)\n                .setValue(this.options._const.route, route)\n                .setValue(this.options._const.name, attr)\n                .setValue(this.options._const.value, t2.attributes[attr]));\n        }\n        return diffs;\n    };\n    DiffFinder.prototype.findInnerDiff = function (t1, t2, route) {\n        var t1ChildNodes = t1.childNodes ? t1.childNodes.slice() : [];\n        var t2ChildNodes = t2.childNodes ? t2.childNodes.slice() : [];\n        var last = Math.max(t1ChildNodes.length, t2ChildNodes.length);\n        var childNodesLengthDifference = Math.abs(t1ChildNodes.length - t2ChildNodes.length);\n        var diffs = [];\n        var index = 0;\n        if (!this.options.maxChildCount || last < this.options.maxChildCount) {\n            var cachedSubtrees = Boolean(t1.subsets && t1.subsetsAge--);\n            var subtrees = cachedSubtrees\n                ? t1.subsets\n                : t1.childNodes && t2.childNodes\n                    ? markSubTrees(t1, t2)\n                    : [];\n            if (subtrees.length > 0) {\n                /* One or more groups have been identified among the childnodes of t1\n                 * and t2.\n                 */\n                diffs = this.attemptGroupRelocation(t1, t2, subtrees, route, cachedSubtrees);\n                if (diffs.length > 0) {\n                    return diffs;\n                }\n            }\n        }\n        /* 0 or 1 groups of similar child nodes have been found\n         * for t1 and t2. 1 If there is 1, it could be a sign that the\n         * contents are the same. When the number of groups is below 2,\n         * t1 and t2 are made to have the same length and each of the\n         * pairs of child nodes are diffed.\n         */\n        for (var i = 0; i < last; i += 1) {\n            var e1 = t1ChildNodes[i];\n            var e2 = t2ChildNodes[i];\n            if (childNodesLengthDifference) {\n                /* t1 and t2 have different amounts of childNodes. Add\n                 * and remove as necessary to obtain the same length */\n                if (e1 && !e2) {\n                    if (e1.nodeName === \"#text\") {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.removeTextElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.value, e1.data));\n                        index -= 1;\n                    }\n                    else {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.removeElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.element, cleanNode(e1)));\n                        index -= 1;\n                    }\n                }\n                else if (e2 && !e1) {\n                    if (e2.nodeName === \"#text\") {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.addTextElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.value, e2.data));\n                    }\n                    else {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.addElement)\n                            .setValue(this.options._const.route, route.concat(index))\n                            .setValue(this.options._const.element, cleanNode(e2)));\n                    }\n                }\n            }\n            /* We are now guaranteed that childNodes e1 and e2 exist,\n             * and that they can be diffed.\n             */\n            /* Diffs in child nodes should not affect the parent node,\n             * so we let these diffs be submitted together with other\n             * diffs.\n             */\n            if (e1 && e2) {\n                if (!this.options.maxChildCount ||\n                    last < this.options.maxChildCount) {\n                    diffs = diffs.concat(this.findNextDiff(e1, e2, route.concat(index)));\n                }\n                else if (!isEqual(e1, e2)) {\n                    if (t1ChildNodes.length > t2ChildNodes.length) {\n                        if (e1.nodeName === \"#text\") {\n                            diffs.push(new Diff()\n                                .setValue(this.options._const.action, this.options._const.removeTextElement)\n                                .setValue(this.options._const.route, route.concat(index))\n                                .setValue(this.options._const.value, e1.data));\n                        }\n                        else {\n                            diffs.push(new Diff()\n                                .setValue(this.options._const.action, this.options._const.removeElement)\n                                .setValue(this.options._const.element, cleanNode(e1))\n                                .setValue(this.options._const.route, route.concat(index)));\n                        }\n                        t1ChildNodes.splice(i, 1);\n                        i -= 1;\n                        index -= 1;\n                        childNodesLengthDifference -= 1;\n                    }\n                    else if (t1ChildNodes.length < t2ChildNodes.length) {\n                        var cloneChild = cleanNode(e2);\n                        diffs = diffs.concat([\n                            new Diff()\n                                .setValue(this.options._const.action, this.options._const.addElement)\n                                .setValue(this.options._const.element, cloneChild)\n                                .setValue(this.options._const.route, route.concat(index)) ]);\n                        t1ChildNodes.splice(i, 0, cloneChild);\n                        childNodesLengthDifference -= 1;\n                    }\n                    else {\n                        diffs = diffs.concat([\n                            new Diff()\n                                .setValue(this.options._const.action, this.options._const.replaceElement)\n                                .setValue(this.options._const.oldValue, cleanNode(e1))\n                                .setValue(this.options._const.newValue, cleanNode(e2))\n                                .setValue(this.options._const.route, route.concat(index)) ]);\n                    }\n                }\n            }\n            index += 1;\n        }\n        t1.innerDone = true;\n        return diffs;\n    };\n    DiffFinder.prototype.attemptGroupRelocation = function (t1, t2, subtrees, route, cachedSubtrees) {\n        /* Either t1.childNodes and t2.childNodes have the same length, or\n         * there are at least two groups of similar elements can be found.\n         * attempts are made at equalizing t1 with t2. First all initial\n         * elements with no group affiliation (gaps=true) are removed (if\n         * only in t1) or added (if only in t2). Then the creation of a group\n         * relocation diff is attempted.\n         */\n        var gapInformation = getGapInformation(t1, t2, subtrees);\n        var gaps1 = gapInformation.gaps1;\n        var gaps2 = gapInformation.gaps2;\n        var shortest = Math.min(gaps1.length, gaps2.length);\n        var destinationDifferent;\n        var toGroup;\n        var group;\n        var node;\n        var similarNode;\n        var testI;\n        var diffs = [];\n        for (var index2 = 0, index1 = 0; index2 < shortest; index1 += 1, index2 += 1) {\n            if (cachedSubtrees &&\n                (gaps1[index2] === true || gaps2[index2] === true)) ;\n            else if (gaps1[index2] === true) {\n                node = t1.childNodes[index1];\n                if (node.nodeName === \"#text\") {\n                    if (t2.childNodes[index2].nodeName === \"#text\") {\n                        if (node.data !==\n                            t2.childNodes[index2].data) {\n                            testI = index1;\n                            while (t1.childNodes.length > testI + 1 &&\n                                t1.childNodes[testI + 1].nodeName === \"#text\") {\n                                testI += 1;\n                                if (t2.childNodes[index2]\n                                    .data ===\n                                    t1.childNodes[testI]\n                                        .data) {\n                                    similarNode = true;\n                                    break;\n                                }\n                            }\n                            if (!similarNode) {\n                                diffs.push(new Diff()\n                                    .setValue(this.options._const.action, this.options._const\n                                    .modifyTextElement)\n                                    .setValue(this.options._const.route, route.concat(index2))\n                                    .setValue(this.options._const.oldValue, node.data)\n                                    .setValue(this.options._const.newValue, t2.childNodes[index2].data));\n                                return diffs;\n                            }\n                        }\n                    }\n                    else {\n                        diffs.push(new Diff()\n                            .setValue(this.options._const.action, this.options._const.removeTextElement)\n                            .setValue(this.options._const.route, route.concat(index2))\n                            .setValue(this.options._const.value, node.data));\n                        gaps1.splice(index2, 1);\n                        shortest = Math.min(gaps1.length, gaps2.length);\n                        index2 -= 1;\n                    }\n                }\n                else {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.removeElement)\n                        .setValue(this.options._const.route, route.concat(index2))\n                        .setValue(this.options._const.element, cleanNode(node)));\n                    gaps1.splice(index2, 1);\n                    shortest = Math.min(gaps1.length, gaps2.length);\n                    index2 -= 1;\n                }\n            }\n            else if (gaps2[index2] === true) {\n                node = t2.childNodes[index2];\n                if (node.nodeName === \"#text\") {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.addTextElement)\n                        .setValue(this.options._const.route, route.concat(index2))\n                        .setValue(this.options._const.value, node.data));\n                    gaps1.splice(index2, 0, true);\n                    shortest = Math.min(gaps1.length, gaps2.length);\n                    index1 -= 1;\n                }\n                else {\n                    diffs.push(new Diff()\n                        .setValue(this.options._const.action, this.options._const.addElement)\n                        .setValue(this.options._const.route, route.concat(index2))\n                        .setValue(this.options._const.element, cleanNode(node)));\n                    gaps1.splice(index2, 0, true);\n                    shortest = Math.min(gaps1.length, gaps2.length);\n                    index1 -= 1;\n                }\n            }\n            else if (gaps1[index2] !== gaps2[index2]) {\n                if (diffs.length > 0) {\n                    return diffs;\n                }\n                // group relocation\n                group = subtrees[gaps1[index2]];\n                toGroup = Math.min(group.newValue, t1.childNodes.length - group.length);\n                if (toGroup !== group.oldValue) {\n                    // Check whether destination nodes are different than originating ones.\n                    destinationDifferent = false;\n                    for (var j = 0; j < group.length; j += 1) {\n                        if (!roughlyEqual(t1.childNodes[toGroup + j], t1.childNodes[group.oldValue + j], {}, false, true)) {\n                            destinationDifferent = true;\n                        }\n                    }\n                    if (destinationDifferent) {\n                        return [\n                            new Diff()\n                                .setValue(this.options._const.action, this.options._const.relocateGroup)\n                                .setValue(this.options._const.groupLength, group.length)\n                                .setValue(this.options._const.from, group.oldValue)\n                                .setValue(this.options._const.to, toGroup)\n                                .setValue(this.options._const.route, route) ];\n                    }\n                }\n            }\n        }\n        return diffs;\n    };\n    DiffFinder.prototype.findValueDiff = function (t1, t2, route) {\n        // Differences of value. Only useful if the value/selection/checked value\n        // differs from what is represented in the DOM. For example in the case\n        // of filled out forms, etc.\n        var diffs = [];\n        if (t1.selected !== t2.selected) {\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.modifySelected)\n                .setValue(this.options._const.oldValue, t1.selected)\n                .setValue(this.options._const.newValue, t2.selected)\n                .setValue(this.options._const.route, route));\n        }\n        if ((t1.value || t2.value) &&\n            t1.value !== t2.value &&\n            t1.nodeName !== \"OPTION\") {\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.modifyValue)\n                .setValue(this.options._const.oldValue, t1.value || \"\")\n                .setValue(this.options._const.newValue, t2.value || \"\")\n                .setValue(this.options._const.route, route));\n        }\n        if (t1.checked !== t2.checked) {\n            diffs.push(new Diff()\n                .setValue(this.options._const.action, this.options._const.modifyChecked)\n                .setValue(this.options._const.oldValue, t1.checked)\n                .setValue(this.options._const.newValue, t2.checked)\n                .setValue(this.options._const.route, route));\n        }\n        return diffs;\n    };\n    return DiffFinder;\n}());\n\nvar DEFAULT_OPTIONS = {\n    debug: false,\n    diffcap: 10,\n    maxDepth: false,\n    maxChildCount: 50,\n    valueDiffing: true,\n    // syntax: textDiff: function (node, currentValue, expectedValue, newValue)\n    textDiff: function (node, currentValue, expectedValue, newValue) {\n        node.data = newValue;\n        return;\n    },\n    // empty functions were benchmarked as running faster than both\n    // `f && f()` and `if (f) { f(); }`\n    preVirtualDiffApply: function () { },\n    postVirtualDiffApply: function () { },\n    preDiffApply: function () { },\n    postDiffApply: function () { },\n    filterOuterDiff: null,\n    compress: false,\n    _const: false,\n    document: typeof window !== \"undefined\" && window.document\n        ? window.document\n        : false,\n    components: []\n};\nvar DiffDOM = /** @class */ (function () {\n    function DiffDOM(options) {\n        if (options === void 0) { options = {}; }\n        // IE11 doesn't have Object.assign and buble doesn't translate object spreaders\n        // by default, so this is the safest way of doing it currently.\n        Object.entries(DEFAULT_OPTIONS).forEach(function (_a) {\n            var key = _a[0], value = _a[1];\n            if (!Object.prototype.hasOwnProperty.call(options, key)) {\n                options[key] = value;\n            }\n        });\n        if (!options._const) {\n            var varNames = [\n                \"addAttribute\",\n                \"modifyAttribute\",\n                \"removeAttribute\",\n                \"modifyTextElement\",\n                \"relocateGroup\",\n                \"removeElement\",\n                \"addElement\",\n                \"removeTextElement\",\n                \"addTextElement\",\n                \"replaceElement\",\n                \"modifyValue\",\n                \"modifyChecked\",\n                \"modifySelected\",\n                \"modifyComment\",\n                \"action\",\n                \"route\",\n                \"oldValue\",\n                \"newValue\",\n                \"element\",\n                \"group\",\n                \"groupLength\",\n                \"from\",\n                \"to\",\n                \"name\",\n                \"value\",\n                \"data\",\n                \"attributes\",\n                \"nodeName\",\n                \"childNodes\",\n                \"checked\",\n                \"selected\" ];\n            var constNames_1 = {};\n            if (options.compress) {\n                varNames.forEach(function (varName, index) { return (constNames_1[varName] = index); });\n            }\n            else {\n                varNames.forEach(function (varName) { return (constNames_1[varName] = varName); });\n            }\n            options._const = constNames_1;\n        }\n        this.options = options;\n    }\n    DiffDOM.prototype.apply = function (tree, diffs) {\n        return applyDOM(tree, diffs, this.options);\n    };\n    DiffDOM.prototype.undo = function (tree, diffs) {\n        return undoDOM(tree, diffs, this.options);\n    };\n    DiffDOM.prototype.diff = function (t1Node, t2Node) {\n        var finder = new DiffFinder(t1Node, t2Node, this.options);\n        return finder.init();\n    };\n    return DiffDOM;\n}());\n\n/**\n * Use TraceLogger to figure out function calls inside\n * JS objects by wrapping an object with a TraceLogger\n * instance.\n *\n * Pretty-prints the call trace (using unicode box code)\n * when tracelogger.toString() is called.\n */\n/**\n * Wrap an object by calling new TraceLogger(obj)\n *\n * If you're familiar with Python decorators, this\n * does roughly the same thing, adding pre/post\n * call hook logging calls so that you can see\n * what's going on.\n */\nvar TraceLogger = /** @class */ (function () {\n    function TraceLogger(obj) {\n        if (obj === void 0) { obj = {}; }\n        var _this = this;\n        this.pad = \"│   \";\n        this.padding = \"\";\n        this.tick = 1;\n        this.messages = [];\n        var wrapkey = function (obj, key) {\n            // trace this function\n            var oldfn = obj[key];\n            obj[key] = function () {\n                var arguments$1 = arguments;\n\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments$1[_i];\n                }\n                _this.fin(key, Array.prototype.slice.call(args));\n                var result = oldfn.apply(obj, args);\n                _this.fout(key, result);\n                return result;\n            };\n        };\n        // can't use Object.keys for prototype walking\n        for (var key in obj) {\n            if (typeof obj[key] === \"function\") {\n                wrapkey(obj, key);\n            }\n        }\n        this.log(\"┌ TRACELOG START\");\n    }\n    // called when entering a function\n    TraceLogger.prototype.fin = function (fn, args) {\n        this.padding += this.pad;\n        this.log(\"\\u251C\\u2500> entering \".concat(fn), args);\n    };\n    // called when exiting a function\n    TraceLogger.prototype.fout = function (fn, result) {\n        this.log(\"│<──┘ generated return value\", result);\n        this.padding = this.padding.substring(0, this.padding.length - this.pad.length);\n    };\n    // log message formatting\n    TraceLogger.prototype.format = function (s, tick) {\n        var nf = function (t) {\n            var tStr = \"\".concat(t);\n            while (tStr.length < 4) {\n                tStr = \"0\".concat(t);\n            }\n            return tStr;\n        };\n        return \"\".concat(nf(tick), \"> \").concat(this.padding).concat(s);\n    };\n    // log a trace message\n    TraceLogger.prototype.log = function () {\n        var arguments$1 = arguments;\n\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments$1[_i];\n        }\n        var stringCollapse = function (v) {\n            if (!v) {\n                return \"<falsey>\";\n            }\n            if (typeof v === \"string\") {\n                return v;\n            }\n            if (v instanceof HTMLElement) {\n                return v.outerHTML || \"<empty>\";\n            }\n            if (v instanceof Array) {\n                return \"[\".concat(v.map(stringCollapse).join(\",\"), \"]\");\n            }\n            return v.toString() || v.valueOf() || \"<unknown>\";\n        };\n        var s = args.map(stringCollapse).join(\", \");\n        this.messages.push(this.format(s, this.tick++));\n    };\n    // turn the log into a structured string with\n    // unicode box codes to make it a sensible trace.\n    TraceLogger.prototype.toString = function () {\n        var cap = \"×   \";\n        var terminator = \"└───\";\n        while (terminator.length <= this.padding.length + this.pad.length) {\n            terminator += cap;\n        }\n        var _ = this.padding;\n        this.padding = \"\";\n        terminator = this.format(terminator, this.tick);\n        this.padding = _;\n        return \"\".concat(this.messages.join(\"\\n\"), \"\\n\").concat(terminator);\n    };\n    return TraceLogger;\n}());\n\nexport { DiffDOM, TraceLogger, nodeToObj, stringToObj };\n//# sourceMappingURL=module.js.map\n","import {stringToObj} from \"diff-dom\"\n\nimport {cellType, columnsStateType, columnSettingsType, DataTableOptions, headerCellType, elementNodeType, textNodeType, renderOptions} from \"./types\"\n\n\nexport const headingsToVirtualHeaderRowDOM = (\n    headings,\n    columnSettings,\n    columnsState: columnsStateType,\n    {\n        classes,\n        format,\n        hiddenHeader,\n        sortable,\n        scrollY,\n        type\n    }: DataTableOptions,\n    {\n        noColumnWidths,\n        unhideHeader\n    }: renderOptions\n) => ({\n    nodeName: \"TR\",\n\n    childNodes: headings.map(\n        (heading: headerCellType, index: number) : elementNodeType | void => {\n            const column = columnSettings[index] || ({\n                type,\n                format,\n                sortable: true,\n                searchable: true\n            } as columnSettingsType)\n            if (column.hidden) {\n                return\n            }\n            const attributes : { [key: string]: string} = {}\n            if (column.sortable && sortable && (!scrollY.length || unhideHeader)) {\n                if (column.filter) {\n                    attributes[\"data-filterable\"] = \"true\"\n                } else {\n                    attributes[\"data-sortable\"] = \"true\"\n                }\n            }\n            if (column.headerClass) {\n                attributes.class = column.headerClass\n            }\n            if (columnsState.sort && columnsState.sort.column === index) {\n                const directionClass = columnsState.sort.dir === \"asc\" ? classes.ascending : classes.descending\n                attributes.class = attributes.class ? `${attributes.class} ${directionClass}` : directionClass\n                attributes[\"aria-sort\"] = columnsState.sort.dir === \"asc\" ? \"ascending\" : \"descending\"\n            } else if (columnsState.filters[index]) {\n                attributes.class = attributes.class ? `${attributes.class} ${classes.filterActive}` : classes.filterActive\n            }\n            let style = \"\"\n            if (columnsState.widths[index] && !noColumnWidths) {\n                style += `width: ${columnsState.widths[index]}%;`\n            }\n            if (scrollY.length && !unhideHeader) {\n                style += \"padding-bottom: 0;padding-top: 0;border: 0;\"\n            }\n\n            if (style.length) {\n                attributes.style = style\n            }\n\n            const headerNodes : elementNodeType[] = heading.type === \"html\" ?\n                heading.data as elementNodeType[] :\n                [\n                    {\n                        nodeName: \"#text\",\n                        data: heading.text ?? String(heading.data)\n                    }\n                ] as textNodeType[]\n            return {\n                nodeName: \"TH\",\n                attributes,\n                childNodes:\n                    ((hiddenHeader || scrollY.length) && !unhideHeader) ?\n                        [\n                            {nodeName: \"#text\",\n                                data: \"\"}\n                        ] :\n                        !column.sortable || !sortable ?\n                            headerNodes :\n                            [\n                                {\n                                    nodeName: \"BUTTON\",\n                                    attributes: {\n                                        class: column.filter ? classes.filter : classes.sorter\n                                    },\n                                    childNodes: headerNodes\n                                }\n                            ]\n            }\n        }\n    ).filter((column: (elementNodeType | void)) => column)\n})\n\nexport const dataToVirtualDOM = (tableAttributes: { [key: string]: string}, headings: headerCellType[], rows: {row: cellType[], index: number}[], columnSettings: columnSettingsType[], columnsState: columnsStateType, rowCursor: (number | false), {\n    classes,\n    hiddenHeader,\n    header,\n    footer,\n    format,\n    sortable,\n    scrollY,\n    type,\n    rowRender,\n    tabIndex\n}: DataTableOptions, {\n    noColumnWidths,\n    unhideHeader,\n    renderHeader\n}: renderOptions) => {\n    const table: elementNodeType = {\n        nodeName: \"TABLE\",\n        attributes: {...tableAttributes},\n        childNodes: [\n            {\n                nodeName: \"TBODY\",\n                childNodes: rows.map(\n                    ({\n                        row,\n                        index\n                    }: {row: cellType[], index: number}) => {\n                        const tr: elementNodeType = {\n                            nodeName: \"TR\",\n                            attributes: {\n                                \"data-index\": String(index)\n                            },\n                            childNodes: row.map(\n                                (cell: cellType, cIndex: number) => {\n                                    const column = columnSettings[cIndex] || ({\n                                        type,\n                                        format,\n                                        sortable: true,\n                                        searchable: true\n                                    } as columnSettingsType)\n                                    if (column.hidden) {\n                                        return\n                                    }\n                                    const td : elementNodeType = column.type === \"html\" ?\n                                        {\n                                            nodeName: \"TD\",\n                                            childNodes: cell.data\n                                        } as elementNodeType:\n                                        {\n                                            nodeName: \"TD\",\n                                            childNodes: [\n                                                {\n                                                    nodeName: \"#text\",\n                                                    data: cell.text ?? String(cell.data)\n                                                }\n                                            ]\n                                        } as elementNodeType\n                                    if (!header && !footer && columnsState.widths[cIndex] && !noColumnWidths) {\n                                        td.attributes = {\n                                            style: `width: ${columnsState.widths[cIndex]}%;`\n                                        }\n                                    }\n                                    if (column.cellClass) {\n                                        if (!td.attributes) {\n                                            td.attributes = {}\n                                        }\n                                        td.attributes.class = column.cellClass\n                                    }\n                                    if (column.render) {\n                                        const renderedCell : (string | elementNodeType | void) = column.render(cell.data, td, index, cIndex)\n                                        if (renderedCell) {\n                                            if (typeof renderedCell === \"string\") {\n                                                // Convenience method to make it work similarly to what it did up to version 5.\n                                                const node = stringToObj(`<td>${renderedCell}</td>`)\n\n                                                if (node.childNodes.length !== 1 || ![\"#text\", \"#comment\"].includes(node.childNodes[0].nodeName)) {\n                                                    td.childNodes = node.childNodes\n                                                } else {\n                                                    (td.childNodes[0] as textNodeType).data = renderedCell\n                                                }\n\n                                            } else {\n                                                return renderedCell\n                                            }\n                                        }\n\n                                    }\n                                    return td\n                                }\n                            ).filter((column: (elementNodeType | void)) => column)\n                        }\n                        if (index===rowCursor) {\n                            tr.attributes.class = classes.cursor\n                        }\n                        if (rowRender) {\n                            const renderedRow : (elementNodeType | void) = rowRender(row, tr, index)\n                            if (renderedRow) {\n                                if (typeof renderedRow === \"string\") {\n                                    // Convenience method to make it work similarly to what it did up to version 5.\n                                    const node = stringToObj(`<tr>${renderedRow}</tr>`)\n                                    if (node.childNodes && (node.childNodes.length !== 1 || ![\"#text\", \"#comment\"].includes(node.childNodes[0].nodeName))) {\n                                        tr.childNodes = node.childNodes\n                                    } else {\n                                        (tr.childNodes[0] as textNodeType).data = renderedRow\n                                    }\n\n                                } else {\n                                    return renderedRow\n                                }\n                            }\n                        }\n                        return tr\n                    }\n                )\n            } as elementNodeType\n        ]\n    }\n\n    table.attributes.class = table.attributes.class ? `${table.attributes.class} ${classes.table}` : classes.table\n\n    if (header || footer || renderHeader) {\n        const headerRow: elementNodeType = headingsToVirtualHeaderRowDOM(headings, columnSettings, columnsState, {classes,\n            hiddenHeader,\n            sortable,\n            scrollY}, {noColumnWidths,\n            unhideHeader})\n\n        if (header || renderHeader) {\n            const thead: elementNodeType = {\n                nodeName: \"THEAD\",\n                childNodes: [headerRow]\n            }\n            if ((scrollY.length || hiddenHeader) && !unhideHeader) {\n                thead.attributes = {style: \"height: 0px;\"}\n            }\n            table.childNodes.unshift(thead)\n        }\n        if (footer) {\n            const footerRow = header ? structuredClone(headerRow) : headerRow\n            const tfoot: elementNodeType = {\n                nodeName: \"TFOOT\",\n                childNodes: [footerRow]\n            }\n            if ((scrollY.length || hiddenHeader) && !unhideHeader) {\n                tfoot.attributes = {style: \"height: 0px;\"}\n            }\n            table.childNodes.push(tfoot)\n        }\n\n    }\n\n    if (tabIndex !== false) {\n        table.attributes.tabindex = String(tabIndex)\n    }\n\n    return table\n}\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",f=\"month\",h=\"quarter\",c=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=function(t){return t instanceof _},S=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},w=function(t,e){if(p(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=v;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),l=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return O.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(h){case c:return r?l(1,0):l(31,11);case f:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=h+\"Date\",n[d]=h+\"Date\",n[f]=h+\"Month\",n[c]=h+\"FullYear\",n[u]=h+\"Hours\",n[s]=h+\"Minutes\",n[i]=h+\"Seconds\",n[r]=h+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,l=this;r=Number(r);var $=O.p(h),y=function(t){var e=w(l);return O.w(e.date(e.date()+Math.round(t*r)),l)};if($===f)return this.set(f,this.$M+r);if($===c)return this.set(c,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=O.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,f=n.months,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},c=function(t){return O.s(s%12||12,t,\"0\")},d=n.meridiem||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r},$={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:O.s(a+1,2,\"0\"),MMM:h(n.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,\"0\"),d:String(this.$W),dd:h(n.weekdaysMin,this.$W,o,2),ddd:h(n.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,\"0\"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,\"0\"),s:String(this.$s),ss:O.s(this.$s,2,\"0\"),SSS:O.s(this.$ms,3,\"0\"),Z:i};return r.replace(y,(function(t,e){return e||$[t]||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,v=this-M,g=O.m(this,M);return g=($={},$[c]=g/12,$[f]=g,$[h]=g/3,$[o]=(v-m)/6048e5,$[a]=(v-m)/864e5,$[u]=v/n,$[s]=v/e,$[i]=v/t,$)[y]||v,l?g:O.a(g)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),T=_.prototype;return w.prototype=T,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",f],[\"$y\",c],[\"$D\",d]].forEach((function(t){T[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=D[g],w.Ls=D,w.p={},w}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_customParseFormat=t()}(this,(function(){\"use strict\";var e={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},t=/(\\[[^[]*\\])|([-_:/.,()\\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g,n=/\\d\\d/,r=/\\d\\d?/,i=/\\d*[^-_:/,()\\s\\d]+/,o={},s=function(e){return(e=+e)+(e>68?1900:2e3)};var a=function(e){return function(t){this[e]=+t}},f=[/[+-]\\d\\d:?(\\d\\d)?|Z/,function(e){(this.zone||(this.zone={})).offset=function(e){if(!e)return 0;if(\"Z\"===e)return 0;var t=e.match(/([+-]|\\d\\d)/g),n=60*t[1]+(+t[2]||0);return 0===n?0:\"+\"===t[0]?-n:n}(e)}],h=function(e){var t=o[e];return t&&(t.indexOf?t:t.s.concat(t.f))},u=function(e,t){var n,r=o.meridiem;if(r){for(var i=1;i<=24;i+=1)if(e.indexOf(r(i,0,t))>-1){n=i>12;break}}else n=e===(t?\"pm\":\"PM\");return n},d={A:[i,function(e){this.afternoon=u(e,!1)}],a:[i,function(e){this.afternoon=u(e,!0)}],S:[/\\d/,function(e){this.milliseconds=100*+e}],SS:[n,function(e){this.milliseconds=10*+e}],SSS:[/\\d{3}/,function(e){this.milliseconds=+e}],s:[r,a(\"seconds\")],ss:[r,a(\"seconds\")],m:[r,a(\"minutes\")],mm:[r,a(\"minutes\")],H:[r,a(\"hours\")],h:[r,a(\"hours\")],HH:[r,a(\"hours\")],hh:[r,a(\"hours\")],D:[r,a(\"day\")],DD:[n,a(\"day\")],Do:[i,function(e){var t=o.ordinal,n=e.match(/\\d+/);if(this.day=n[0],t)for(var r=1;r<=31;r+=1)t(r).replace(/\\[|\\]/g,\"\")===e&&(this.day=r)}],M:[r,a(\"month\")],MM:[n,a(\"month\")],MMM:[i,function(e){var t=h(\"months\"),n=(h(\"monthsShort\")||t.map((function(e){return e.slice(0,3)}))).indexOf(e)+1;if(n<1)throw new Error;this.month=n%12||n}],MMMM:[i,function(e){var t=h(\"months\").indexOf(e)+1;if(t<1)throw new Error;this.month=t%12||t}],Y:[/[+-]?\\d+/,a(\"year\")],YY:[n,function(e){this.year=s(e)}],YYYY:[/\\d{4}/,a(\"year\")],Z:f,ZZ:f};function c(n){var r,i;r=n,i=o&&o.formats;for(var s=(n=r.replace(/(\\[[^\\]]+])|(LTS?|l{1,4}|L{1,4})/g,(function(t,n,r){var o=r&&r.toUpperCase();return n||i[r]||e[r]||i[o].replace(/(\\[[^\\]]+])|(MMMM|MM|DD|dddd)/g,(function(e,t,n){return t||n.slice(1)}))}))).match(t),a=s.length,f=0;f<a;f+=1){var h=s[f],u=d[h],c=u&&u[0],l=u&&u[1];s[f]=l?{regex:c,parser:l}:h.replace(/^\\[|\\]$/g,\"\")}return function(e){for(var t={},n=0,r=0;n<a;n+=1){var i=s[n];if(\"string\"==typeof i)r+=i.length;else{var o=i.regex,f=i.parser,h=e.slice(r),u=o.exec(h)[0];f.call(t,u),e=e.replace(u,\"\")}}return function(e){var t=e.afternoon;if(void 0!==t){var n=e.hours;t?n<12&&(e.hours+=12):12===n&&(e.hours=0),delete e.afternoon}}(t),t}}return function(e,t,n){n.p.customParseFormat=!0,e&&e.parseTwoDigitYear&&(s=e.parseTwoDigitYear);var r=t.prototype,i=r.parse;r.parse=function(e){var t=e.date,r=e.utc,s=e.args;this.$u=r;var a=s[1];if(\"string\"==typeof a){var f=!0===s[2],h=!0===s[3],u=f||h,d=s[2];h&&(d=s[2]),o=this.$locale(),!f&&d&&(o=n.Ls[d]),this.$d=function(e,t,n){try{if([\"x\",\"X\"].indexOf(t)>-1)return new Date((\"X\"===t?1e3:1)*e);var r=c(t)(e),i=r.year,o=r.month,s=r.day,a=r.hours,f=r.minutes,h=r.seconds,u=r.milliseconds,d=r.zone,l=new Date,m=s||(i||o?1:l.getDate()),M=i||l.getFullYear(),Y=0;i&&!o||(Y=o>0?o-1:l.getMonth());var p=a||0,v=f||0,D=h||0,g=u||0;return d?new Date(Date.UTC(M,Y,m,p,v,D,g+60*d.offset*1e3)):n?new Date(Date.UTC(M,Y,m,p,v,D,g)):new Date(M,Y,m,p,v,D,g)}catch(e){return new Date(\"\")}}(t,a,r),this.init(),d&&!0!==d&&(this.$L=this.locale(d).$L),u&&t!=this.format(a)&&(this.$d=new Date(\"\")),o={}}else if(a instanceof Array)for(var l=a.length,m=1;m<=l;m+=1){s[1]=a[m-1];var M=n.apply(this,s);if(M.isValid()){this.$d=M.$d,this.$L=M.$L,this.init();break}m===l&&(this.$d=new Date(\"\"))}else i.call(this,e)}}}));","import dayjs from \"dayjs\"\nimport customParseFormat from \"dayjs/plugin/customParseFormat\"\n\ndayjs.extend(customParseFormat)\n\n/**\n * Use dayjs to parse cell contents for sorting\n */\nexport const parseDate = (content: string, format: string) => {\n    let date: number | string\n\n    // Converting to YYYYMMDD ensures we can accurately sort the column numerically\n\n    if (format) {\n        switch (format) {\n        case \"ISO_8601\":\n            // ISO8601 is already lexiographically sorted, so we can just sort it as a string.\n            date = content\n            break\n        case \"RFC_2822\":\n            date = dayjs(content.slice(5), \"DD MMM YYYY HH:mm:ss ZZ\").unix()\n            break\n        case \"MYSQL\":\n            date = dayjs(content, \"YYYY-MM-DD hh:mm:ss\").unix()\n            break\n        case \"UNIX\":\n            date = dayjs(content).unix()\n            break\n        // User defined format using the data-format attribute or columns[n].format option\n        default:\n            date = dayjs(content, format, true).valueOf()\n            break\n        }\n    }\n    return date\n}\n","import {stringToObj, nodeToObj} from \"diff-dom\"\nimport {parseDate} from \"./date\"\nimport {objToText} from \"./helpers\"\nimport {cellType, DataOption, headerCellType, inputCellType, inputHeaderCellType, nodeType, columnSettingsType} from \"./types\"\n\nexport const readDataCell = (cell: inputCellType, columnSettings : columnSettingsType) : cellType => {\n    if (cell?.constructor === Object && Object.prototype.hasOwnProperty.call(cell, \"data\") && !Object.keys(cell).find(key => !([\"text\", \"order\", \"data\"].includes(key)))) {\n        return (cell as cellType)\n    }\n    const cellData : cellType = {\n        data: cell\n    }\n    switch (columnSettings.type) {\n    case \"string\":\n        if (!(typeof cell === \"string\")) {\n            cellData.text = String(cellData.data)\n            cellData.order = cellData.text\n        }\n        break\n    case \"date\":\n        if (columnSettings.format) {\n            cellData.order = parseDate(String(cellData.data), columnSettings.format)\n        }\n        break\n    case \"number\":\n        cellData.text = String(cellData.data as number)\n        cellData.data = parseInt(cellData.data as string, 10)\n        break\n    case \"html\": {\n        const node = Array.isArray(cellData.data) ?\n            {nodeName: \"TD\",\n                childNodes: (cellData.data as nodeType[])} : // If it is an array, we assume it is an array of nodeType\n            stringToObj(`<td>${String(cellData.data)}</td>`)\n        cellData.data = node.childNodes || []\n        const text = objToText(node)\n        cellData.text = text\n        cellData.order = text\n        break\n    }\n    case \"boolean\":\n        if (typeof cellData.data === \"string\") {\n            cellData.data = cellData.data.toLowerCase().trim()\n        }\n        cellData.data = ![\"false\", false, null, undefined, 0].includes(cellData.data as (string | number | boolean | null | undefined))\n        cellData.order = cellData.data ? 1 : 0\n        cellData.text = String(cellData.data)\n        break\n    case \"other\":\n        cellData.text = \"\"\n        cellData.order = 0\n        break\n    default:\n        cellData.text = JSON.stringify(cellData.data)\n        break\n    }\n\n    return cellData\n}\n\nconst readDOMDataCell = (cell: HTMLElement, columnSettings : columnSettingsType) : cellType => {\n    let cellData : cellType\n    switch (columnSettings.type) {\n    case \"string\":\n        cellData = {\n            data: cell.innerText\n        }\n        break\n    case \"date\": {\n        const data = cell.innerText\n        cellData = {\n            data,\n            order: parseDate(data, columnSettings.format)\n        }\n        break\n    }\n    case \"number\":\n        cellData = {\n            data: parseInt(cell.innerText, 10),\n            text: cell.innerText\n        }\n        break\n    case \"boolean\": {\n        const data = ![\"false\", \"0\", \"null\", \"undefined\"].includes(cell.innerText.toLowerCase().trim())\n        cellData = {\n            data,\n            order: data ? 1 : 0,\n            text: data ? \"1\" : \"0\"\n        }\n        break\n    }\n    default: { // \"html\", \"other\"\n        const node = nodeToObj(cell, {valueDiffing: false})\n        cellData = {\n            data: node.childNodes || [],\n            text: cell.innerText,\n            order: cell.innerText\n        }\n        break\n    }\n    }\n\n    return cellData\n}\n\n\nexport const readHeaderCell = (cell: inputHeaderCellType) : headerCellType => {\n    if (\n        cell instanceof Object &&\n        cell.constructor === Object &&\n        cell.hasOwnProperty(\"data\") &&\n        (typeof cell.text === \"string\" || typeof cell.data === \"string\")\n    ) {\n        return cell\n    }\n    const cellData : headerCellType = {\n        data: cell\n    }\n    if (typeof cell === \"string\") {\n        if (cell.length) {\n            const node = stringToObj(`<th>${cell}</th>`)\n            if (node.childNodes && (node.childNodes.length !== 1 || node.childNodes[0].nodeName !== \"#text\")) {\n                cellData.data = node.childNodes\n                cellData.type = \"html\"\n                const text = objToText(node)\n                cellData.text = text\n            }\n        }\n\n    } else if ([null, undefined].includes(cell)) {\n        cellData.text = \"\"\n    } else {\n        cellData.text = JSON.stringify(cell)\n    }\n    return cellData\n}\n\nexport const readDOMHeaderCell = (cell: HTMLElement) : headerCellType => {\n    const node = nodeToObj(cell, {valueDiffing: false})\n    let cellData\n    if (node.childNodes && (node.childNodes.length !== 1 || node.childNodes[0].nodeName !== \"#text\")) {\n        cellData = {\n            data: node.childNodes,\n            type: \"html\",\n            text: objToText(node)\n        }\n    } else {\n        cellData = {\n            data: cell.innerText,\n            type: \"string\"\n        }\n    }\n    return cellData\n\n}\n\nexport const readTableData = (dataOption: DataOption, dom: (HTMLTableElement | undefined)=undefined, columnSettings, defaultType, defaultFormat) => {\n\n    const data = {\n        data: [],\n        headings: []\n    }\n    if (dataOption.headings) {\n        data.headings = dataOption.headings.map((heading: inputHeaderCellType) => readHeaderCell(heading))\n    } else if (dom?.tHead) {\n        data.headings = Array.from(dom.tHead.querySelectorAll(\"th\")).map((th, index) => {\n            const heading = readDOMHeaderCell(th)\n            if (!columnSettings[index]) {\n                columnSettings[index] = {\n                    type: defaultType,\n                    format: defaultFormat,\n                    searchable: true,\n                    sortable: true\n                }\n            }\n            const settings = columnSettings[index]\n            if (th.dataset.sortable?.trim().toLowerCase() === \"false\" || th.dataset.sort?.trim().toLowerCase() === \"false\") {\n                settings.sortable = false\n            }\n            if (th.dataset.searchable?.trim().toLowerCase() === \"false\") {\n                settings.searchable = false\n            }\n            if (th.dataset.hidden?.trim().toLowerCase() === \"true\" || th.getAttribute(\"hidden\")?.trim().toLowerCase() === \"true\") {\n                settings.hidden = true\n            }\n            if ([\"number\", \"string\", \"html\", \"date\", \"boolean\", \"other\"].includes(th.dataset.type)) {\n                settings.type = th.dataset.type\n                if (settings.type === \"date\" && th.dataset.format) {\n                    settings.format = th.dataset.format\n                }\n            }\n            return heading\n        })\n    } else if (dataOption.data?.length) {\n        data.headings = dataOption.data[0].map((_cell: inputCellType) => readHeaderCell(\"\"))\n    } else if (dom?.tBodies.length) {\n        data.headings = Array.from(dom.tBodies[0].rows[0].cells).map((_cell: HTMLElement) => readHeaderCell(\"\"))\n    }\n    for (let i=0; i<data.headings.length; i++) {\n        // Make sure that there are settings for all columns\n        if (!columnSettings[i]) {\n            columnSettings[i] = {\n                type: defaultType,\n                format: defaultFormat,\n                sortable: true,\n                searchable: true\n            }\n        }\n    }\n    if (dataOption.data) {\n        data.data = dataOption.data.map((row: inputCellType[]) => row.map((cell: inputCellType, index: number) => readDataCell(cell, columnSettings[index])))\n    } else if (dom?.tBodies?.length) {\n        data.data = Array.from(dom.tBodies[0].rows).map(\n            row => Array.from(row.cells).map(\n                (cell, index) => {\n                    const cellData = cell.dataset.content ?\n                        readDataCell(cell.dataset.content, columnSettings[index]) :\n                        readDOMDataCell(cell, columnSettings[index])\n                    if (cell.dataset.order) {\n                        cellData.order = isNaN(parseFloat(cell.dataset.order)) ? cell.dataset.order : parseFloat(cell.dataset.order)\n                    }\n                    return cellData\n\n                }\n            )\n        )\n    }\n\n    if (data.data.length && data.data[0].length !== data.headings.length) {\n        throw new Error(\n            \"Data heading length mismatch.\"\n        )\n    }\n    return data\n}\n","import {readDataCell} from \"./read_data\"\nimport {DataTable} from \"./datatable\"\nimport {cellType, inputCellType} from \"./types\"\n/**\n * Rows API\n */\nexport class Rows {\n    cursor: (false | number)\n\n    dt: DataTable\n\n    constructor(dt: DataTable) {\n        this.dt = dt\n\n        this.cursor = false\n    }\n\n    setCursor(index: (false | number) = false) {\n        if (index === this.cursor) {\n            return\n        }\n        const oldCursor = this.cursor\n        this.cursor = index\n        this.dt._renderTable()\n        if (index !== false && this.dt.options.scrollY) {\n            const cursorDOM = this.dt.dom.querySelector(`tr.${this.dt.options.classes.cursor}`)\n            if (cursorDOM) {\n                cursorDOM.scrollIntoView({block: \"nearest\"})\n            }\n        }\n        this.dt.emit(\"datatable.cursormove\", this.cursor, oldCursor)\n    }\n\n    /**\n     * Add new row\n     */\n    add(data: cellType[]) {\n        const row = data.map((cell: cellType, index: number) => {\n            const columnSettings = this.dt.columns.settings[index]\n            return readDataCell(cell, columnSettings)\n        })\n        this.dt.data.data.push(row)\n\n        // We may have added data to an empty table\n        if ( this.dt.data.data.length ) {\n            this.dt.hasRows = true\n        }\n        this.dt.update(true)\n    }\n\n    /**\n     * Remove row(s)\n     */\n    remove(select: number | number[]) {\n        if (Array.isArray(select)) {\n            this.dt.data.data = this.dt.data.data.filter((_row: cellType[], index: number) => !select.includes(index))\n            // We may have emptied the table\n            if ( !this.dt.data.data.length ) {\n                this.dt.hasRows = false\n            }\n            this.dt.update(true)\n        } else {\n            return this.remove([select])\n        }\n    }\n\n\n    /**\n     * Find index of row by searching for a value in a column\n     */\n    findRowIndex(columnIndex: number, value: string | boolean | number) {\n        // returns row index of first case-insensitive string match\n        // inside the td innerText at specific column index\n        return this.dt.data.data.findIndex(\n            (row: cellType[]) => (row[columnIndex].text ?? String(row[columnIndex].data)).toLowerCase().includes(String(value).toLowerCase())\n        )\n    }\n\n    /**\n     * Find index, row, and column data by searching for a value in a column\n     */\n    findRow(columnIndex: number, value: string | boolean | number) {\n        // get the row index\n        const index = this.findRowIndex(columnIndex, value)\n        // exit if not found\n        if (index < 0) {\n            return {\n                index: -1,\n                row: null,\n                cols: []\n            }\n        }\n        // get the row from data\n        const row = this.dt.data.data[index]\n        // return innerHTML of each td\n        const cols = row.map((cell: cellType) => cell.data)\n        // return everything\n        return {\n            index,\n            row,\n            cols\n        }\n    }\n\n    /**\n     * Update a row with new data\n     */\n    updateRow(select: number, data: inputCellType[]) {\n        const row = data.map((cell: inputCellType, index: number) => {\n            const columnSettings = this.dt.columns.settings[index]\n            return readDataCell(cell, columnSettings)\n        })\n        this.dt.data.data.splice(select, 1, row)\n        this.dt.update(true)\n    }\n}\n","import {readDataCell, readHeaderCell} from \"./read_data\"\nimport {DataTable} from \"./datatable\"\nimport {cellType, columnsStateType, headerCellType, inputCellType, inputHeaderCellType, elementNodeType, columnSettingsType} from \"./types\"\nimport {readColumnSettings} from \"./column_settings\"\n\n\nexport class Columns {\n    dt: DataTable\n\n    settings: columnSettingsType[]\n\n    _state: columnsStateType\n\n    constructor(dt: DataTable) {\n        this.dt = dt\n        this.init()\n    }\n\n    init() {\n        [this.settings, this._state] = readColumnSettings(this.dt.options.columns, this.dt.options.type, this.dt.options.format)\n    }\n\n    /**\n     * Swap two columns\n     */\n    swap(columns: [number, number]) {\n        if (columns.length === 2) {\n            // Get the current column indexes\n            const cols = this.dt.data.headings.map((_node: headerCellType, index: number) => index)\n\n            const x = columns[0]\n            const y = columns[1]\n            const b = cols[y]\n            cols[y] = cols[x]\n            cols[x] = b\n\n            return this.order(cols)\n        }\n    }\n\n    /**\n     * Reorder the columns\n     */\n    order(columns: number[]) {\n\n        this.dt.data.headings = columns.map((index: number) => this.dt.data.headings[index])\n        this.dt.data.data = this.dt.data.data.map(\n            (row: cellType[]) => columns.map((index: number) => row[index])\n        )\n        this.settings = columns.map(\n            (index: number) => this.settings[index]\n        )\n\n        // Update\n        this.dt.update()\n    }\n\n    /**\n     * Hide columns\n     */\n    hide(columns: number[]) {\n        if (!columns.length) {\n            return\n        }\n        columns.forEach((index: number) => {\n            if (!this.settings[index]) {\n                this.settings[index] = {\n                    type: \"string\"\n                }\n            }\n            const column = this.settings[index]\n            column.hidden = true\n        })\n\n        this.dt.update()\n    }\n\n    /**\n     * Show columns\n     */\n    show(columns: number[]) {\n        if (!columns.length) {\n            return\n        }\n        columns.forEach((index: number) => {\n            if (!this.settings[index]) {\n                this.settings[index] = {\n                    type: \"string\",\n                    sortable: true\n                }\n            }\n            const column = this.settings[index]\n            delete column.hidden\n        })\n\n        this.dt.update()\n    }\n\n    /**\n     * Check column(s) visibility\n     */\n    visible(columns: number | number[] | undefined) {\n\n        if (columns === undefined) {\n            columns = [...Array(this.dt.data.headings.length).keys()]\n        }\n        if (Array.isArray(columns)) {\n            return columns.map(index => !this.settings[index]?.hidden)\n        }\n        return !this.settings[columns]?.hidden\n\n    }\n\n    /**\n     * Add a new column\n     */\n    add(data: {data: inputCellType[], heading: inputHeaderCellType} & columnSettingsType) {\n        const newColumnSelector = this.dt.data.headings.length\n        this.dt.data.headings = this.dt.data.headings.concat([readHeaderCell(data.heading)])\n        this.dt.data.data = this.dt.data.data.map(\n            (row: cellType[], index: number) => row.concat([readDataCell(data.data[index], data)])\n        )\n        this.settings[newColumnSelector] = {\n            type: data.type || \"string\",\n            sortable: true,\n            searchable: true\n        }\n        if (data.type || data.format || data.sortable || data.render || data.filter) {\n            const column = this.settings[newColumnSelector]\n\n            if (data.render) {\n                column.render = data.render\n            }\n\n            if (data.format) {\n                column.format = data.format\n            }\n\n            if (data.cellClass) {\n                column.cellClass = data.cellClass\n            }\n\n            if (data.headerClass) {\n                column.headerClass = data.headerClass\n            }\n\n            if (data.locale) {\n                column.locale = data.locale\n            }\n\n            if (data.sortable === false) {\n                column.sortable = false\n            } else {\n                if (data.numeric) {\n                    column.numeric = data.numeric\n                }\n                if (data.caseFirst) {\n                    column.caseFirst = data.caseFirst\n                }\n            }\n\n            if (data.searchable === false) {\n                column.searchable = false\n            } else {\n                if (data.sensitivity) {\n                    column.sensitivity = data.sensitivity\n                }\n            }\n\n            if (column.searchable || column.sortable) {\n                if (data.ignorePunctuation) {\n                    column.ignorePunctuation = data.ignorePunctuation\n                }\n            }\n\n            if (data.hidden) {\n                column.hidden = true\n            }\n\n            if (data.filter) {\n                column.filter = data.filter\n            }\n\n            if (data.sortSequence) {\n                column.sortSequence = data.sortSequence\n            }\n        }\n        this.dt.update(true)\n    }\n\n    /**\n     * Remove column(s)\n     */\n    remove(columns: number[]) {\n        if (Array.isArray(columns)) {\n            this.dt.data.headings = this.dt.data.headings.filter((_heading: headerCellType, index: number) => !columns.includes(index))\n            this.dt.data.data = this.dt.data.data.map(\n                (row: cellType[]) => row.filter((_cell: cellType, index: number) => !columns.includes(index))\n            )\n            this.dt.update(true)\n        } else {\n            return this.remove([columns])\n        }\n    }\n\n    /**\n     * Filter by column\n     */\n    filter(column: number, init = false) {\n\n        if (!this.settings[column]?.filter?.length) {\n            // There is no filter to apply.\n            return\n        }\n\n        const currentFilter = this._state.filters[column]\n        let newFilterState\n        if (currentFilter) {\n            let returnNext = false\n            newFilterState = this.settings[column].filter.find((filter: (string | number | boolean | elementNodeType[] | object | ((arg: (string | number | boolean | elementNodeType[] | object)) => boolean))) => {\n                if (returnNext) {\n                    return true\n                }\n                if (filter === currentFilter) {\n                    returnNext = true\n                }\n                return false\n            })\n        } else {\n            const filter = this.settings[column].filter\n            newFilterState = filter ? filter[0] : undefined\n        }\n\n        if (newFilterState) {\n            this._state.filters[column] = newFilterState\n        } else if (currentFilter) {\n            this._state.filters[column] = undefined\n        }\n        this.dt._currentPage = 1\n        this.dt.update()\n\n        if (!init) {\n            this.dt.emit(\"datatable.filter\", column, newFilterState)\n        }\n    }\n\n    /**\n     * Sort by column\n     */\n    sort(index: number, dir: (\"asc\" | \"desc\" | undefined) = undefined, init = false) {\n        const column = this.settings[index]\n\n        if (!init) {\n            this.dt.emit(\"datatable.sorting\", index, dir)\n        }\n\n        if (!dir) {\n            const currentDir = this._state.sort && this._state.sort.column === index ? this._state.sort?.dir : false\n            const sortSequence = column?.sortSequence || [\"asc\", \"desc\"]\n            if (!currentDir) {\n                dir = sortSequence.length ? sortSequence[0] : \"asc\"\n            } else {\n                const currentDirIndex = sortSequence.indexOf(currentDir)\n                if (currentDirIndex === -1) {\n                    dir = sortSequence[0] || \"asc\"\n                } else if (currentDirIndex === sortSequence.length -1) {\n                    dir = sortSequence[0]\n                } else {\n                    dir = sortSequence[currentDirIndex + 1]\n                }\n            }\n\n        }\n\n        const collator = [\"string\", \"html\"].includes(column.type) ?\n            new Intl.Collator(column.locale || this.dt.options.locale, {\n                usage: \"sort\",\n                numeric: column.numeric || this.dt.options.numeric,\n                caseFirst: column.caseFirst || this.dt.options.caseFirst,\n                ignorePunctuation: column.ignorePunctuation|| this.dt.options.ignorePunctuation\n            }) :\n            false\n\n        this.dt.data.data.sort((row1: cellType[], row2: cellType[]) => {\n            let order1 = row1[index].order || row1[index].data,\n                order2 = row2[index].order || row2[index].data\n            if (dir === \"desc\") {\n                const temp = order1\n                order1 = order2\n                order2 = temp\n            }\n            if (collator) {\n                return collator.compare(String(order1), String(order2))\n            }\n            if (order1 < order2) {\n                return -1\n            } else if (order1 > order2) {\n                return 1\n            }\n            return 0\n        })\n\n        this._state.sort = {column: index,\n            dir}\n        if (this.dt._searchQueries.length) {\n            this.dt.multiSearch(this.dt._searchQueries)\n            this.dt.emit(\"datatable.sort\", index, dir)\n        } else if (!init) {\n            this.dt._currentPage = 1\n            this.dt.update()\n            this.dt.emit(\"datatable.sort\", index, dir)\n        }\n    }\n\n    /**\n     * Measure the actual width of cell content by rendering the entire table with all contents.\n     * Note: Destroys current DOM and therefore requires subsequent dt.update()\n     */\n    _measureWidths() {\n        const activeHeadings = this.dt.data.headings.filter((heading: headerCellType, index: number) => !this.settings[index]?.hidden)\n        if ((this.dt.options.scrollY.length || this.dt.options.fixedColumns) && activeHeadings?.length) {\n\n            this._state.widths = []\n            const renderOptions: {noPaging?: true, noColumnWidths?: true, unhideHeader?: true, renderHeader?: true} = {\n                noPaging: true\n            }\n            // If we have headings we need only set the widths on them\n            // otherwise we need a temp header and the widths need applying to all cells\n            if (this.dt.options.header || this.dt.options.footer) {\n\n                if (this.dt.options.scrollY.length) {\n                    renderOptions.unhideHeader = true\n                }\n                if (this.dt.headerDOM) {\n                    // Remove headerDOM for accurate measurements\n                    this.dt.headerDOM.parentElement.removeChild(this.dt.headerDOM)\n                }\n\n                // Reset widths\n                renderOptions.noColumnWidths = true\n                this.dt._renderTable(renderOptions)\n\n                const activeDOMHeadings : HTMLTableCellElement[] = Array.from(this.dt.dom.querySelector(\"thead, tfoot\")?.firstElementChild?.querySelectorAll(\"th\") || [])\n                let domCounter = 0\n                const absoluteColumnWidths = this.dt.data.headings.map((_heading: headerCellType, index: number) => {\n                    if (this.settings[index]?.hidden) {\n                        return 0\n                    }\n                    const width = activeDOMHeadings[domCounter].offsetWidth\n                    domCounter += 1\n                    return width\n\n                })\n                const totalOffsetWidth = absoluteColumnWidths.reduce(\n                    (total, cellWidth) => total + cellWidth,\n                    0\n                )\n                this._state.widths = absoluteColumnWidths.map(cellWidth => cellWidth / totalOffsetWidth * 100)\n\n            } else {\n                renderOptions.renderHeader = true\n                this.dt._renderTable(renderOptions)\n\n                const activeDOMHeadings: HTMLTableCellElement[] = Array.from(this.dt.dom.querySelector(\"thead, tfoot\")?.firstElementChild?.querySelectorAll(\"th\") || [])\n                let domCounter = 0\n                const absoluteColumnWidths = this.dt.data.headings.map((_heading: headerCellType, index: number) => {\n                    if (this.settings[index]?.hidden) {\n                        return 0\n                    }\n                    const width = activeDOMHeadings[domCounter].offsetWidth\n                    domCounter += 1\n                    return width\n\n                })\n                const totalOffsetWidth = absoluteColumnWidths.reduce(\n                    (total, cellWidth) => total + cellWidth,\n                    0\n                )\n                this._state.widths = absoluteColumnWidths.map(cellWidth => cellWidth / totalOffsetWidth * 100)\n            }\n            // render table without options for measurements\n            this.dt._renderTable()\n        }\n    }\n}\n","import {\n    columnsStateType,\n    filterStateType,\n    columnSettingsType\n} from \"./types\"\n\nexport const readColumnSettings = (columnOptions = [], defaultType, defaultFormat) : [columnSettingsType[], columnsStateType] => {\n\n    let columns: (columnSettingsType | undefined)[] = []\n    let sort: (false | {column: number, dir: \"asc\" | \"desc\"}) = false\n    const filters: (filterStateType | undefined )[] = []\n\n    // Check for the columns option\n\n    columnOptions.forEach(data => {\n\n        // convert single column selection to array\n        const columnSelectors = Array.isArray(data.select) ? data.select : [data.select]\n\n        columnSelectors.forEach((selector: number) => {\n            if (!columns[selector]) {\n                columns[selector] = {\n                    type: data.type || defaultType,\n                    sortable: true,\n                    searchable: true\n                }\n            }\n            const column = columns[selector]\n\n\n            if (data.render) {\n                column.render = data.render\n            }\n\n            if (data.format) {\n                column.format = data.format\n            } else if (data.type === \"date\") {\n                column.format = defaultFormat\n            }\n\n            if (data.cellClass) {\n                column.cellClass = data.cellClass\n            }\n\n            if (data.headerClass) {\n                column.headerClass = data.headerClass\n            }\n\n            if (data.locale) {\n                column.locale = data.locale\n            }\n\n            if (data.sortable === false) {\n                column.sortable = false\n            } else {\n                if (data.numeric) {\n                    column.numeric = data.numeric\n                }\n                if (data.caseFirst) {\n                    column.caseFirst = data.caseFirst\n                }\n            }\n\n            if (data.searchable === false) {\n                column.searchable = false\n            } else {\n                if (data.sensitivity) {\n                    column.sensitivity = data.sensitivity\n                }\n            }\n\n            if (column.searchable || column.sortable) {\n                if (typeof data.ignorePunctuation !== \"undefined\") {\n                    column.ignorePunctuation = data.ignorePunctuation\n                }\n            }\n\n            if (data.hidden) {\n                column.hidden = true\n            }\n\n            if (data.filter) {\n                column.filter = data.filter\n            }\n\n            if (data.sortSequence) {\n                column.sortSequence = data.sortSequence\n            }\n\n            if (data.sort) {\n                if (data.filter) {\n                    filters[selector] = data.sort\n                } else {\n                    // We only allow one. The last one will overwrite all other options\n                    sort = {column: selector,\n                        dir: data.sort}\n                }\n            }\n\n            if (typeof data.searchItemSeparator !== \"undefined\") {\n                column.searchItemSeparator = data.searchItemSeparator\n            }\n\n        })\n\n\n    })\n\n    columns = columns.map(column => column ?\n        column :\n        {type: defaultType,\n            format: defaultType === \"date\" ? defaultFormat : undefined,\n            sortable: true,\n            searchable: true})\n\n    const widths = [] // Width are determined later on by measuring on screen.\n\n    return [\n        columns, {filters,\n            sort,\n            widths}\n    ]\n\n}\n","// Template for custom layouts\nexport const layoutTemplate = (options, dom) => `<div class='${options.classes.top}'>\n    ${\n    options.paging && options.perPageSelect ?\n        `<div class='${options.classes.dropdown}'>\n            <label>\n                <select class='${options.classes.selector}'></select> ${options.labels.perPage}\n            </label>\n        </div>` :\n        \"\"\n}\n    ${\n    options.searchable ?\n        `<div class='${options.classes.search}'>\n            <input class='${options.classes.input}' placeholder='${options.labels.placeholder}' type='search' title='${options.labels.searchTitle}'${dom.id ? ` aria-controls=\"${dom.id}\"` : \"\"}>\n        </div>` :\n        \"\"\n}\n</div>\n<div class='${options.classes.container}'${options.scrollY.length ? ` style='height: ${options.scrollY}; overflow-Y: auto;'` : \"\"}></div>\n<div class='${options.classes.bottom}'>\n    ${\n    options.paging ?\n        `<div class='${options.classes.info}'></div>` :\n        \"\"\n}\n    <nav class='${options.classes.pagination}'></nav>\n</div>`\n","import {DataTableConfiguration} from \"./types\"\nimport {layoutTemplate} from \"./templates\"\n/**\n * Default configuration\n */\nexport const defaultConfig: DataTableConfiguration = {\n    // for sorting\n    sortable: true,\n    locale: \"en\",\n    numeric: true,\n    caseFirst: \"false\",\n\n    // for searching\n    searchable: true,\n    sensitivity: \"base\",\n    ignorePunctuation: true,\n    destroyable: true,\n    searchItemSeparator: \"\", // If specified, splits the content of cells up using this separator before performing search.\n    searchQuerySeparator: \" \",\n    searchAnd: false,\n\n    // data\n    data: {},\n    type: \"html\", // Default data type for columns.\n    format: \"YYYY-MM-DD\",\n    columns: [],\n\n    // Pagination\n    paging: true,\n    perPage: 10,\n    perPageSelect: [5, 10, 15, 20, 25],\n    nextPrev: true,\n    firstLast: false,\n    prevText: \"‹\",\n    nextText: \"›\",\n    firstText: \"«\",\n    lastText: \"»\",\n    ellipsisText: \"…\",\n    truncatePager: true,\n    pagerDelta: 2,\n\n    scrollY: \"\",\n\n    fixedColumns: true,\n    fixedHeight: false,\n\n    footer: false,\n    header: true,\n    hiddenHeader: false,\n\n    rowNavigation: false,\n    tabIndex: false,\n\n    // for overriding rendering\n    pagerRender: false,\n    rowRender: false,\n    tableRender: false,\n    diffDomOptions: {\n        valueDiffing: false\n    },\n\n    // Customise the display text\n    labels: {\n        placeholder: \"Search...\", // The search input placeholder\n        searchTitle: \"Search within table\", // The search input title\n        perPage: \"entries per page\", // per-page dropdown label\n        pageTitle: \"Page {page}\", // page label used in Aria-label\n        noRows: \"No entries found\", // Message shown when there are no records to show\n        noResults: \"No results match your search query\", // Message shown when there are no search results\n        info: \"Showing {start} to {end} of {rows} entries\" //\n    },\n\n    // Customise the layout\n    template: layoutTemplate,\n\n    // Customize the class names used by datatable for different parts\n    classes: { // Note: use single class names\n        active: \"datatable-active\",\n        ascending: \"datatable-ascending\",\n        bottom: \"datatable-bottom\",\n        container: \"datatable-container\",\n        cursor: \"datatable-cursor\",\n        descending: \"datatable-descending\",\n        disabled: \"datatable-disabled\",\n        dropdown: \"datatable-dropdown\",\n        ellipsis: \"datatable-ellipsis\",\n        filter: \"datatable-filter\",\n        filterActive: \"datatable-filter-active\",\n        empty: \"datatable-empty\",\n        headercontainer: \"datatable-headercontainer\",\n        hidden: \"datatable-hidden\",\n        info: \"datatable-info\",\n        input: \"datatable-input\",\n        loading: \"datatable-loading\",\n        pagination: \"datatable-pagination\",\n        paginationList: \"datatable-pagination-list\",\n        paginationListItem: \"datatable-pagination-list-item\",\n        paginationListItemLink: \"datatable-pagination-list-item-link\",\n        search: \"datatable-search\",\n        selector: \"datatable-selector\",\n        sorter: \"datatable-sorter\",\n        table: \"datatable-table\",\n        top: \"datatable-top\",\n        wrapper: \"datatable-wrapper\"\n    }\n}\n","import {DataTableConfiguration, elementNodeType} from \"./types\"\n\n/**\n * Pager truncation algorithm\n */\nconst truncate = (paginationListItems: elementNodeType[], currentPage: number, pagesLength: number, options: DataTableConfiguration) : elementNodeType[] => {\n    const pagerDelta = options.pagerDelta\n    const classes = options.classes\n    const ellipsisText = options.ellipsisText\n\n    const doublePagerDelta = 2 * pagerDelta\n    let previousPage = currentPage - pagerDelta\n    let nextPage = currentPage + pagerDelta\n\n    if (currentPage < 4 - pagerDelta + doublePagerDelta) {\n        nextPage = 3 + doublePagerDelta\n    } else if (currentPage > pagesLength - (3 - pagerDelta + doublePagerDelta)) {\n        previousPage = pagesLength - (2 + doublePagerDelta)\n    }\n    const paginationListItemsToModify: elementNodeType[] = []\n    for (let k = 1; k <= pagesLength; k++) {\n        if (1 == k || k == pagesLength || (k >= previousPage && k <= nextPage)) {\n            const li = paginationListItems[k - 1]\n            paginationListItemsToModify.push(li)\n        }\n    }\n    let previousLi: elementNodeType\n    const modifiedLis: elementNodeType[] = []\n    paginationListItemsToModify.forEach(li => {\n        const pageNumber = parseInt((li.childNodes[0] as elementNodeType).attributes[\"data-page\"], 10)\n        if (previousLi) {\n            const previousPageNumber = parseInt((previousLi.childNodes[0] as elementNodeType).attributes[\"data-page\"], 10)\n            if (pageNumber - previousPageNumber == 2) {\n                modifiedLis.push(paginationListItems[previousPageNumber])\n            } else if (pageNumber - previousPageNumber != 1) {\n                const newLi: elementNodeType = {\n                    nodeName: \"LI\",\n                    attributes: {\n                        class: `${classes.paginationListItem} ${classes.ellipsis} ${classes.disabled}`\n                    },\n                    childNodes: [\n                        {\n                            nodeName: \"BUTTON\",\n                            attributes: {\n                                class: classes.paginationListItemLink\n                            },\n                            childNodes: [\n                                {\n                                    nodeName: \"#text\",\n                                    data: ellipsisText\n                                }\n                            ]\n                        }\n                    ]\n                }\n                modifiedLis.push(newLi)\n            }\n        }\n        modifiedLis.push(li)\n        previousLi = li\n    })\n\n    return modifiedLis\n}\n\n\nconst paginationListItem = (page: number, label: string, options: DataTableConfiguration, state: {active?: boolean, hidden?: boolean} = {}) : elementNodeType => ({\n    nodeName: \"LI\",\n    attributes: {\n        class:\n        (state.active && !state.hidden) ?\n            `${options.classes.paginationListItem} ${options.classes.active}` :\n            state.hidden ?\n                `${options.classes.paginationListItem} ${options.classes.hidden} ${options.classes.disabled}` :\n                options.classes.paginationListItem\n    },\n    childNodes: [\n        {\n            nodeName: \"BUTTON\",\n            attributes: {\n                \"data-page\": String(page),\n                class: options.classes.paginationListItemLink,\n                \"aria-label\": options.labels.pageTitle.replace(\"{page}\", String(page))\n            },\n            childNodes: [\n                {\n                    nodeName: \"#text\",\n                    data: label\n                }\n            ]\n        }\n    ]\n})\n\nexport const createVirtualPagerDOM = (onFirstPage: boolean, onLastPage: boolean, currentPage: number, totalPages: number, options) => {\n\n    let pagerListItems : elementNodeType[] = []\n\n    // first button\n    if (options.firstLast) {\n        pagerListItems.push(paginationListItem(1, options.firstText, options))\n    }\n\n    // prev button\n    if (options.nextPrev) {\n        const prev = onFirstPage ? 1 : currentPage - 1\n        pagerListItems.push(paginationListItem(prev, options.prevText, options, {hidden: onFirstPage}))\n    }\n\n    let pages = [...Array(totalPages).keys()].map(index => paginationListItem(index+1, String(index+1), options, {active: (index === (currentPage-1))}))\n\n    if (options.truncatePager) {\n        // truncate the paginationListItems\n        pages = truncate(\n            pages,\n            currentPage,\n            totalPages,\n            options\n        )\n\n    }\n\n    // append the paginationListItems\n    pagerListItems = pagerListItems.concat(pages)\n\n    // next button\n    if (options.nextPrev) {\n        const next = onLastPage ? totalPages : currentPage + 1\n        pagerListItems.push(paginationListItem(next, options.nextText, options, {hidden: onLastPage}))\n    }\n\n    // last button\n    if (options.firstLast) {\n        pagerListItems.push(paginationListItem(totalPages, options.lastText, options))\n    }\n\n    const pager : elementNodeType = {\n        nodeName: \"UL\",\n        attributes: {\n            class: options.classes.paginationList\n        },\n        childNodes: pages.length > 1 ? pagerListItems : [] // Don't show single page\n    }\n\n    return pager\n\n}\n","import {\n    isObject,\n    createElement,\n    visibleToColumnIndex\n} from \"./helpers\"\nimport {\n    cellType,\n    DataTableConfiguration,\n    DataTableOptions,\n    filterStateType,\n    headerCellType,\n    inputCellType,\n    elementNodeType,\n    renderOptions,\n    TableDataType\n} from \"./types\"\nimport {DiffDOM, nodeToObj} from \"diff-dom\"\n\nimport {dataToVirtualDOM, headingsToVirtualHeaderRowDOM} from \"./virtual_dom\"\nimport {readTableData, readDataCell, readHeaderCell} from \"./read_data\"\nimport {Rows} from \"./rows\"\nimport {Columns} from \"./columns\"\nimport {defaultConfig} from \"./config\"\nimport {createVirtualPagerDOM} from \"./virtual_pager_dom\"\n\n\nexport class DataTable {\n\n    columns: Columns\n\n    containerDOM: HTMLDivElement\n\n    _currentPage: number\n\n    data: TableDataType\n\n    _dd: DiffDOM\n\n    dom: HTMLTableElement\n\n    _events: { [key: string]: ((...args) => void)[]}\n\n    hasHeadings: boolean\n\n    hasRows: boolean\n\n    headerDOM: HTMLDivElement\n\n    _initialInnerHTML: string\n\n    initialized: boolean\n\n    _label: HTMLElement\n\n    lastPage: number\n\n    _listeners: { [key: string]: () => void}\n\n    onFirstPage: boolean\n\n    onLastPage: boolean\n\n    options: DataTableConfiguration\n\n    _pagerDOMs: HTMLElement[]\n\n    _virtualPagerDOM: elementNodeType\n\n    pages: {row: cellType[], index: number}[][]\n\n    _rect: {width: number, height: number}\n\n    rows: Rows\n\n    _searchData: number[]\n\n    _searchQueries: {terms: string[], columns: (number[] | undefined)}[]\n\n    _tableAttributes: { [key: string]: string}\n\n    totalPages: number\n\n    _virtualDOM: elementNodeType\n\n    _virtualHeaderDOM: elementNodeType\n\n    wrapperDOM: HTMLElement\n\n    constructor(table: HTMLTableElement | string, options: DataTableOptions = {}) {\n\n\n        const dom = typeof table === \"string\" ?\n            document.querySelector(table) :\n            table\n\n        if (dom instanceof HTMLTableElement) {\n            this.dom = dom\n        } else {\n            this.dom = document.createElement(\"table\")\n            dom.appendChild(this.dom)\n        }\n\n        const diffDomOptions = {\n            ...defaultConfig.diffDomOptions,\n            ...options.diffDomOptions\n        }\n\n        const labels = {\n            ...defaultConfig.labels,\n            ...options.labels\n        }\n\n        const classes = {\n            ...defaultConfig.classes,\n            ...options.classes\n        }\n\n        // user options\n        this.options = {\n            ...defaultConfig,\n            ...options,\n            diffDomOptions,\n            labels,\n            classes\n        }\n\n        this._initialInnerHTML = this.options.destroyable ? this.dom.innerHTML : \"\" // preserve in case of later destruction\n\n        if (this.options.tabIndex) {\n            this.dom.tabIndex = this.options.tabIndex\n        } else if (this.options.rowNavigation && this.dom.tabIndex === -1) {\n            this.dom.tabIndex = 0\n        }\n\n        this._listeners = {\n            onResize: () => this._onResize()\n        }\n\n        this._dd = new DiffDOM(this.options.diffDomOptions || {})\n\n        this.initialized = false\n        this._events = {}\n\n        this._currentPage = 0\n        this.onFirstPage = true\n        this.hasHeadings = false\n        this.hasRows = false\n        this._searchQueries = []\n\n        this.init()\n    }\n\n    /**\n     * Initialize the instance\n     */\n    init() {\n        if (this.initialized || this.dom.classList.contains(this.options.classes.table)) {\n            return false\n        }\n\n        this._virtualDOM = nodeToObj(this.dom, this.options.diffDomOptions || {})\n\n        this._tableAttributes = {...this._virtualDOM.attributes}\n\n        this.rows = new Rows(this)\n        this.columns = new Columns(this)\n\n        this.data = readTableData(this.options.data, this.dom, this.columns.settings, this.options.type, this.options.format)\n\n        this._render()\n\n        setTimeout(() => {\n            this.emit(\"datatable.init\")\n            this.initialized = true\n        }, 10)\n    }\n\n\n    /**\n     * Render the instance\n     */\n    _render() {\n\n        // Build\n        this.wrapperDOM = createElement(\"div\", {\n            class: `${this.options.classes.wrapper} ${this.options.classes.loading}`\n        })\n\n        this.wrapperDOM.innerHTML = this.options.template(this.options, this.dom)\n\n        const selector = this.wrapperDOM.querySelector(`select.${this.options.classes.selector}`)\n\n        // Per Page Select\n        if (selector && this.options.paging && this.options.perPageSelect) {\n\n            // Create the options\n            this.options.perPageSelect.forEach((choice: number | [string, number]) => {\n                const [lab, val] = Array.isArray(choice) ? [choice[0], choice[1]] : [String(choice), choice]\n                const selected = val === this.options.perPage\n                const option = new Option(lab, String(val), selected, selected)\n                selector.appendChild(option)\n            })\n\n        } else if (selector) {\n            selector.parentElement.removeChild(selector)\n        }\n\n        this.containerDOM = this.wrapperDOM.querySelector(`.${this.options.classes.container}`)\n\n        this._pagerDOMs = []\n        Array.from(this.wrapperDOM.querySelectorAll(`.${this.options.classes.pagination}`)).forEach(el => {\n            if (!(el instanceof HTMLElement)) {\n                return\n            }\n            // We remove the inner part of the pager containers to ensure they are all the same.\n            el.innerHTML = `<ul class=\"${this.options.classes.paginationList}\"></ul>`\n            this._pagerDOMs.push(el.firstElementChild as HTMLElement)\n        })\n\n        this._virtualPagerDOM = {\n            nodeName: \"UL\",\n            attributes: {\n                class: this.options.classes.paginationList\n            }\n        }\n\n\n        this._label = this.wrapperDOM.querySelector(`.${this.options.classes.info}`)\n\n        // Insert in to DOM tree\n        this.dom.parentElement.replaceChild(this.wrapperDOM, this.dom)\n        this.containerDOM.appendChild(this.dom)\n\n        // Store the table dimensions\n        this._rect = this.dom.getBoundingClientRect()\n\n        // // Fix height\n        this._fixHeight()\n        //\n\n\n        // Class names\n        if (!this.options.header) {\n            this.wrapperDOM.classList.add(\"no-header\")\n        }\n\n        if (!this.options.footer) {\n            this.wrapperDOM.classList.add(\"no-footer\")\n        }\n\n        if (this.options.sortable) {\n            this.wrapperDOM.classList.add(\"sortable\")\n        }\n\n        if (this.options.searchable) {\n            this.wrapperDOM.classList.add(\"searchable\")\n        }\n\n        if (this.options.fixedHeight) {\n            this.wrapperDOM.classList.add(\"fixed-height\")\n        }\n\n        if (this.options.fixedColumns) {\n            this.wrapperDOM.classList.add(\"fixed-columns\")\n        }\n\n        this._bindEvents()\n\n        if (this.columns._state.sort) {\n            this.columns.sort(this.columns._state.sort.column, this.columns._state.sort.dir, true)\n        }\n\n        this.update(true)\n    }\n\n    _renderTable(renderOptions: renderOptions ={}) {\n        let newVirtualDOM = dataToVirtualDOM(\n            this._tableAttributes,\n            this.data.headings,\n            (this.options.paging || this._searchQueries.length || this.columns._state.filters.length) && this._currentPage && this.pages.length && !renderOptions.noPaging ?\n                this.pages[this._currentPage - 1] :\n                this.data.data.map((row, index) => ({\n                    row,\n                    index\n                })),\n            this.columns.settings,\n            this.columns._state,\n            this.rows.cursor,\n            this.options,\n            renderOptions\n        )\n\n        if (this.options.tableRender) {\n            const renderedTableVirtualDOM : (elementNodeType | void) = this.options.tableRender(this.data, newVirtualDOM, \"main\")\n            if (renderedTableVirtualDOM) {\n                newVirtualDOM = renderedTableVirtualDOM\n            }\n        }\n        const diff = this._dd.diff(this._virtualDOM, newVirtualDOM)\n        this._dd.apply(this.dom, diff)\n        this._virtualDOM = newVirtualDOM\n    }\n\n    /**\n     * Render the page\n     * @return {Void}\n     */\n    _renderPage(lastRowCursor=false) {\n        if (this.hasRows && this.totalPages) {\n            if (this._currentPage > this.totalPages) {\n                this._currentPage = 1\n            }\n\n            // Use a fragment to limit touching the DOM\n            this._renderTable()\n\n            this.onFirstPage = this._currentPage === 1\n            this.onLastPage = this._currentPage === this.lastPage\n        } else {\n            this.setMessage(this.options.labels.noRows)\n        }\n\n        // Update the info\n        let current = 0\n\n        let f = 0\n        let t = 0\n        let items\n\n        if (this.totalPages) {\n            current = this._currentPage - 1\n            f = current * this.options.perPage\n            t = f + this.pages[current].length\n            f = f + 1\n            items = this._searchQueries.length ? this._searchData.length : this.data.data.length\n        }\n\n        if (this._label && this.options.labels.info.length) {\n            // CUSTOM LABELS\n            const string = this.options.labels.info\n                .replace(\"{start}\", String(f))\n                .replace(\"{end}\", String(t))\n                .replace(\"{page}\", String(this._currentPage))\n                .replace(\"{pages}\", String(this.totalPages))\n                .replace(\"{rows}\", String(items))\n\n            this._label.innerHTML = items ? string : \"\"\n        }\n\n        if (this._currentPage == 1) {\n            this._fixHeight()\n        }\n\n        if (this.options.rowNavigation && this._currentPage) {\n            if (!this.rows.cursor || !this.pages[this._currentPage-1].find(\n                row => row.index === this.rows.cursor)\n            ) {\n                const rows = this.pages[this._currentPage-1]\n                if (rows.length) {\n                    if (lastRowCursor) {\n                        this.rows.setCursor(rows[rows.length-1].index)\n                    } else {\n                        this.rows.setCursor(rows[0].index)\n                    }\n                }\n            }\n        }\n    }\n\n    /** Render the pager(s)\n     *\n     */\n    _renderPagers() {\n        if (!this.options.paging) {\n            return\n        }\n        let newPagerVirtualDOM = createVirtualPagerDOM(this.onFirstPage, this.onLastPage, this._currentPage, this.totalPages, this.options)\n\n        if (this.options.pagerRender) {\n            const renderedPagerVirtualDOM : (elementNodeType | void) = this.options.pagerRender([this.onFirstPage, this.onLastPage, this._currentPage, this.totalPages], newPagerVirtualDOM)\n            if (renderedPagerVirtualDOM) {\n                newPagerVirtualDOM = renderedPagerVirtualDOM\n            }\n        }\n\n        const diffs = this._dd.diff(this._virtualPagerDOM, newPagerVirtualDOM)\n        // We may have more than one pager\n        this._pagerDOMs.forEach((pagerDOM: HTMLElement) => {\n            this._dd.apply(pagerDOM, diffs)\n        })\n\n        this._virtualPagerDOM = newPagerVirtualDOM\n    }\n\n    // Render header that is not in the same table element as the remainder\n    // of the table. Used for tables with scrollY.\n    _renderSeparateHeader() {\n        const container = this.dom.parentElement\n        if (!this.headerDOM) {\n            this.headerDOM = document.createElement(\"div\")\n            this._virtualHeaderDOM = {\n                nodeName: \"DIV\"\n            }\n\n        }\n        container.parentElement.insertBefore(this.headerDOM, container)\n        let tableVirtualDOM : elementNodeType = {\n            nodeName: \"TABLE\",\n            attributes: this._tableAttributes,\n            childNodes: [\n                {\n                    nodeName: \"THEAD\",\n                    childNodes: [\n                        headingsToVirtualHeaderRowDOM(\n                            this.data.headings, this.columns.settings, this.columns._state, this.options, {unhideHeader: true})\n                    ]\n\n                }\n\n            ]\n        }\n        tableVirtualDOM.attributes.class = tableVirtualDOM.attributes.class ? `${tableVirtualDOM.attributes.class} ${this.options.classes.table}` : this.options.classes.table\n        if (this.options.tableRender) {\n            const renderedTableVirtualDOM : (elementNodeType | void) = this.options.tableRender(this.data, tableVirtualDOM, \"header\")\n            if (renderedTableVirtualDOM) {\n                tableVirtualDOM = renderedTableVirtualDOM\n            }\n        }\n\n        const newVirtualHeaderDOM = {\n            nodeName: \"DIV\",\n            attributes: {\n                class: this.options.classes.headercontainer\n            },\n            childNodes: [tableVirtualDOM]\n        }\n\n        const diff = this._dd.diff(this._virtualHeaderDOM, newVirtualHeaderDOM)\n        this._dd.apply(this.headerDOM, diff)\n        this._virtualHeaderDOM = newVirtualHeaderDOM\n\n        // Compensate for scrollbars\n        const paddingRight = this.headerDOM.firstElementChild.clientWidth - this.dom.clientWidth\n        if (paddingRight) {\n            const paddedVirtualHeaderDOM = structuredClone(this._virtualHeaderDOM)\n            paddedVirtualHeaderDOM.attributes.style = `padding-right: ${paddingRight}px;`\n            const diff = this._dd.diff(this._virtualHeaderDOM, paddedVirtualHeaderDOM)\n            this._dd.apply(this.headerDOM, diff)\n            this._virtualHeaderDOM = paddedVirtualHeaderDOM\n        }\n\n        if (container.scrollHeight > container.clientHeight) {\n            // scrollbars on one page means scrollbars on all pages.\n            container.style.overflowY = \"scroll\"\n        }\n    }\n\n    /**\n     * Bind event listeners\n     * @return {[type]} [description]\n     */\n    _bindEvents() {\n        // Per page selector\n        if (this.options.perPageSelect) {\n            const selector = this.wrapperDOM.querySelector(`select.${this.options.classes.selector}`)\n            if (selector && selector instanceof HTMLSelectElement) {\n                // Change per page\n                selector.addEventListener(\"change\", () => {\n                    this.options.perPage = parseInt(selector.value, 10)\n                    this.update()\n\n                    this._fixHeight()\n\n                    this.emit(\"datatable.perpage\", this.options.perPage)\n                }, false)\n            }\n        }\n\n        // Search input\n        if (this.options.searchable) {\n            this.wrapperDOM.addEventListener(\"input\", (event: InputEvent) => {\n                const target = event.target\n                if (!(target instanceof HTMLInputElement) || !target.matches(`.${this.options.classes.input}`)) {\n                    return\n                }\n                event.preventDefault()\n\n                const searches: { terms: string[], columns: (number[] | undefined) }[] = []\n                const searchFields = Array.from(this.wrapperDOM.querySelectorAll(`.${this.options.classes.input}`)) as HTMLInputElement[]\n                searchFields.filter(\n                    el => el.value.length\n                ).forEach(\n                    el => {\n                        const andSearch = el.dataset.and || this.options.searchAnd\n                        const querySeparator = el.dataset.querySeparator || this.options.searchQuerySeparator\n                        const terms = querySeparator ? el.value.split(this.options.searchQuerySeparator) : [el.value]\n                        if (andSearch) {\n                            terms.forEach(term => {\n                                if (el.dataset.columns) {\n                                    searches.push({\n                                        terms: [term],\n                                        columns: (JSON.parse(el.dataset.columns) as number[])\n                                    })\n                                } else {\n                                    searches.push({terms: [term],\n                                        columns: undefined})\n                                }\n                            })\n                        } else {\n                            if (el.dataset.columns) {\n                                searches.push({\n                                    terms,\n                                    columns: (JSON.parse(el.dataset.columns) as number[])\n                                })\n                            } else {\n                                searches.push({terms,\n                                    columns: undefined})\n                            }\n                        }\n\n                    }\n                )\n                if (searches.length === 1 && searches[0].terms.length === 1) {\n                    const search = searches[0]\n                    this.search(search.terms[0], search.columns)\n                } else {\n                    this.multiSearch(searches)\n                }\n            })\n        }\n\n        // Pager(s) / sorting\n        this.wrapperDOM.addEventListener(\"click\", (event: Event) => {\n            const target = event.target as Element\n            const hyperlink = target.closest(\"a, button\")\n            if (!hyperlink) {\n                return\n            }\n\n            if (hyperlink.hasAttribute(\"data-page\")) {\n                this.page(parseInt(hyperlink.getAttribute(\"data-page\"), 10))\n                event.preventDefault()\n            } else if (\n                hyperlink.classList.contains(this.options.classes.sorter)\n            ) {\n                const visibleIndex = Array.from(hyperlink.parentElement.parentElement.children).indexOf(hyperlink.parentElement)\n                const columnIndex = visibleToColumnIndex(visibleIndex, this.columns.settings)\n                this.columns.sort(columnIndex)\n                event.preventDefault()\n            } else if (\n                hyperlink.classList.contains(this.options.classes.filter)\n            ) {\n                const visibleIndex = Array.from(hyperlink.parentElement.parentElement.children).indexOf(hyperlink.parentElement)\n                const columnIndex = visibleToColumnIndex(visibleIndex, this.columns.settings)\n                this.columns.filter(columnIndex)\n                event.preventDefault()\n            }\n        }, false)\n\n        if (this.options.rowNavigation) {\n            this.dom.addEventListener(\"keydown\", (event: KeyboardEvent) => {\n                if (event.key === \"ArrowUp\") {\n                    event.preventDefault()\n                    event.stopPropagation()\n                    let lastRow\n                    this.pages[this._currentPage-1].find((row: {row: cellType[], index: number}) => {\n                        if (row.index===this.rows.cursor) {\n                            return true\n                        }\n                        lastRow = row\n                        return false\n                    })\n                    if (lastRow) {\n                        this.rows.setCursor(lastRow.index)\n                    } else if (!this.onFirstPage) {\n                        this.page(this._currentPage-1, true)\n                    }\n                } else if (event.key === \"ArrowDown\") {\n                    event.preventDefault()\n                    event.stopPropagation()\n                    let foundRow: boolean\n                    const nextRow = this.pages[this._currentPage-1].find((row: {row: cellType[], index: number}) => {\n                        if (foundRow) {\n                            return true\n                        }\n                        if (row.index===this.rows.cursor) {\n                            foundRow = true\n                        }\n                        return false\n                    })\n                    if (nextRow) {\n                        this.rows.setCursor(nextRow.index)\n                    } else if (!this.onLastPage) {\n                        this.page(this._currentPage+1)\n                    }\n                } else if ([\"Enter\", \" \"].includes(event.key)) {\n                    this.emit(\"datatable.selectrow\", this.rows.cursor, event)\n                }\n            })\n            this.dom.addEventListener(\"mousedown\", (event: Event) => {\n                const target = event.target\n                if (!(target instanceof Element)) {\n                    return\n                }\n                if (this.dom.matches(\":focus\")) {\n                    const row = Array.from(this.dom.querySelectorAll(\"body tr\")).find(row => row.contains(target))\n                    if (row && row instanceof HTMLElement) {\n                        this.emit(\"datatable.selectrow\", parseInt(row.dataset.index, 10), event)\n                    }\n                }\n\n            })\n        } else {\n            this.dom.addEventListener(\"mousedown\", (event: Event) => {\n                const target = event.target\n                if (!(target instanceof Element)) {\n                    return\n                }\n                const row = Array.from(this.dom.querySelectorAll(\"body tr\")).find(row => row.contains(target))\n                if (row && row instanceof HTMLElement) {\n                    this.emit(\"datatable.selectrow\", parseInt(row.dataset.index, 10), event)\n                }\n            })\n        }\n\n        window.addEventListener(\"resize\", this._listeners.onResize)\n    }\n\n    /**\n     * execute on resize\n     */\n    _onResize() {\n        this._rect = this.containerDOM.getBoundingClientRect()\n        if (!this._rect.width) {\n            // No longer shown, likely no longer part of DOM. Give up.\n            return\n        }\n        this.update(true)\n    }\n\n    /**\n     * Destroy the instance\n     * @return {void}\n     */\n    destroy() {\n        if (!this.options.destroyable) {\n            return\n        }\n        this.dom.innerHTML = this._initialInnerHTML\n\n        // Remove the className\n        this.dom.classList.remove(this.options.classes.table)\n\n        // Remove the containers\n        if (this.wrapperDOM.parentElement) {\n            this.wrapperDOM.parentElement.replaceChild(this.dom, this.wrapperDOM)\n        }\n\n        this.initialized = false\n\n        window.removeEventListener(\"resize\", this._listeners.onResize)\n    }\n\n    /**\n     * Update the instance\n     * @return {Void}\n     */\n    update(measureWidths = false) {\n        if (measureWidths) {\n            this.columns._measureWidths()\n            this.hasRows = Boolean(this.data.data.length)\n            this.hasHeadings = Boolean(this.data.headings.length)\n        }\n        this.wrapperDOM.classList.remove(this.options.classes.empty)\n\n        this._paginate()\n        this._renderPage()\n\n        this._renderPagers()\n\n        if (this.options.scrollY.length) {\n            this._renderSeparateHeader()\n        }\n\n        this.emit(\"datatable.update\")\n    }\n\n    _paginate() {\n        let rows = this.data.data.map((row, index) => ({\n            row,\n            index\n        }))\n\n        if (this._searchQueries.length) {\n            rows = []\n\n            this._searchData.forEach((index: number) => rows.push({index,\n                row: this.data.data[index]}))\n        }\n\n        if (this.columns._state.filters.length) {\n            this.columns._state.filters.forEach(\n                (filterState: (filterStateType | undefined), column: number) => {\n                    if (!filterState) {\n                        return\n                    }\n                    rows = rows.filter(\n                        (row: {index: number, row: cellType[]}) => typeof filterState === \"function\" ? filterState(row.row[column].data) : (row.row[column].text ?? row.row[column].data) === filterState\n                    )\n                }\n            )\n        }\n\n        if (this.options.paging && this.options.perPage > 0) {\n            // Check for hidden columns\n            this.pages = rows\n                .map((row: {row: cellType[], index: number}, i: number) => i % this.options.perPage === 0 ? rows.slice(i, i + this.options.perPage) : null)\n                .filter((page: {row: cellType[], index: number}[]) => page)\n        } else {\n            this.pages = [rows]\n        }\n\n        this.totalPages = this.lastPage = this.pages.length\n\n        if (!this._currentPage) {\n            this._currentPage = 1\n        }\n        return this.totalPages\n    }\n\n    /**\n     * Fix the container height\n     */\n    _fixHeight() {\n        if (this.options.fixedHeight) {\n            this.containerDOM.style.height = null\n            this._rect = this.containerDOM.getBoundingClientRect()\n            this.containerDOM.style.height = `${this._rect.height}px`\n        }\n    }\n\n    /**\n     * Perform a simple search of the data set\n     */\n    search(term: string, columns: (number[] | undefined ) = undefined) {\n\n        if (!term.length) {\n            this._currentPage = 1\n            this._searchQueries = []\n            this._searchData = []\n            this.update()\n            this.emit(\"datatable.search\", \"\", [])\n            this.wrapperDOM.classList.remove(\"search-results\")\n            return false\n        }\n\n        this.multiSearch([\n            {terms: [term],\n                columns: columns ? columns : undefined}\n        ])\n\n        this.emit(\"datatable.search\", term, this._searchData)\n\n    }\n\n    /**\n     * Perform a search of the data set seraching for up to multiple strings in various columns\n     */\n    multiSearch(rawQueries : {terms: string[], columns: (number[] | undefined)}[]) {\n        if (!this.hasRows) return false\n\n        this._currentPage = 1\n        this._searchData = []\n        // Remove empty queries\n        const queries = rawQueries.map(query => ({\n            columns: query.columns,\n            terms: query.terms.map(term => term.trim()).filter(term => term)\n        })).filter(query => query.terms.length\n        )\n\n        this._searchQueries = queries\n\n        if (!queries.length) {\n            this.update()\n            this.emit(\"datatable.multisearch\", queries, this._searchData)\n            this.wrapperDOM.classList.remove(\"search-results\")\n            return false\n        }\n        const queryWords = queries.map(query => this.columns.settings.map(\n            (column, index) => {\n                if (column.hidden || !column.searchable || (query.columns && !query.columns.includes(index))) {\n                    return false\n                }\n                let columnQueries = query.terms\n                const sensitivity = column.sensitivity || this.options.sensitivity\n                if ([\"base\", \"accent\"].includes(sensitivity)) {\n                    columnQueries = columnQueries.map(query => query.toLowerCase())\n                }\n                if ([\"base\", \"case\"].includes(sensitivity)) {\n                    columnQueries = columnQueries.map(query => query.normalize(\"NFD\").replace(/\\p{Diacritic}/gu, \"\"))\n                }\n                const ignorePunctuation = column.ignorePunctuation ?? this.options.ignorePunctuation\n                if (ignorePunctuation) {\n                    columnQueries = columnQueries.map(query => query.replace(/[.,/#!$%^&*;:{}=-_`~()]/g, \"\"))\n                }\n                return columnQueries\n            }\n        ))\n        this.data.data.forEach((row: cellType[], idx: number) => {\n            const searchRow = row.map((cell, i) => {\n                let content = (cell.text || String(cell.data)).trim()\n                const column = this.columns.settings[i]\n                if (content.length) {\n                    const sensitivity = column.sensitivity || this.options.sensitivity\n                    if ([\"base\", \"accent\"].includes(sensitivity)) {\n                        content = content.toLowerCase()\n                    }\n                    if ([\"base\", \"case\"].includes(sensitivity)) {\n                        content = content.normalize(\"NFD\").replace(/\\p{Diacritic}/gu, \"\")\n                    }\n                    const ignorePunctuation = column.ignorePunctuation ?? this.options.ignorePunctuation\n                    if (ignorePunctuation) {\n                        content = content.replace(/[.,/#!$%^&*;:{}=-_`~()]/g, \"\")\n                    }\n                }\n                const searchItemSeparator = column.searchItemSeparator || this.options.searchItemSeparator\n                return searchItemSeparator ? content.split(searchItemSeparator) : [content]\n            })\n            if (\n                queryWords.every(\n                    queries => queries.find(\n                        (query, index) => query ?\n                            query.find(queryWord => searchRow[index].find(searchItem => searchItem.includes(queryWord))) :\n                            false\n                    )\n                )\n            ) {\n                this._searchData.push(idx)\n            }\n\n        })\n\n        this.wrapperDOM.classList.add(\"search-results\")\n        if (this._searchData.length) {\n            this.update()\n        } else {\n            this.wrapperDOM.classList.remove(\"search-results\")\n\n            this.setMessage(this.options.labels.noResults)\n        }\n\n        this.emit(\"datatable.multisearch\", queries, this._searchData)\n    }\n\n    /**\n     * Change page\n     */\n    page(page: number, lastRowCursor = false) {\n        // We don't want to load the current page again.\n        if (page === this._currentPage) {\n            return false\n        }\n\n        if (!isNaN(page)) {\n            this._currentPage = page\n        }\n\n        if (page > this.pages.length || page < 0) {\n            return false\n        }\n\n        this._renderPage(lastRowCursor)\n        this._renderPagers()\n\n        this.emit(\"datatable.page\", page)\n    }\n\n    /**\n     * Add new row data\n     */\n    insert(data: (\n        {headings?: string[], data?: inputCellType[][]} | { [key: string]: inputCellType}[])) {\n        let rows: cellType[][] = []\n        if (Array.isArray(data)) {\n            const headings = this.data.headings.map((heading: headerCellType) => heading.text ?? String(heading.data))\n            data.forEach((row, rIndex) => {\n                const r: cellType[] = []\n                Object.entries(row).forEach(([heading, cell]) => {\n\n                    const index = headings.indexOf(heading)\n\n                    if (index > -1) {\n                        r[index] = readDataCell(cell as inputCellType, this.columns.settings[index])\n                    } else if (!this.hasHeadings && !this.hasRows && rIndex === 0) {\n                        r[headings.length] = readDataCell(cell as inputCellType, this.columns.settings[headings.length])\n                        headings.push(heading)\n                        this.data.headings.push(readHeaderCell(heading))\n                    }\n                })\n                rows.push(r)\n            })\n        } else if (isObject(data)) {\n            if (data.headings && !this.hasHeadings && !this.hasRows) {\n                this.data = readTableData(data, undefined, this.columns.settings, this.options.type, this.options.format)\n            } else if (data.data && Array.isArray(data.data)) {\n                rows = data.data.map(row => row.map((cell, index) => readDataCell(cell as inputCellType, this.columns.settings[index])))\n            }\n        }\n        if (rows.length) {\n            rows.forEach((row: cellType[]) => this.data.data.push(row))\n        }\n        this.hasHeadings = Boolean(this.data.headings.length)\n\n        if (this.columns._state.sort) {\n            this.columns.sort(this.columns._state.sort.column, this.columns._state.sort.dir, true)\n        }\n\n        this.update(true)\n    }\n\n    /**\n     * Refresh the instance\n     */\n    refresh() {\n        if (this.options.searchable) {\n            (Array.from(this.wrapperDOM.querySelectorAll(`.${this.options.classes.input}`)) as HTMLInputElement[]).forEach(\n                el => {\n                    el.value = \"\"\n                }\n            )\n            this._searchQueries = []\n        }\n        this._currentPage = 1\n        this.onFirstPage = true\n        this.update(true)\n\n        this.emit(\"datatable.refresh\")\n    }\n\n    /**\n     * Print the table\n     */\n    print() {\n        const tableDOM = createElement(\"table\")\n        const tableVirtualDOM = {nodeName: \"TABLE\"}\n        let newTableVirtualDOM = dataToVirtualDOM(\n            this._tableAttributes,\n            this.data.headings,\n            this.data.data.map((row, index) => ({\n                row,\n                index\n            })),\n            this.columns.settings,\n            this.columns._state,\n            false, // No row cursor\n            this.options,\n            {\n                noColumnWidths: true,\n                unhideHeader: true\n            }\n        )\n\n        if (this.options.tableRender) {\n            const renderedTableVirtualDOM : (elementNodeType | void) = this.options.tableRender(this.data, newTableVirtualDOM, \"print\")\n            if (renderedTableVirtualDOM) {\n                newTableVirtualDOM = renderedTableVirtualDOM\n            }\n        }\n\n        const diff = this._dd.diff(tableVirtualDOM, newTableVirtualDOM)\n        this._dd.apply(tableDOM, diff)\n\n        // Open new window\n        const w = window.open()\n\n        // Append the table to the body\n        w.document.body.appendChild(tableDOM)\n\n        // Print\n        w.print()\n    }\n\n    /**\n     * Show a message in the table\n     */\n    setMessage(message: string) {\n        const activeHeadings = this.data.headings.filter((heading: headerCellType, index: number) => !this.columns.settings[index]?.hidden)\n        const colspan = activeHeadings.length || 1\n\n        this.wrapperDOM.classList.add(this.options.classes.empty)\n\n        if (this._label) {\n            this._label.innerHTML = \"\"\n        }\n        this.totalPages = 0\n        this._renderPagers()\n\n        let newVirtualDOM : elementNodeType = {\n            nodeName: \"TABLE\",\n            attributes: this._tableAttributes,\n            childNodes: [\n                {\n                    nodeName: \"THEAD\",\n                    childNodes: [\n                        headingsToVirtualHeaderRowDOM(\n                            this.data.headings, this.columns.settings, this.columns._state, this.options, {})\n                    ]\n                },\n                {\n                    nodeName: \"TBODY\",\n                    childNodes: [\n                        {\n                            nodeName: \"TR\",\n                            childNodes: [\n                                {\n                                    nodeName: \"TD\",\n                                    attributes: {\n                                        class: this.options.classes.empty,\n                                        colspan: String(colspan)\n                                    },\n                                    childNodes: [\n                                        {\n                                            nodeName: \"#text\",\n                                            data: message\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }\n\n            ]\n        }\n\n        newVirtualDOM.attributes.class = newVirtualDOM.attributes.class ? `${newVirtualDOM.attributes.class} ${this.options.classes.table}` : this.options.classes.table\n\n        if (this.options.tableRender) {\n            const renderedTableVirtualDOM : (elementNodeType | void) = this.options.tableRender(this.data, newVirtualDOM, \"message\")\n            if (renderedTableVirtualDOM) {\n                newVirtualDOM = renderedTableVirtualDOM\n            }\n        }\n\n        const diff = this._dd.diff(this._virtualDOM, newVirtualDOM)\n        this._dd.apply(this.dom, diff)\n        this._virtualDOM = newVirtualDOM\n\n    }\n\n    /**\n     * Add custom event listener\n     */\n    on(event: string, callback: () => void) {\n        this._events[event] = this._events[event] || []\n        this._events[event].push(callback)\n    }\n\n    /**\n     * Remove custom event listener\n     */\n    off(event: string, callback: () => void) {\n        if (event in this._events === false) return\n        this._events[event].splice(this._events[event].indexOf(callback), 1)\n    }\n\n    /**\n     * Fire custom event\n     */\n    emit(event: string, ...args) {\n        if (event in this._events === false) return\n        for (let i = 0; i < this._events[event].length; i++) {\n            this._events[event][i](...args)\n        }\n    }\n}\n","import {\n    isObject\n} from \"../helpers\"\n\ninterface csvConvertUserOptions {\n  lineDelimiter?: string,\n  columnDelimiter?: string\n  removeDoubleQuotes?: boolean\n  data: string,\n  headings?: string[],\n}\n\n\n/**\n * Convert CSV data to fit the format used in the table.\n */\nexport const convertCSV = function(userOptions : csvConvertUserOptions) {\n    let obj\n    const defaults = {\n        lineDelimiter: \"\\n\",\n        columnDelimiter: \",\",\n        removeDoubleQuotes: false\n    }\n\n    // Check for the options object\n    if (!isObject(userOptions)) {\n        return false\n    }\n\n    const options = {\n        ...defaults,\n        ...userOptions\n    }\n\n    if (options.data.length) {\n        // Import CSV\n        obj = {\n            data: []\n        }\n\n        // Split the string into rows\n        const rows : string[] = options.data.split(options.lineDelimiter)\n\n        if (rows.length) {\n\n            if (options.headings) {\n                obj.headings = rows[0].split(options.columnDelimiter)\n                if (options.removeDoubleQuotes) {\n                    obj.headings = obj.headings.map((e: string) => e.trim().replace(/(^\"|\"$)/g, \"\"))\n                }\n                rows.shift()\n            }\n\n            rows.forEach((row: string, i: number) => {\n                obj.data[i] = []\n\n                // Split the rows into values\n                const values = row.split(options.columnDelimiter)\n\n                if (values.length) {\n                    values.forEach((value: string) => {\n                        if (options.removeDoubleQuotes) {\n                            value = value.trim().replace(/(^\"|\"$)/g, \"\")\n                        }\n                        obj.data[i].push(value)\n                    })\n                }\n            })\n        }\n\n        if (obj) {\n            return obj\n        }\n    }\n\n    return false\n}\n","import {\n    isJson,\n    isObject\n} from \"../helpers\"\n\ninterface jsonConvertUserOptions {\n  lineDelimiter?: string,\n  columnDelimiter?: string\n  removeDoubleQuotes?: boolean\n  data: string,\n  headings?: string[],\n}\n\n/**\n * Convert JSON data to fit the format used in the table.\n */\nexport const convertJSON = function(userOptions : jsonConvertUserOptions) {\n    let obj\n    const defaults = {\n        data: \"\"\n    }\n\n    // Check for the options object\n    if (!isObject(userOptions)) {\n        return false\n    }\n\n    const options = {\n        ...defaults,\n        ...userOptions\n    }\n\n    if (options.data.length || isObject(options.data)) {\n        // Import JSON\n        const json = isJson(options.data) ? JSON.parse(options.data) : false\n\n        // Valid JSON string\n        if (json) {\n            obj = {\n                headings: [],\n                data: []\n            }\n\n            json.forEach((data: { [key: string]: string | number | boolean | null | undefined}, i: number) => {\n                obj.data[i] = []\n                Object.entries(data).forEach(([column, value]) => {\n                    if (!obj.headings.includes(column)) {\n                        obj.headings.push(column)\n                    }\n                    obj.data[i].push(value)\n                })\n            })\n        } else {\n            console.warn(\"That's not valid JSON!\")\n        }\n\n        if (obj) {\n            return obj\n        }\n    }\n\n    return false\n}\n","import {\n    isObject\n} from \"../helpers\"\nimport {DataTable} from \"../datatable\"\nimport {\n    cellType,\n    headerCellType\n} from \"../types\"\n\n/**\n * Export table to CSV\n */\n\ninterface csvUserOptions {\n  download?: boolean,\n  skipColumn?: number[],\n  lineDelimiter?: string,\n  columnDelimiter?: string,\n  selection?: number | number[],\n  filename?: string,\n}\n\n\nexport const exportCSV = function(dt: DataTable, userOptions: csvUserOptions = {}) {\n    if (!dt.hasHeadings && !dt.hasRows) return false\n\n    const defaults = {\n        download: true,\n        skipColumn: [],\n        lineDelimiter: \"\\n\",\n        columnDelimiter: \",\"\n    }\n\n    // Check for the options object\n    if (!isObject(userOptions)) {\n        return false\n    }\n\n    const options = {\n        ...defaults,\n        ...userOptions\n    }\n    const columnShown = (index: number) => !options.skipColumn.includes(index) && !dt.columns.settings[index]?.hidden\n    let rows : (string | number | boolean | object | undefined | null)[][] = []\n    const headers = dt.data.headings.filter((_heading: headerCellType, index: number) => columnShown(index)).map((header: headerCellType) => header.text ?? header.data)\n    // Include headings\n    rows[0] = headers\n\n    // Selection or whole table\n    if (options.selection) {\n        // Page number\n        if (Array.isArray(options.selection)) {\n            // Array of page numbers\n            for (let i = 0; i < options.selection.length; i++) {\n                rows = rows.concat(dt.pages[options.selection[i] - 1].map((row: {row: cellType[], index: number}) => row.row.filter((_cell: cellType, index: number) => columnShown(index)).map((cell: cellType) => cell.text ?? cell.data)))\n            }\n\n        } else {\n            rows = rows.concat(dt.pages[options.selection - 1].map((row: {row: cellType[], index: number}) => row.row.filter((_cell: cellType, index: number) => columnShown(index)).map((cell: cellType) => cell.text ?? cell.data)))\n        }\n    } else {\n        rows = rows.concat(dt.data.data.map((row: cellType[]) => row.filter((_cell: cellType, index: number) => columnShown(index)).map((cell: cellType) => cell.text ?? cell.data)))\n    }\n\n    // Only proceed if we have data\n    if (rows.length) {\n        let str = \"\"\n        rows.forEach(row => {\n            row.forEach((cell: (string | number | boolean | object | undefined | null)) => {\n                if (typeof cell === \"string\") {\n                    cell = cell.trim()\n                    cell = cell.replace(/\\s{2,}/g, \" \")\n                    cell = cell.replace(/\\n/g, \"  \")\n                    cell = cell.replace(/\"/g, \"\\\"\\\"\")\n                    //have to manually encode \"#\" as encodeURI leaves it as is.\n                    cell = cell.replace(/#/g, \"%23\")\n                    if (cell.includes(\",\")) {\n                        cell = `\"${cell}\"`\n                    }\n                }\n                str += cell + options.columnDelimiter\n            })\n            // Remove trailing column delimiter\n            str = str.trim().substring(0, str.length - 1)\n\n            // Apply line delimiter\n            str += options.lineDelimiter\n        })\n\n        // Remove trailing line delimiter\n        str = str.trim().substring(0, str.length - 1)\n\n        // Download\n        if (options.download) {\n            // Create a link to trigger the download\n            const link = document.createElement(\"a\")\n            link.href = encodeURI(`data:text/csv;charset=utf-8,${str}`)\n            link.download = `${options.filename || \"datatable_export\"}.csv`\n\n            // Append the link\n            document.body.appendChild(link)\n\n            // Trigger the download\n            link.click()\n\n            // Remove the link\n            document.body.removeChild(link)\n        }\n\n        return str\n    }\n\n    return false\n}\n","import {\n    isObject\n} from \"../helpers\"\nimport {DataTable} from \"../datatable\"\nimport {\n    cellType,\n    headerCellType,\n    elementNodeType\n} from \"../types\"\n/**\n * Export table to JSON\n */\n\n interface jsonUserOptions {\n   download?: boolean,\n   skipColumn?: number[],\n   replacer?: null | ((key, value) => string) | (string | number)[],\n   space?: number,\n   selection?: number | number[],\n   filename?: string,\n }\n\n\nexport const exportJSON = function(dt: DataTable, userOptions: jsonUserOptions = {}) {\n    if (!dt.hasHeadings && !dt.hasRows) return false\n\n\n    const defaults = {\n        download: true,\n        skipColumn: [],\n        replacer: null,\n        space: 4\n    }\n\n    // Check for the options object\n    if (!isObject(userOptions)) {\n        return false\n    }\n\n    const options = {\n        ...defaults,\n        ...userOptions\n    }\n\n    const columnShown = (index: number) => !options.skipColumn.includes(index) && !dt.columns.settings[index]?.hidden\n\n    let rows : (string | number | boolean | object | undefined | null)[][] = []\n    // Selection or whole table\n    if (options.selection) {\n        // Page number\n        if (Array.isArray(options.selection)) {\n            // Array of page numbers\n            for (let i = 0; i < options.selection.length; i++) {\n                rows = rows.concat(dt.pages[options.selection[i] - 1].map((row: {row: cellType[], index: number}) => row.row.filter((_cell: cellType, index: number) => columnShown(index)).map((cell: cellType) => cell.data)))\n            }\n        } else {\n            rows = rows.concat(dt.pages[options.selection - 1].map((row: {row: cellType[], index: number}) => row.row.filter((_cell: cellType, index: number) => columnShown(index)).map((cell: cellType) => cell.data)))\n        }\n    } else {\n        rows = rows.concat(dt.data.data.map((row: cellType[]) => row.filter((_cell: cellType, index: number) => columnShown(index)).map((cell: cellType) => cell.data)))\n    }\n\n    const headers = dt.data.headings.filter((_heading: headerCellType, index: number) => columnShown(index)).map((header: headerCellType) => header.text ?? String(header.data))\n\n    // Only proceed if we have data\n    if (rows.length) {\n        const arr: (void | { [key: string]: (string | number | boolean | undefined | null | elementNodeType[])})[] = []\n        rows.forEach((row: (string | number | boolean | object | undefined | null)[], x: number) => {\n            arr[x] = arr[x] || {}\n            row.forEach((cell: (string | number | boolean | object | undefined | null), i: number) => {\n                arr[x][headers[i]] = cell\n            })\n        })\n\n        // Convert the array of objects to JSON string\n        const str = JSON.stringify(arr, options.replacer, options.space)\n\n        // Download\n        if (options.download) {\n            // Create a link to trigger the download\n\n            const blob = new Blob(\n                [str],\n                {\n                    type: \"data:application/json;charset=utf-8\"\n                }\n            )\n            const url = URL.createObjectURL(blob)\n\n\n            const link = document.createElement(\"a\")\n            link.href = url\n            link.download = `${options.filename || \"datatable_export\"}.json`\n\n            // Append the link\n            document.body.appendChild(link)\n\n            // Trigger the download\n            link.click()\n\n            // Remove the link\n            document.body.removeChild(link)\n            URL.revokeObjectURL(url)\n        }\n\n        return str\n    }\n\n    return false\n}\n","import {\n    isObject\n} from \"../helpers\"\nimport {DataTable} from \"../datatable\"\nimport {\n    cellType,\n    headerCellType\n} from \"../types\"\n/**\n * Export table to SQL\n */\n\n interface sqlUserOptions {\n   download?: boolean,\n   skipColumn?: number[],\n   tableName?: string,\n   selection?: number | number[],\n   filename?: string,\n }\n\nexport const exportSQL = function(dt: DataTable, userOptions : sqlUserOptions = {}) {\n    if (!dt.hasHeadings && !dt.hasRows) return false\n\n    const defaults = {\n        download: true,\n        skipColumn: [],\n        tableName: \"myTable\"\n    }\n\n    // Check for the options object\n    if (!isObject(userOptions)) {\n        return false\n    }\n\n    const options = {\n        ...defaults,\n        ...userOptions\n    }\n    const columnShown = (index: number) => !options.skipColumn.includes(index) && !dt.columns.settings[index]?.hidden\n    let rows : (string | number | boolean | object | undefined | null)[][] = []\n    // Selection or whole table\n    if (options.selection) {\n        // Page number\n        if (Array.isArray(options.selection)) {\n            // Array of page numbers\n            for (let i = 0; i < options.selection.length; i++) {\n                rows = rows.concat(dt.pages[options.selection[i] - 1].map((row: {row: cellType[], index: number}) => row.row.filter((_cell: cellType, index: number) => columnShown(index)).map((cell: cellType) => cell.text ?? cell.data)))\n            }\n\n        } else {\n            rows = rows.concat(dt.pages[options.selection - 1].map((row: {row: cellType[], index: number}) => row.row.filter((_cell: cellType, index: number) => columnShown(index)).map((cell: cellType) => cell.text ?? cell.data)))\n        }\n    } else {\n        rows = rows.concat(dt.data.data.map((row: cellType[]) => row.filter((_cell: cellType, index: number) => columnShown(index)).map((cell: cellType) => cell.text ?? cell.data)))\n    }\n\n    const headers = dt.data.headings.filter((_heading: headerCellType, index: number) => columnShown(index)).map((header: headerCellType) => header.text ?? String(header.data))\n    // Only proceed if we have data\n    if (rows.length) {\n        // Begin INSERT statement\n        let str = `INSERT INTO \\`${options.tableName}\\` (`\n\n        // Convert table headings to column names\n        headers.forEach((header: string) => {\n            str += `\\`${header}\\`,`\n        })\n\n        // Remove trailing comma\n        str = str.trim().substring(0, str.length - 1)\n\n        // Begin VALUES\n        str += \") VALUES \"\n\n        // Iterate rows and convert cell data to column values\n\n        rows.forEach((row: (string | number | boolean | object | undefined | null)[]) => {\n            str += \"(\"\n            row.forEach((cell: (string | number | boolean | object | undefined | null)) => {\n                if (typeof cell === \"string\") {\n                    str += `\"${cell}\",`\n                } else {\n                    str += `${cell},`\n                }\n            })\n            // Remove trailing comma\n            str = str.trim().substring(0, str.length - 1)\n\n            // end VALUES\n            str += \"),\"\n\n        })\n\n        // Remove trailing comma\n        str = str.trim().substring(0, str.length - 1)\n\n        // Add trailing colon\n        str += \";\"\n\n        if (options.download) {\n            str = `data:application/sql;charset=utf-8,${str}`\n        }\n\n        // Download\n        if (options.download) {\n            // Create a link to trigger the download\n            const link = document.createElement(\"a\")\n            link.href = encodeURI(str)\n            link.download = `${options.filename || \"datatable_export\"}.sql`\n\n            // Append the link\n            document.body.appendChild(link)\n\n            // Trigger the download\n            link.click()\n\n            // Remove the link\n            document.body.removeChild(link)\n        }\n\n        return str\n    }\n\n    return false\n}\n","import {\n    isObject\n} from \"../helpers\"\nimport {DataTable} from \"../datatable\"\nimport {\n    cellType,\n    headerCellType\n} from \"../types\"\n/**\n * Export table to TXT\n */\n interface txtUserOptions {\n   download?: boolean,\n   skipColumn?: number[],\n   lineDelimiter?: string,\n   columnDelimiter?: string,\n   selection?: number | number[],\n   filename?: string,\n }\n\n\nexport const exportTXT = function(dt: DataTable, userOptions : txtUserOptions = {}) {\n    if (!dt.hasHeadings && !dt.hasRows) return false\n\n    const defaults = {\n        download: true,\n        skipColumn: [],\n        lineDelimiter: \"\\n\",\n        columnDelimiter: \",\"\n    }\n\n    // Check for the options object\n    if (!isObject(userOptions)) {\n        return false\n    }\n\n    const options = {\n        ...defaults,\n        ...userOptions\n    }\n\n    const columnShown = (index: number) => !options.skipColumn.includes(index) && !dt.columns.settings[index]?.hidden\n\n    let rows : (string | number | boolean | object | undefined | null)[][] = []\n    const headers = dt.data.headings.filter((_heading: headerCellType, index: number) => columnShown(index)).map((header: headerCellType) => header.text ?? header.data)\n    // Include headings\n    rows[0] = headers\n\n    // Selection or whole table\n    if (options.selection) {\n        // Page number\n        if (Array.isArray(options.selection)) {\n            // Array of page numbers\n            for (let i = 0; i < options.selection.length; i++) {\n                rows = rows.concat(dt.pages[options.selection[i] - 1].map((row: {row: cellType[], index: number}) => row.row.filter((_cell: cellType, index: number) => columnShown(index)).map((cell: cellType) => cell.data)))\n            }\n        } else {\n            rows = rows.concat(dt.pages[options.selection - 1].map((row: {row: cellType[], index: number}) => row.row.filter((_cell: cellType, index: number) => columnShown(index)).map((cell: cellType) => cell.data)))\n        }\n    } else {\n        rows = rows.concat(dt.data.data.map((row: cellType[]) => row.filter((_cell: cellType, index: number) => columnShown(index)).map((cell: cellType) => cell.data)))\n    }\n\n    // Only proceed if we have data\n    if (rows.length) {\n        let str = \"\"\n\n        rows.forEach(row => {\n            row.forEach((cell: (string | number | boolean | object | undefined | null)) => {\n                if (typeof cell === \"string\") {\n                    cell = cell.trim()\n                    cell = cell.replace(/\\s{2,}/g, \" \")\n                    cell = cell.replace(/\\n/g, \"  \")\n                    cell = cell.replace(/\"/g, \"\\\"\\\"\")\n                    //have to manually encode \"#\" as encodeURI leaves it as is.\n                    cell = cell.replace(/#/g, \"%23\")\n                    if (cell.includes(\",\")) {\n                        cell = `\"${cell}\"`\n                    }\n                }\n                str += cell + options.columnDelimiter\n            })\n            // Remove trailing column delimiter\n            str = str.trim().substring(0, str.length - 1)\n\n            // Apply line delimiter\n            str += options.lineDelimiter\n\n        })\n\n        // Remove trailing line delimiter\n        str = str.trim().substring(0, str.length - 1)\n\n        if (options.download) {\n            str = `data:text/csv;charset=utf-8,${str}`\n        }\n        // Download\n        if (options.download) {\n            // Create a link to trigger the download\n            const link = document.createElement(\"a\")\n            link.href = encodeURI(str)\n            link.download = `${options.filename || \"datatable_export\"}.txt`\n\n            // Append the link\n            document.body.appendChild(link)\n\n            // Trigger the download\n            link.click()\n\n            // Remove the link\n            document.body.removeChild(link)\n        }\n\n        return str\n    }\n\n    return false\n}\n","/**\n* Default config\n* @type {Object}\n*/\nimport {Editor} from \"./editor\"\n\nexport const defaultConfig = {\n    classes: {\n        row: \"datatable-editor-row\",\n        form: \"datatable-editor-form\",\n        item: \"datatable-editor-item\",\n        menu: \"datatable-editor-menu\",\n        save: \"datatable-editor-save\",\n        block: \"datatable-editor-block\",\n        cancel: \"datatable-editor-cancel\",\n        close: \"datatable-editor-close\",\n        inner: \"datatable-editor-inner\",\n        input: \"datatable-editor-input\",\n        label: \"datatable-editor-label\",\n        modal: \"datatable-editor-modal\",\n        action: \"datatable-editor-action\",\n        header: \"datatable-editor-header\",\n        wrapper: \"datatable-editor-wrapper\",\n        editable: \"datatable-editor-editable\",\n        container: \"datatable-editor-container\",\n        separator: \"datatable-editor-separator\"\n    },\n\n    labels: {\n        closeX: \"x\",\n        editCell: \"Edit Cell\",\n        editRow: \"Edit Row\",\n        removeRow: \"Remove Row\",\n        reallyRemove: \"Are you sure?\",\n        reallyCancel: \"Do you really want to cancel?\",\n        save: \"Save\",\n        cancel: \"Cancel\"\n    },\n\n    cancelModal: editor => confirm(editor.options.labels.reallyCancel),\n\n    // edit inline instead of using a modal lay-over for editing content\n    inline: true,\n\n    // include hidden columns in the editor\n    hiddenColumns: false,\n\n    // enable the context menu\n    contextMenu: true,\n\n    // event to start editing\n    clickEvent: \"dblclick\",\n\n    // indexes of columns not to be edited\n    excludeColumns: [],\n\n    // set the context menu items\n    menuItems: [\n        {\n            text: (editor: Editor) => editor.options.labels.editCell,\n            action: (editor: Editor, _event: Event) => {\n                if (!(editor.event.target instanceof Element)) {\n                    return\n                }\n                const cell = editor.event.target.closest(\"td\")\n                return editor.editCell(cell)\n            }\n        },\n        {\n            text: (editor: Editor) => editor.options.labels.editRow,\n            action: (editor: Editor, _event: Event) => {\n                if (!(editor.event.target instanceof Element)) {\n                    return\n                }\n                const row = editor.event.target.closest(\"tr\")\n                return editor.editRow(row)\n            }\n        },\n        {\n            separator: true\n        },\n        {\n            text: (editor: Editor) => editor.options.labels.removeRow,\n            action: (editor: Editor, _event: Event) => {\n                if (!(editor.event.target instanceof Element)) {\n                    return\n                }\n                if (confirm(editor.options.labels.reallyRemove)) {\n                    const row = editor.event.target.closest(\"tr\")\n                    editor.removeRow(row)\n                }\n            }\n        }\n    ]\n}\n","import {\n    createElement,\n    escapeText,\n    visibleToColumnIndex,\n    columnToVisibleIndex\n} from \"../helpers\"\nimport {\n    cellType,\n    rowRenderType,\n    elementNodeType\n} from \"../types\"\nimport {DataTable} from \"../datatable\"\nimport {parseDate} from \"../date\"\n\nimport {\n    defaultConfig\n} from \"./config\"\nimport {\n    debounce\n} from \"./helpers\"\nimport {menuItemType, dataType, EditorOptions} from \"./types\"\n\n\n/**\n * Main lib\n * @param {Object} dataTable Target dataTable\n * @param {Object} options User config\n */\nexport class Editor {\n    menuOpen: boolean\n\n    containerDOM: HTMLElement\n\n    data: dataType\n\n    disabled: boolean\n\n    dt: DataTable\n\n    editing: boolean\n\n    editingCell: boolean\n\n    editingRow: boolean\n\n    event: Event\n\n    events: { [key: string]: () => void}\n\n    initialized: boolean\n\n    limits: {x: number, y: number}\n\n    menuDOM: HTMLElement\n\n    modalDOM: HTMLElement | false\n\n    options: EditorOptions\n\n    originalRowRender: rowRenderType | false\n\n    rect: {width: number, height: number}\n\n    wrapperDOM: HTMLElement\n\n    constructor(dataTable: DataTable, options = {}) {\n        this.dt = dataTable\n        this.options = {\n            ...defaultConfig,\n            ...options\n        }\n    }\n\n    /**\n     * Init instance\n     * @return {Void}\n     */\n    init() {\n        if (this.initialized) {\n            return\n        }\n        this.dt.wrapperDOM.classList.add(this.options.classes.editable)\n        if (this.options.inline) {\n            this.originalRowRender = this.dt.options.rowRender\n            this.dt.options.rowRender = (row, tr, index) => {\n                let newTr = this.rowRender(row, tr, index)\n                if (this.originalRowRender) {\n                    newTr = this.originalRowRender(row, newTr, index)\n                }\n                return newTr\n            }\n        }\n        if (this.options.contextMenu) {\n            this.containerDOM = createElement(\"div\", {\n                id: this.options.classes.container\n            })\n            this.wrapperDOM = createElement(\"div\", {\n                class: this.options.classes.wrapper\n            })\n            this.menuDOM = createElement(\"ul\", {\n                class: this.options.classes.menu\n            })\n            if (this.options.menuItems && this.options.menuItems.length) {\n                this.options.menuItems.forEach((item: menuItemType) => {\n                    const li = createElement(\"li\", {\n                        class: item.separator ? this.options.classes.separator : this.options.classes.item\n                    })\n                    if (!item.separator) {\n                        const a = createElement(\"a\", {\n                            class: this.options.classes.action,\n                            href: item.url || \"#\",\n                            html: typeof item.text === \"function\" ? item.text(this) : item.text\n                        })\n                        li.appendChild(a)\n                        if (item.action && typeof item.action === \"function\") {\n                            a.addEventListener(\"click\", (event: Event) => {\n                                event.preventDefault()\n                                item.action(this, event)\n                            })\n                        }\n                    }\n                    this.menuDOM.appendChild(li)\n                })\n            }\n            this.wrapperDOM.appendChild(this.menuDOM)\n            this.containerDOM.appendChild(this.wrapperDOM)\n            this.updateMenu()\n        }\n        this.data = {}\n        this.menuOpen = false\n        this.editing = false\n        this.editingRow = false\n        this.editingCell = false\n        this.bindEvents()\n        setTimeout(() => {\n            this.initialized = true\n            this.dt.emit(\"editable.init\")\n        }, 10)\n    }\n\n    /**\n     * Bind events to DOM\n     * @return {Void}\n     */\n    bindEvents() {\n        this.events = {\n            keydown: this.keydown.bind(this),\n            click: this.click.bind(this)\n        }\n        // listen for click / double-click\n        this.dt.dom.addEventListener(this.options.clickEvent, this.events.click)\n        // listen for right-click\n        document.addEventListener(\"keydown\", this.events.keydown)\n\n        if (this.options.contextMenu) {\n            this.events.context = this.context.bind(this)\n            this.events.updateMenu = this.updateMenu.bind(this)\n            this.events.dismissMenu = this.dismissMenu.bind(this)\n            this.events.reset = debounce(() => this.events.updateMenu(), 50)\n\n            // listen for right-click\n            this.dt.dom.addEventListener(\"contextmenu\", this.events.context)\n            // listen for click everywhere except the menu\n            document.addEventListener(\"click\", this.events.dismissMenu)\n            // Reset contextmenu on browser window changes\n            window.addEventListener(\"resize\", this.events.reset)\n            window.addEventListener(\"scroll\", this.events.reset)\n        }\n    }\n\n    /**\n     * contextmenu listener\n     * @param  {Object} event Event\n     * @return {Void}\n     */\n    context(event: MouseEvent) {\n        const target = event.target\n        if (!(target instanceof Element)) {\n            return\n        }\n        this.event = event\n\n        const cell = target.closest(\"tbody td\")\n        if (!this.disabled && cell) {\n            event.preventDefault()\n            // get the mouse position\n            let x = event.pageX\n            let y = event.pageY\n            // check if we're near the right edge of window\n            if (x > this.limits.x) {\n                x -= this.rect.width\n            }\n            // check if we're near the bottom edge of window\n            if (y > this.limits.y) {\n                y -= this.rect.height\n            }\n            this.wrapperDOM.style.top = `${y}px`\n            this.wrapperDOM.style.left = `${x}px`\n            this.openMenu()\n            this.updateMenu()\n        }\n    }\n\n    /**\n     * dblclick listener\n     * @param  {Object} event Event\n     * @return {Void}\n     */\n    click(event: MouseEvent) {\n        const target = event.target\n        if (!(target instanceof Element)) {\n            return\n        }\n        if (this.editing && this.data && this.editingCell) {\n            const input = this.modalDOM ?\n                (this.modalDOM.querySelector(`input.${this.options.classes.input}[type=text]`) as HTMLInputElement) :\n                (this.dt.wrapperDOM.querySelector(`input.${this.options.classes.input}[type=text]`) as HTMLInputElement)\n            this.saveCell(input.value)\n        } else if (!this.editing) {\n            const cell = target.closest(\"tbody td\") as HTMLTableCellElement\n            if (cell) {\n                this.editCell(cell)\n                event.preventDefault()\n            }\n        }\n    }\n\n    /**\n     * keydown listener\n     * @param  {Object} event Event\n     * @return {Void}\n     */\n    keydown(event: KeyboardEvent) {\n        if (this.modalDOM) {\n            if (event.key === \"Escape\") { // close button\n                if (this.options.cancelModal(this)) {\n                    this.closeModal()\n                }\n            } else if (event.key === \"Enter\") { // save button\n                // Save\n                if (this.editingCell) {\n                    const input = (this.modalDOM.querySelector(`input.${this.options.classes.input}[type=text]`) as HTMLInputElement)\n                    this.saveCell(input.value)\n                } else {\n                    const inputs = (Array.from(this.modalDOM.querySelectorAll(`input.${this.options.classes.input}[type=text]`)) as HTMLInputElement[])\n                    this.saveRow(inputs.map(input => input.value.trim()), this.data.row)\n                }\n\n\n            }\n        } else if (this.editing && this.data) {\n            if (event.key === \"Enter\") {\n                // Enter key saves\n                if (this.editingCell) {\n                    const input = (this.dt.wrapperDOM.querySelector(`input.${this.options.classes.input}[type=text]`) as HTMLInputElement)\n                    this.saveCell(input.value)\n                } else if (this.editingRow) {\n                    const inputs = (Array.from(this.dt.wrapperDOM.querySelectorAll(`input.${this.options.classes.input}[type=text]`)) as HTMLInputElement[])\n                    this.saveRow(inputs.map(input => input.value.trim()), this.data.row)\n                }\n            } else if (event.key === \"Escape\") {\n                // Escape key reverts\n                if (this.editingCell) {\n                    this.saveCell(this.data.content)\n                } else if (this.editingRow) {\n                    this.saveRow(null, this.data.row)\n                }\n            }\n        }\n    }\n\n    /**\n     * Edit cell\n     * @param  {Object} td    The HTMLTableCellElement\n     * @return {Void}\n     */\n    editCell(td: HTMLTableCellElement) {\n        const columnIndex = visibleToColumnIndex(td.cellIndex, this.dt.columns.settings)\n        if (this.options.excludeColumns.includes(columnIndex)) {\n            this.closeMenu()\n            return\n        }\n        const rowIndex = parseInt(td.parentElement.dataset.index, 10)\n        const row = this.dt.data.data[rowIndex]\n        const cell = row[columnIndex]\n\n        this.data = {\n            cell,\n            rowIndex,\n            columnIndex,\n            content: cell.text || String(cell.data)\n        }\n        this.editing = true\n        this.editingCell = true\n        if (this.options.inline) {\n            this.dt.update()\n        } else {\n            this.editCellModal()\n        }\n        this.closeMenu()\n    }\n\n    editCellModal() {\n        const cell = this.data.cell\n        const columnIndex = this.data.columnIndex\n        const label = this.dt.data.headings[columnIndex].text || String(this.dt.data.headings[columnIndex].data)\n        const template = [\n            `<div class='${this.options.classes.inner}'>`,\n            `<div class='${this.options.classes.header}'>`,\n            `<h4>${this.options.labels.editCell}</h4>`,\n            `<button class='${this.options.classes.close}' type='button' data-editor-cancel>${this.options.labels.closeX}</button>`,\n            \" </div>\",\n            `<div class='${this.options.classes.block}'>`,\n            `<form class='${this.options.classes.form}'>`,\n            `<div class='${this.options.classes.row}'>`,\n            `<label class='${this.options.classes.label}'>${escapeText(label)}</label>`,\n            `<input class='${this.options.classes.input}' value='${escapeText(cell.text || String(cell.data) || \"\")}' type='text'>`,\n            \"</div>\",\n            `<div class='${this.options.classes.row}'>`,\n            `<button class='${this.options.classes.cancel}' type='button' data-editor-cancel>${this.options.labels.cancel}</button>`,\n            `<button class='${this.options.classes.save}' type='button' data-editor-save>${this.options.labels.save}</button>`,\n            \"</div>\",\n            \"</form>\",\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n        const modalDOM = createElement(\"div\", {\n            class: this.options.classes.modal,\n            html: template\n        })\n        this.modalDOM = modalDOM\n        this.openModal()\n        const input = (modalDOM.querySelector(`input.${this.options.classes.input}[type=text]`) as HTMLInputElement)\n        input.focus()\n        input.selectionStart = input.selectionEnd = input.value.length\n        // Close / save\n        modalDOM.addEventListener(\"click\", (event: Event) => {\n            const target = event.target\n            if (!(target instanceof Element)) {\n                return\n            }\n            if (target.hasAttribute(\"data-editor-cancel\")) { // cancel button\n                event.preventDefault()\n                if (this.options.cancelModal(this)) {\n                    this.closeModal()\n                }\n            } else if (target.hasAttribute(\"data-editor-save\")) { // save button\n                event.preventDefault()\n                // Save\n                this.saveCell(input.value)\n            }\n        })\n    }\n\n    /**\n     * Save edited cell\n     * @param  {Object} row    The HTMLTableCellElement\n     * @param  {String} value   Cell content\n     * @return {Void}\n     */\n    saveCell(value: string) {\n        const oldData = this.data.content\n        // Get the type of that column\n        const type = this.dt.columns.settings[this.data.columnIndex].type || this.dt.options.type\n        const stringValue = value.trim()\n        let cell\n        if (type === \"number\") {\n            cell = {data: parseFloat(stringValue)}\n        } else if (type === \"boolean\") {\n            if ([\"\", \"false\", \"0\"].includes(stringValue)) {\n                cell = {data: false,\n                    text: \"false\",\n                    order: 0}\n            } else {\n                cell = {data: true,\n                    text: \"true\",\n                    order: 1}\n            }\n        } else if (type === \"html\") {\n            cell = {data: [\n                {nodeName: \"#text\",\n                    data: value}\n            ],\n            text: value,\n            order: value}\n        } else if (type === \"string\") {\n            cell = {data: value}\n        } else if (type === \"date\") {\n            const format = this.dt.columns.settings[this.data.columnIndex].format || this.dt.options.format\n            cell = {data: value,\n                order: parseDate(String(value), format)}\n        } else {\n            cell = {data: value}\n        }\n        // Set the cell content\n        this.dt.data.data[this.data.rowIndex][this.data.columnIndex] = cell\n        this.closeModal()\n        const rowIndex = this.data.rowIndex\n        const columnIndex = this.data.columnIndex\n        this.data = {}\n        this.dt.update(true)\n        this.editing = false\n        this.editingCell = false\n        this.dt.emit(\"editable.save.cell\", value, oldData, rowIndex, columnIndex)\n    }\n\n    /**\n     * Edit row\n     * @param  {Object} row    The HTMLTableRowElement\n     * @return {Void}\n     */\n    editRow(tr: HTMLElement) {\n        if (!tr || tr.nodeName !== \"TR\" || this.editing) return\n        const rowIndex = parseInt(tr.dataset.index, 10)\n        const row = this.dt.data.data[rowIndex]\n        this.data = {\n            row,\n            rowIndex\n        }\n        this.editing = true\n        this.editingRow = true\n        if (this.options.inline) {\n            this.dt.update()\n        } else {\n            this.editRowModal()\n        }\n        this.closeMenu()\n    }\n\n    editRowModal() {\n        const row = this.data.row\n\n        const template = [\n            `<div class='${this.options.classes.inner}'>`,\n            `<div class='${this.options.classes.header}'>`,\n            `<h4>${this.options.labels.editRow}</h4>`,\n            `<button class='${this.options.classes.close}' type='button' data-editor-cancel>${this.options.labels.closeX}</button>`,\n            \" </div>\",\n            `<div class='${this.options.classes.block}'>`,\n            `<form class='${this.options.classes.form}'>`,\n            `<div class='${this.options.classes.row}'>`,\n            `<button class='${this.options.classes.cancel}' type='button' data-editor-cancel>${this.options.labels.cancel}</button>`,\n            `<button class='${this.options.classes.save}' type='button' data-editor-save>${this.options.labels.save}</button>`,\n            \"</div>\",\n            \"</form>\",\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\")\n        const modalDOM = createElement(\"div\", {\n            class: this.options.classes.modal,\n            html: template\n        })\n        const inner = modalDOM.firstElementChild\n        if (!inner) {\n            return\n        }\n        const form = inner.lastElementChild?.firstElementChild\n        if (!form) {\n            return\n        }\n        // Add the inputs for each cell\n        row.forEach((cell: cellType, i: number) => {\n            const columnSettings = this.dt.columns.settings[i]\n            if ((!columnSettings.hidden || (columnSettings.hidden && this.options.hiddenColumns)) && !this.options.excludeColumns.includes(i)) {\n                const label = this.dt.data.headings[i].text || String(this.dt.data.headings[i].data)\n                form.insertBefore(createElement(\"div\", {\n                    class: this.options.classes.row,\n                    html: [\n                        `<div class='${this.options.classes.row}'>`,\n                        `<label class='${this.options.classes.label}'>${escapeText(label)}</label>`,\n                        `<input class='${this.options.classes.input}' value='${escapeText(cell.text || String(cell.data) || \"\")}' type='text'>`,\n                        \"</div>\"\n                    ].join(\"\")\n                }), form.lastElementChild)\n            }\n        })\n        this.modalDOM = modalDOM\n        this.openModal()\n        // Grab the inputs\n        const inputs = Array.from(form.querySelectorAll(`input.${this.options.classes.input}[type=text]`)) as HTMLInputElement[]\n        // Remove save button\n        inputs.pop()\n\n        // Close / save\n        modalDOM.addEventListener(\"click\", (event: MouseEvent) => {\n            const target = event.target\n            if (!(target instanceof Element)) {\n                return\n            }\n            if (target.hasAttribute(\"data-editor-cancel\")) { // cancel button\n                if (this.options.cancelModal(this)) {\n                    this.closeModal()\n                }\n            } else if (target.hasAttribute(\"data-editor-save\")) { // save button\n                // Save\n                this.saveRow(inputs.map((input: HTMLInputElement) => input.value.trim()), this.data.row)\n            }\n        })\n    }\n\n    /**\n     * Save edited row\n     * @param  {Object} row    The HTMLTableRowElement\n     * @param  {Array} data   Cell data\n     * @return {Void}\n     */\n    saveRow(data: string[], row: cellType[]) {\n        // Store the old data for the emitter\n        const oldData = row.map((cell: cellType) => cell.text ?? String(cell.data))\n        if (data) {\n            this.dt.data.data[this.data.rowIndex] = this.dt.data.data[this.data.rowIndex].map((oldCell, colIndex) => {\n                const columnSetting = this.dt.columns.settings[colIndex]\n                if (columnSetting.hidden || this.options.excludeColumns.includes(colIndex)) {\n                    return oldCell\n                }\n                const type = this.dt.columns.settings[colIndex].type || this.dt.options.type\n                const value = data[columnToVisibleIndex(colIndex, this.dt.columns.settings)]\n                const stringValue = value.trim()\n                let cell\n                if (type === \"number\") {\n                    cell = {data: parseFloat(stringValue)}\n                } else if (type === \"boolean\") {\n                    if ([\"\", \"false\", \"0\"].includes(stringValue)) {\n                        cell = {data: false,\n                            text: \"false\",\n                            order: 0}\n                    } else {\n                        cell = {data: true,\n                            text: \"true\",\n                            order: 1}\n                    }\n                } else if (type === \"html\") {\n                    cell = {data: [\n                        {nodeName: \"#text\",\n                            data: value}\n                    ],\n                    text: value,\n                    order: value}\n                } else if (type === \"string\") {\n                    cell = {data: value}\n                } else if (type === \"date\") {\n                    const format = this.dt.columns.settings[colIndex].format || this.dt.options.format\n                    cell = {data: value,\n                        order: parseDate(String(value), format)}\n                } else {\n                    cell = {data: value}\n                }\n                return cell\n            })\n        }\n\n        const updatedRow = this.dt.data.data[this.data.rowIndex]\n        const newData = updatedRow.map(cell => cell.text ?? String(cell.data))\n\n        this.data = {}\n        this.dt.update(true)\n        this.closeModal()\n        this.editing = false\n        this.dt.emit(\"editable.save.row\", newData, oldData, row)\n    }\n\n    /**\n     * Open the row editor modal\n     * @return {Void}\n     */\n    openModal() {\n        if (this.modalDOM) {\n            document.body.appendChild(this.modalDOM)\n        }\n    }\n\n    /**\n     * Close the row editor modal\n     * @return {Void}\n     */\n    closeModal() {\n        if (this.editing && this.modalDOM) {\n            document.body.removeChild(this.modalDOM)\n            this.modalDOM = this.editing = this.editingRow = this.editingCell = false\n        }\n    }\n\n    /**\n     * Remove a row\n     * @param  {Object} tr The HTMLTableRowElement\n     * @return {Void}\n     */\n    removeRow(tr: HTMLElement) {\n        if (!tr || tr.nodeName !== \"TR\" || this.editing) return\n        const index = parseInt(tr.dataset.index, 10)\n        this.dt.rows.remove(index)\n        this.closeMenu()\n    }\n\n    /**\n     * Update context menu position\n     * @return {Void}\n     */\n    updateMenu() {\n        const scrollX = window.scrollX || window.pageXOffset\n        const scrollY = window.scrollY || window.pageYOffset\n        this.rect = this.wrapperDOM.getBoundingClientRect()\n        this.limits = {\n            x: window.innerWidth + scrollX - this.rect.width,\n            y: window.innerHeight + scrollY - this.rect.height\n        }\n    }\n\n    /**\n     * Dismiss the context menu\n     * @param  {Object} event Event\n     * @return {Void}\n     */\n    dismissMenu(event: Event) {\n        const target = event.target\n        if (!(target instanceof Element) || this.wrapperDOM.contains(target)) {\n            return\n        }\n        let valid = true\n        if (this.editing) {\n            valid = !(target.matches(`input.${this.options.classes.input}[type=text]`))\n        }\n        if (valid) {\n            this.closeMenu()\n        }\n    }\n\n    /**\n     * Open the context menu\n     * @return {Void}\n     */\n    openMenu() {\n        if (this.editing && this.data && this.editingCell) {\n            const input = this.modalDOM ?\n                (this.modalDOM.querySelector(`input.${this.options.classes.input}[type=text]`) as HTMLInputElement) :\n                (this.dt.wrapperDOM.querySelector(`input.${this.options.classes.input}[type=text]`) as HTMLInputElement)\n\n            this.saveCell(input.value)\n        }\n        document.body.appendChild(this.containerDOM)\n        this.menuOpen = true\n        this.dt.emit(\"editable.context.open\")\n    }\n\n    /**\n     * Close the context menu\n     * @return {Void}\n     */\n    closeMenu() {\n        if (this.menuOpen) {\n            this.menuOpen = false\n            document.body.removeChild(this.containerDOM)\n            this.dt.emit(\"editable.context.close\")\n        }\n    }\n\n    /**\n     * Destroy the instance\n     * @return {Void}\n     */\n    destroy() {\n        this.dt.dom.removeEventListener(this.options.clickEvent, this.events.click)\n        this.dt.dom.removeEventListener(\"contextmenu\", this.events.context)\n        document.removeEventListener(\"click\", this.events.dismissMenu)\n        document.removeEventListener(\"keydown\", this.events.keydown)\n        window.removeEventListener(\"resize\", this.events.reset)\n        window.removeEventListener(\"scroll\", this.events.reset)\n        if (document.body.contains(this.containerDOM)) {\n            document.body.removeChild(this.containerDOM)\n        }\n        if (this.options.inline) {\n            this.dt.options.rowRender = this.originalRowRender\n        }\n        this.initialized = false\n    }\n\n    rowRender(row, tr, index) {\n        if (!this.data || this.data.rowIndex !== index) {\n            return tr\n        }\n\n        if (this.editingCell) {\n            // cell editing\n            const cell = tr.childNodes[columnToVisibleIndex(this.data.columnIndex, this.dt.columns.settings)]\n            cell.childNodes = [\n                {\n                    nodeName: \"INPUT\",\n                    attributes: {\n                        type: \"text\",\n                        value: this.data.content,\n                        class: this.options.classes.input\n                    }\n                }\n            ]\n        } else {\n            // row editing\n\n            // Add the inputs for each cell\n            tr.childNodes.forEach((cell: elementNodeType, i: number) => {\n                const index = visibleToColumnIndex(i, this.dt.columns.settings)\n                const dataCell = row[index]\n                if (!this.options.excludeColumns.includes(index)) {\n                    const cell = tr.childNodes[i]\n                    cell.childNodes = [\n                        {\n                            nodeName: \"INPUT\",\n                            attributes: {\n                                type: \"text\",\n                                value: escapeText(dataCell.text || String(dataCell.data) || \"\"),\n                                class: this.options.classes.input\n                            }\n                        }\n                    ]\n                }\n            })\n\n        }\n        return tr\n\n    }\n}\n\nexport const makeEditable = function(dataTable: DataTable, options = {}) {\n    const editor = new Editor(dataTable, options)\n    if (dataTable.initialized) {\n        editor.init()\n    } else {\n        dataTable.on(\"datatable.init\", () => editor.init())\n    }\n\n    return editor\n}\n","// Source: https://www.freecodecamp.org/news/javascript-debounce-example/\n\nexport const debounce = function(func: () => void, timeout = 300) {\n    let timer: number\n    return (..._args: any[]) => {\n        clearTimeout(timer)\n        timer = window.setTimeout(() => func(), timeout)\n    }\n}\n","/**\n* Default config\n* @type {Object}\n*/\n//import {ColumnFilter} from \"./column_filter\"\n\nexport const defaultConfig = {\n    classes: {\n        button: \"datatable-column-filter-button\",\n        menu: \"datatable-column-filter-menu\",\n        container: \"datatable-column-filter-container\",\n        wrapper: \"datatable-column-filter-wrapper\"\n    },\n    labels: {\n        button: \"Filter columns within the table\" // The filter button title\n    },\n    hiddenColumns: []\n}\n","import {DataTable} from \"../datatable\"\nimport {createElement} from \"../helpers\"\n\nimport {\n    defaultConfig\n} from \"./config\"\n\nimport {ColumnFilterOptions} from \"./types\"\n\nclass ColumnFilter {\n\n    addedButtonDOM: boolean\n\n    menuOpen: boolean\n\n    buttonDOM: HTMLElement\n\n    dt: DataTable\n\n    events: { [key: string]: () => void}\n\n    initialized: boolean\n\n    options: ColumnFilterOptions\n\n    menuDOM: HTMLElement\n\n    containerDOM: HTMLElement\n\n    wrapperDOM: HTMLElement\n\n    limits: {x: number, y: number}\n\n    rect: {width: number, height: number}\n\n    event: Event\n\n    constructor(dataTable: DataTable, options = {}) {\n        this.dt = dataTable\n        this.options = {\n            ...defaultConfig,\n            ...options\n        }\n    }\n\n    init() {\n\n        if (this.initialized) {\n            return\n        }\n\n        let buttonDOM : (HTMLElement | null) = this.dt.wrapperDOM.querySelector(`.${this.options.classes.button}`)\n        if (!buttonDOM) {\n            buttonDOM = createElement(\n                \"button\",\n                {\n                    class: this.options.classes.button,\n                    html: \"▦\"\n                }\n            )\n            // filter button not part of template (could be default template. We add it to search.)\n            const searchWrapper = this.dt.wrapperDOM.querySelector(`.${this.dt.options.classes.search}`)\n            if (searchWrapper) {\n                searchWrapper.appendChild(buttonDOM)\n            } else {\n                this.dt.wrapperDOM.appendChild(buttonDOM)\n            }\n            this.addedButtonDOM = true\n        }\n        this.buttonDOM = buttonDOM\n\n\n        this.containerDOM = createElement(\"div\", {\n            id: this.options.classes.container\n        })\n        this.wrapperDOM = createElement(\"div\", {\n            class: this.options.classes.wrapper\n        })\n        this.menuDOM = createElement(\"ul\", {\n            class: this.options.classes.menu,\n            html: this.dt.data.headings.map(\n                (heading, index) => {\n                    const settings = this.dt.columns.settings[index]\n                    if (this.options.hiddenColumns.includes(index)) {\n                        return \"\"\n                    }\n                    return `<li data-column=\"${index}\">\n                        <input type=\"checkbox\" value=\"${heading.text || heading.data}\" ${settings.hidden ? \"\" : \"checked=''\"}>\n                        <label>\n                            ${heading.text || heading.data}\n                        </label>\n                    </li>`\n                }\n            ).join(\"\")\n        })\n        this.wrapperDOM.appendChild(this.menuDOM)\n        this.containerDOM.appendChild(this.wrapperDOM)\n        this._measureSpace()\n\n        this._bind()\n\n        this.initialized = true\n\n    }\n\n    dismiss() {\n        if (this.addedButtonDOM && this.buttonDOM.parentElement) {\n            this.buttonDOM.parentElement.removeChild(this.buttonDOM)\n        }\n        document.removeEventListener(\"click\", this.events.click)\n    }\n\n    _bind() {\n        this.events = {\n            click: this._click.bind(this)\n        }\n        document.addEventListener(\"click\", this.events.click)\n    }\n\n    _openMenu() {\n        document.body.appendChild(this.containerDOM)\n        this._measureSpace()\n        this.menuOpen = true\n        this.dt.emit(\"columnFilter.menu.open\")\n    }\n\n    _closeMenu() {\n        if (this.menuOpen) {\n            this.menuOpen = false\n            document.body.removeChild(this.containerDOM)\n            this.dt.emit(\"columnFilter.menu.close\")\n        }\n    }\n\n    _measureSpace() {\n        const scrollX = window.scrollX || window.pageXOffset\n        const scrollY = window.scrollY || window.pageYOffset\n        this.rect = this.wrapperDOM.getBoundingClientRect()\n        this.limits = {\n            x: window.innerWidth + scrollX - this.rect.width,\n            y: window.innerHeight + scrollY - this.rect.height\n        }\n    }\n\n    _click(event: MouseEvent) {\n        const target = event.target\n        if (!(target instanceof Element)) {\n            return\n        }\n        this.event = event\n\n        if (this.buttonDOM.contains(target)) {\n            event.preventDefault()\n            if (this.menuOpen) {\n                this._closeMenu()\n                return\n            }\n            this._openMenu()\n            // get the mouse position\n            let x = event.pageX\n            let y = event.pageY\n            // check if we're near the right edge of window\n            if (x > this.limits.x) {\n                x -= this.rect.width\n            }\n            // check if we're near the bottom edge of window\n            if (y > this.limits.y) {\n                y -= this.rect.height\n            }\n            this.wrapperDOM.style.top = `${y}px`\n            this.wrapperDOM.style.left = `${x}px`\n        } else if (this.menuDOM.contains(target)) {\n            const li = target.closest(`.${this.options.classes.menu} > li`) as HTMLElement\n            if (!li) {\n                return\n            }\n            const checkbox = li.querySelector(\"input[type=checkbox]\") as HTMLInputElement\n            if (!checkbox.contains(target)) {\n                checkbox.checked = !checkbox.checked\n            }\n            const column = Number(li.dataset.column)\n            if (checkbox.checked) {\n                this.dt.columns.show([column])\n            } else {\n                this.dt.columns.hide([column])\n            }\n        } else if (this.menuOpen) {\n            this._closeMenu()\n        }\n    }\n\n}\n\n\nexport const addColumnFilter = function(dataTable: DataTable, options = {}) {\n    const columnFilter = new ColumnFilter(dataTable, options)\n    if (dataTable.initialized) {\n        columnFilter.init()\n    } else {\n        dataTable.on(\"datatable.init\", () => columnFilter.init())\n    }\n\n    return columnFilter\n}\n"],"names":["isObject","exports","val","Object","prototype","toString","call","isJson","str","t","JSON","parse","e","Array","isArray","createElement","nodeName","attrs","dom","document","attr","innerHTML","setAttribute","objToText","obj","includes","data","childNodes","map","childNode","join","escapeText","text","replace","visibleToColumnIndex","visibleIndex","columns","counter","columnIndex","hidden","columnToVisibleIndex","objToNode","objNode","insideSvg","options","node","createTextNode","createComment","createElementNS","toLowerCase","attributes","entries","forEach","_a","key","value","appendChild","valueDiffing","HTMLButtonElement","HTMLDataElement","HTMLInputElement","HTMLLIElement","HTMLMeterElement","HTMLOptionElement","HTMLProgressElement","HTMLParamElement","checked","selected","getFromRoute","route","slice","length","c","splice","applyDiff","tree","diff","newNode","reference","action","_const","addElement","addTextElement","info","preDiffApply","addAttribute","Element","name","modifyAttribute","newValue","removeAttribute","modifyTextElement","Text","textDiff","oldValue","parentNode","HTMLTextAreaElement","modifyValue","modifyComment","Comment","modifyChecked","modifySelected","replaceElement","namespaceURI","replaceChild","relocateGroup","apply","groupLength","removeChild","from","index","to","insertBefore","removeElement","parentRoute","element","removeTextElement","nodeType","console","log","postDiffApply","swap","p1","p2","tmp","undoDOM","diffs","reverse","undoDiff","elementDescriptors","el","output","push","concat","id","findUniqueDescriptors","li","uniqueDescriptors","duplicateDescriptors","descriptor","inUnique","uniqueInBoth","l1","l2","l1Unique","l2Unique","inBoth","keys","removeDone","outerDone","innerDone","valueDone","every","cleanNode","diffNode","hasOwnProperty","elementNode","diffChildNode","isEqual","e1","e2","Boolean","e1Attributes","e2Attributes","attribute","roughlyEqual","sameSiblings","preventRecursion","nodeList1","nodeList2","childUniqueDescriptors_1","makeBooleanArray","n","v","markSubTrees","oldTree","newTree","oldChildren","newChildren","marked1","marked2","subsets","returnIndex","arguments","foundAllSubsets","_loop_1","subset","c1","c2","lcsSize","c1Length","c2Length","matches","subsetsSame","some","i","c1Desc","c2Desc","description","c1Index","c1Element","c2Index","c2Element","findCommonSubsets","item","markBoth","subsetsAge","DiffTracker","this","list","add","fn","Diff","_this","stringify","setValue","aKey","aValue","getFromVirtualRoute","nodeIndex","undefined","applyVirtual","routeInfo","newSubsets","preVirtualDiffApply","movedNode","splitLength","c_1","c_2","filter","postVirtualDiffApply","applyVirtualDiff","nodeToObj","aNode","type","tagRE","attrRE","unescape","string","lookup","area","base","br","col","embed","hr","img","input","keygen","link","menuItem","meta","param","source","track","wbr","parseTag","tag","res","voidElement","tagMatch","match","charAt","startsWith","endIndex","indexOf","reg","RegExp","result","done","exec","trim","arr","split","lastIndex","substring","stringToObj","html","current","level","end","isOpen","isComment","start","nextChar","comment","parent_1","parent_2","toUpperCase","DiffFinder","t1Node","t2Node","t1","t2","diffcount","foundAll","debug","t1Orig","t2Orig","tracker","init","findDiffs","diffcap","Error","findNextDiff","error","fdiffs","maxDepth","findOuterDiff","filterOuterDiff","findInnerDiff","findValueDiff","attr1","attr2","attrLength","pos","Math","abs","sort","t1ChildNodes","t2ChildNodes","last","max","childNodesLengthDifference","maxChildCount","cachedSubtrees","subtrees","attemptGroupRelocation","cloneChild","destinationDifferent","toGroup","group","similarNode","testI","gapInformation","stable","gaps1","gaps2","endOld","endNew","j","getGapInformation","shortest","min","index2","index1","DEFAULT_OPTIONS","currentValue","expectedValue","compress","window","components","DiffDOM","varNames","constNames_1","varName","applyDOM","undo","headingsToVirtualHeaderRowDOM","headings","columnSettings","columnsState","classes","format","hiddenHeader","sortable","scrollY","noColumnWidths","unhideHeader","heading","column","searchable","headerClass","class","directionClass","dir","ascending","descending","filters","filterActive","style","widths","headerNodes","String","sorter","dataToVirtualDOM","tableAttributes","rows","rowCursor","header","footer","rowRender","tabIndex","renderHeader","table","row","tr","cell","cIndex","td","cellClass","render","renderedCell","cursor","renderedRow","headerRow","thead","unshift","tfoot","structuredClone","tabindex","r","s","u","a","o","f","h","d","l","$","y","M","weekdays","months","ordinal","m","z","utcOffset","floor","date","year","month","clone","ceil","p","w","D","ms","Q","g","_","S","args","O","locale","$L","utc","$u","x","$x","$offset","$d","Date","NaN","test","UTC","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","isSame","startOf","endOf","isAfter","isBefore","$g","set","unix","valueOf","getTime","toDate","$locale","weekStart","$set","daysInMonth","get","Number","round","subtract","invalidDate","meridiem","YY","YYYY","MM","MMM","monthsShort","MMMM","DD","dd","weekdaysMin","ddd","weekdaysShort","dddd","H","HH","hh","A","mm","ss","SSS","Z","getTimezoneOffset","toJSON","toISOString","toUTCString","T","extend","$i","isDayjs","en","Ls","module","LTS","LT","L","LL","LLL","LLLL","zone","offset","afternoon","milliseconds","SS","Do","day","Y","ZZ","formats","regex","parser","hours","customParseFormat","parseTwoDigitYear","minutes","seconds","dayjs","parseDate","content","readDataCell","constructor","find","cellData","order","parseInt","readHeaderCell","readTableData","dataOption","defaultType","defaultFormat","tHead","querySelectorAll","th","innerText","readDOMHeaderCell","settings","dataset","getAttribute","_cell","tBodies","cells","readDOMDataCell","isNaN","parseFloat","Rows","dt","setCursor","oldCursor","_renderTable","cursorDOM","querySelector","scrollIntoView","block","emit","hasRows","update","remove","select","_row","findRowIndex","findIndex","findRow","cols","updateRow","Columns","_state","columnOptions","selector","numeric","caseFirst","sensitivity","ignorePunctuation","sortSequence","searchItemSeparator","readColumnSettings","_node","b","hide","show","visible","newColumnSelector","_heading","currentFilter","newFilterState","returnNext","_currentPage","currentDir","currentDirIndex","collator","Intl","Collator","usage","row1","row2","order1","order2","temp","compare","_searchQueries","multiSearch","_measureWidths","activeHeadings","fixedColumns","renderOptions","noPaging","headerDOM","parentElement","activeDOMHeadings","firstElementChild","domCounter","absoluteColumnWidths","width","offsetWidth","totalOffsetWidth","reduce","total","cellWidth","defaultConfig","destroyable","searchQuerySeparator","searchAnd","paging","perPage","perPageSelect","nextPrev","firstLast","prevText","nextText","firstText","lastText","ellipsisText","truncatePager","pagerDelta","fixedHeight","rowNavigation","pagerRender","tableRender","diffDomOptions","labels","placeholder","searchTitle","pageTitle","noRows","noResults","template","top","dropdown","search","container","bottom","pagination","active","disabled","ellipsis","empty","headercontainer","loading","paginationList","paginationListItem","paginationListItemLink","wrapper","page","label","state","createVirtualPagerDOM","onFirstPage","onLastPage","currentPage","totalPages","pagerListItems","prev","pages","paginationListItems","pagesLength","doublePagerDelta","previousPage","nextPage","paginationListItemsToModify","k","previousLi","modifiedLis","pageNumber","previousPageNumber","newLi","truncate","next","HTMLTableElement","_initialInnerHTML","_listeners","onResize","_onResize","_dd","initialized","_events","hasHeadings","classList","contains","_virtualDOM","_tableAttributes","_render","setTimeout","wrapperDOM","choice","lab","option","Option","containerDOM","_pagerDOMs","HTMLElement","_virtualPagerDOM","_label","_rect","getBoundingClientRect","_fixHeight","_bindEvents","newVirtualDOM","renderedTableVirtualDOM","_renderPage","lastRowCursor","lastPage","setMessage","items","_searchData","_renderPagers","newPagerVirtualDOM","renderedPagerVirtualDOM","pagerDOM","_renderSeparateHeader","_virtualHeaderDOM","tableVirtualDOM","newVirtualHeaderDOM","paddingRight","clientWidth","paddedVirtualHeaderDOM","scrollHeight","clientHeight","overflowY","HTMLSelectElement","addEventListener","event","target","preventDefault","searches","andSearch","and","terms","querySeparator","term","hyperlink","closest","hasAttribute","children","lastRow","stopPropagation","foundRow","nextRow","destroy","removeEventListener","measureWidths","_paginate","filterState","height","rawQueries","queries","query","queryWords","columnQueries","normalize","idx","searchRow","queryWord","searchItem","insert","rIndex","refresh","print","tableDOM","newTableVirtualDOM","open","body","message","colspan","on","callback","off","userOptions","lineDelimiter","columnDelimiter","removeDoubleQuotes","shift","values","json","warn","download","skipColumn","columnShown","headers","selection","href","encodeURI","filename","click","replacer","space","blob","Blob","url","URL","createObjectURL","revokeObjectURL","tableName","form","menu","save","cancel","close","inner","modal","editable","separator","closeX","editCell","editRow","removeRow","reallyRemove","reallyCancel","cancelModal","editor","confirm","inline","hiddenColumns","contextMenu","clickEvent","excludeColumns","menuItems","_event","Editor","dataTable","originalRowRender","newTr","menuDOM","updateMenu","menuOpen","editing","editingRow","editingCell","bindEvents","events","keydown","bind","context","dismissMenu","reset","func","timeout","timer","_args","clearTimeout","debounce","pageX","pageY","limits","rect","left","openMenu","modalDOM","saveCell","closeModal","inputs","saveRow","cellIndex","closeMenu","rowIndex","editCellModal","openModal","focus","selectionStart","selectionEnd","oldData","stringValue","editRowModal","lastElementChild","pop","oldCell","colIndex","newData","scrollX","pageXOffset","pageYOffset","innerWidth","innerHeight","valid","dataCell","button","ColumnFilter","buttonDOM","searchWrapper","addedButtonDOM","_measureSpace","_bind","dismiss","_click","_openMenu","_closeMenu","checkbox","columnFilter"],"mappings":"6EAKaA,EAAWC,EAAA,YAACC,GAA0G,oBAAxCC,OAAOC,UAAUC,SAASC,KAAKJ,KAK7GK,EAAMN,EAAA,UAAIO,IACnB,IAAIC,GAAI,EACR,IACIA,EAAIC,KAAKC,MAAMH,EAGlB,CAFC,MAAOI,GACL,OAAO,CACV,CACD,QAAS,OAASH,IAAOI,MAAMC,QAAQL,KAAOT,EAASS,KAAQA,CAAC,IAMvDM,EAAgBd,EAAA,iBAAA,CAACe,EAAkBC,KAC5C,MAAMC,EAAMC,SAASJ,cAAcC,GACnC,GAAIC,GAAS,iBAAmBA,EAC5B,IAAK,MAAMG,KAAQH,EACX,SAAWG,EACXF,EAAIG,UAAYJ,EAAMG,GAEtBF,EAAII,aAAaF,EAAMH,EAAMG,IAIzC,OAAOF,CAAG,IAGDK,EAAaC,GAClB,CAAC,QAAS,YAAYC,SAASD,EAAIR,UAC3BQ,EAAqBE,KAE7BF,EAAIG,WACGH,EAAIG,WAAWC,KAAKC,GAAgDN,EAAUM,KAAYC,KAAK,IAEnG,GAIEC,EAAa,SAASC,GAC/B,OAAOA,EACFC,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,SACvB,EAGaC,EAAuB,SAASC,EAAsBC,GAC/D,IAAIC,EAAU,EACVC,EAAc,EAClB,KAAOD,EAAWF,EAAa,GAAI,CACRC,EAAQE,GACXC,SAChBF,GAAW,GAEfC,GAAe,CAClB,CACD,OAAOA,EAAY,CACvB,EAEaE,EAAuB,SAASF,EAAqBF,GAC9D,IAAID,EAAeG,EACfD,EAAU,EACd,KAAOA,EAAUC,GAAa,CACHF,EAAQC,GACZE,SACfJ,GAAgB,GAEpBE,GACH,CACD,OAAOF,CACX,ECjFA,SAASM,EAAUC,EAASC,EAAWC,GACnC,IAAIC,EAkDJ,MAjDyB,UAArBH,EAAQ1B,SACR6B,EAAOD,EAAQzB,SAAS2B,eAAeJ,EAAQhB,MAErB,aAArBgB,EAAQ1B,SACb6B,EAAOD,EAAQzB,SAAS4B,cAAcL,EAAQhB,OAG1CiB,EACAE,EAAOD,EAAQzB,SAAS6B,gBAAgB,6BAA8BN,EAAQ1B,UAEtC,QAAnC0B,EAAQ1B,SAASiC,eACtBJ,EAAOD,EAAQzB,SAAS6B,gBAAgB,6BAA8B,OACtEL,GAAY,GAGZE,EAAOD,EAAQzB,SAASJ,cAAc2B,EAAQ1B,UAE9C0B,EAAQQ,YACR/C,OAAOgD,QAAQT,EAAQQ,YAAYE,SAAQ,SAAUC,GACjD,IAAIC,EAAMD,EAAG,GAAIE,EAAQF,EAAG,GAC5B,OAAOR,EAAKvB,aAAagC,EAAKC,EAC9C,IAEYb,EAAQf,YAERe,EAAQf,WAAWyB,SAAQ,SAAUvB,GACjC,OAAOgB,EAAKW,YAAYf,EAAUZ,EAAWc,EAAWC,GACxE,IAEYA,EAAQa,eACJf,EAAQa,QACPV,aAAgBa,mBACbb,aAAgBc,iBAChBd,aAAgBe,kBAChBf,aAAgBgB,eAChBhB,aAAgBiB,kBAChBjB,aAAgBkB,mBAChBlB,aAAgBmB,qBAChBnB,aAAgBoB,oBACpBpB,EAAKU,MAAQb,EAAQa,OAErBb,EAAQwB,SAAWrB,aAAgBe,mBACnCf,EAAKqB,QAAUxB,EAAQwB,SAEvBxB,EAAQyB,UAAYtB,aAAgBkB,oBACpClB,EAAKsB,SAAWzB,EAAQyB,YAI7BtB,CACX,CAGA,IAAIuB,EAAe,SAAUvB,EAAMwB,GAE/B,IADAA,EAAQA,EAAMC,QACPD,EAAME,OAAS,GAAG,CACrB,IAAIC,EAAIH,EAAMI,OAAO,EAAG,GAAG,GAC3B5B,EAAOA,EAAKlB,WAAW6C,EAC1B,CACD,OAAO3B,CACX,EACA,SAAS6B,EAAUC,EAAMC,EAAMhC,GAE3B,IAEIC,EAKAgC,EACAC,EARAC,EAASH,EAAKhC,EAAQoC,OAAOD,QAC7BV,EAAQO,EAAKhC,EAAQoC,OAAOX,OAE3B,CAACzB,EAAQoC,OAAOC,WAAYrC,EAAQoC,OAAOE,gBAAgBzD,SAASsD,KAErElC,EAAOuB,EAAaO,EAAMN,IAM9B,IAAIc,EAAO,CACPP,KAAMA,EACN/B,KAAMA,GAEV,GAAID,EAAQwC,aAAaD,GACrB,OAAO,EAEX,OAAQJ,GACJ,KAAKnC,EAAQoC,OAAOK,aAChB,KAAKxC,GAAUA,aAAgByC,SAC3B,OAAO,EAEXzC,EAAKvB,aAAasD,EAAKhC,EAAQoC,OAAOO,MAAOX,EAAKhC,EAAQoC,OAAOzB,QACjE,MACJ,KAAKX,EAAQoC,OAAOQ,gBAChB,KAAK3C,GAAUA,aAAgByC,SAC3B,OAAO,EAEXzC,EAAKvB,aAAasD,EAAKhC,EAAQoC,OAAOO,MAAOX,EAAKhC,EAAQoC,OAAOS,WAC7D5C,aAAgBe,kBACc,UAA9BgB,EAAKhC,EAAQoC,OAAOO,QACpB1C,EAAKU,MAAQqB,EAAKhC,EAAQoC,OAAOS,WAErC,MACJ,KAAK7C,EAAQoC,OAAOU,gBAChB,KAAK7C,GAAUA,aAAgByC,SAC3B,OAAO,EAEXzC,EAAK6C,gBAAgBd,EAAKhC,EAAQoC,OAAOO,OACzC,MACJ,KAAK3C,EAAQoC,OAAOW,kBAChB,KAAK9C,GAAUA,aAAgB+C,MAC3B,OAAO,EAEXhD,EAAQiD,SAAShD,EAAMA,EAAKnB,KAAMkD,EAAKhC,EAAQoC,OAAOc,UAAWlB,EAAKhC,EAAQoC,OAAOS,WACjF5C,EAAKkD,sBAAsBC,sBAC3BnD,EAAKkD,WAAWxC,MAAQqB,EAAKhC,EAAQoC,OAAOS,WAEhD,MACJ,KAAK7C,EAAQoC,OAAOiB,YAChB,IAAKpD,QAA8B,IAAfA,EAAKU,MACrB,OAAO,EAEXV,EAAKU,MAAQqB,EAAKhC,EAAQoC,OAAOS,UACjC,MACJ,KAAK7C,EAAQoC,OAAOkB,cAChB,KAAKrD,GAAUA,aAAgBsD,SAC3B,OAAO,EAEXvD,EAAQiD,SAAShD,EAAMA,EAAKnB,KAAMkD,EAAKhC,EAAQoC,OAAOc,UAAWlB,EAAKhC,EAAQoC,OAAOS,WACrF,MACJ,KAAK7C,EAAQoC,OAAOoB,cAChB,IAAKvD,QAAgC,IAAjBA,EAAKqB,QACrB,OAAO,EAEXrB,EAAKqB,QAAUU,EAAKhC,EAAQoC,OAAOS,UACnC,MACJ,KAAK7C,EAAQoC,OAAOqB,eAChB,IAAKxD,QAAiC,IAAlBA,EAAKsB,SACrB,OAAO,EAEXtB,EAAKsB,SAAWS,EAAKhC,EAAQoC,OAAOS,UACpC,MACJ,KAAK7C,EAAQoC,OAAOsB,eAChB,IAAI3D,EAAqE,QAAzDiC,EAAKhC,EAAQoC,OAAOS,UAAUzE,SAASiC,eAClB,+BAAjCJ,EAAKkD,WAAWQ,aACpB1D,EAAKkD,WAAWS,aAAa/D,EAAUmC,EAAKhC,EAAQoC,OAAOS,UAAW9C,EAAWC,GAAUC,GAC3F,MAEJ,KAAKD,EAAQoC,OAAOyB,cACJ5F,MAAM6F,WAAM,EAAQ,IAAI7F,MAAM+D,EAAKhC,EAAQoC,OAAO2B,eAAe/E,KAAI,WAC7E,OAAOiB,EAAK+D,YAAY/D,EAAKlB,WAAWiD,EAAKhC,EAAQoC,OAAO6B,OAC5E,IACsBzD,SAAQ,SAAUvB,EAAWiF,GACrB,IAAVA,IACAhC,EACIjC,EAAKlB,WAAWiD,EAAKhC,EAAQoC,OAAO+B,MAE5ClE,EAAKmE,aAAanF,EAAWiD,GAAa,KAC1D,IACY,MACJ,KAAKlC,EAAQoC,OAAOiC,cAChBpE,EAAKkD,WAAWa,YAAY/D,GAC5B,MACJ,KAAKD,EAAQoC,OAAOC,WAChB,IACIT,GADA0C,EAAc7C,EAAMC,SACJG,OAAOyC,EAAY3C,OAAS,EAAG,GAAG,GAEtD,MADA1B,EAAOuB,EAAaO,EAAMuC,cACJ5B,SAClB,OAAO,EAEXzC,EAAKmE,aAAavE,EAAUmC,EAAKhC,EAAQoC,OAAOmC,SAAgC,+BAAtBtE,EAAK0D,aAA+C3D,GAAUC,EAAKlB,WAAW6C,IAAM,MAC9I,MAEJ,KAAK5B,EAAQoC,OAAOoC,kBAChB,IAAKvE,GAA0B,IAAlBA,EAAKwE,SACd,OAAO,EAEX,IAAItB,EAAalD,EAAKkD,WACtBA,EAAWa,YAAY/D,GACnBkD,aAAsBC,sBACtBD,EAAWxC,MAAQ,IAEvB,MAEJ,KAAKX,EAAQoC,OAAOE,eAChB,IAAIgC,EACA1C,GADA0C,EAAc7C,EAAMC,SACJG,OAAOyC,EAAY3C,OAAS,EAAG,GAAG,GAGtD,GAFAM,EAAUjC,EAAQzB,SAAS2B,eAAe8B,EAAKhC,EAAQoC,OAAOzB,UAC9DV,EAAOuB,EAAaO,EAAMuC,IAChBvF,WACN,OAAO,EAEXkB,EAAKmE,aAAanC,EAAShC,EAAKlB,WAAW6C,IAAM,MAC7C3B,EAAKkD,sBAAsBC,sBAC3BnD,EAAKkD,WAAWxC,MAAQqB,EAAKhC,EAAQoC,OAAOzB,QAEhD,MAEJ,QACI+D,QAAQC,IAAI,kBASpB,OALA3E,EAAQ4E,cAAc,CAClB5C,KAAMO,EAAKP,KACX/B,KAAMsC,EAAKtC,KACXgC,QAASA,KAEN,CACX,CAQA,SAAS4C,EAAKjG,EAAKkG,EAAIC,GACnB,IAAIC,EAAMpG,EAAIkG,GACdlG,EAAIkG,GAAMlG,EAAImG,GACdnG,EAAImG,GAAMC,CACd,CAgEA,SAASC,EAAQlD,EAAMmD,EAAOlF,IAC1BkF,EAAQA,EAAMxD,SACRyD,UACND,EAAM1E,SAAQ,SAAUwB,IAlE5B,SAAkBD,EAAMC,EAAMhC,GAE1B,OAAQgC,EAAKhC,EAAQoC,OAAOD,SACxB,KAAKnC,EAAQoC,OAAOK,aAChBT,EAAKhC,EAAQoC,OAAOD,QAAUnC,EAAQoC,OAAOU,gBAC7ChB,EAAUC,EAAMC,EAAMhC,GACtB,MACJ,KAAKA,EAAQoC,OAAOQ,gBAChBiC,EAAK7C,EAAMhC,EAAQoC,OAAOc,SAAUlD,EAAQoC,OAAOS,UACnDf,EAAUC,EAAMC,EAAMhC,GACtB,MACJ,KAAKA,EAAQoC,OAAOU,gBAChBd,EAAKhC,EAAQoC,OAAOD,QAAUnC,EAAQoC,OAAOK,aAC7CX,EAAUC,EAAMC,EAAMhC,GACtB,MACJ,KAAKA,EAAQoC,OAAOW,kBAIpB,KAAK/C,EAAQoC,OAAOiB,YAIpB,KAAKrD,EAAQoC,OAAOkB,cAIpB,KAAKtD,EAAQoC,OAAOoB,cAIpB,KAAKxD,EAAQoC,OAAOqB,eAIpB,KAAKzD,EAAQoC,OAAOsB,eAChBmB,EAAK7C,EAAMhC,EAAQoC,OAAOc,SAAUlD,EAAQoC,OAAOS,UACnDf,EAAUC,EAAMC,EAAMhC,GACtB,MACJ,KAAKA,EAAQoC,OAAOyB,cAChBgB,EAAK7C,EAAMhC,EAAQoC,OAAO6B,KAAMjE,EAAQoC,OAAO+B,IAC/CrC,EAAUC,EAAMC,EAAMhC,GACtB,MACJ,KAAKA,EAAQoC,OAAOiC,cAChBrC,EAAKhC,EAAQoC,OAAOD,QAAUnC,EAAQoC,OAAOC,WAC7CP,EAAUC,EAAMC,EAAMhC,GACtB,MACJ,KAAKA,EAAQoC,OAAOC,WAChBL,EAAKhC,EAAQoC,OAAOD,QAAUnC,EAAQoC,OAAOiC,cAC7CvC,EAAUC,EAAMC,EAAMhC,GACtB,MACJ,KAAKA,EAAQoC,OAAOoC,kBAChBxC,EAAKhC,EAAQoC,OAAOD,QAAUnC,EAAQoC,OAAOE,eAC7CR,EAAUC,EAAMC,EAAMhC,GACtB,MACJ,KAAKA,EAAQoC,OAAOE,eAChBN,EAAKhC,EAAQoC,OAAOD,QAAUnC,EAAQoC,OAAOoC,kBAC7C1C,EAAUC,EAAMC,EAAMhC,GACtB,MACJ,QACI0E,QAAQC,IAAI,kBAExB,CAKQS,CAASrD,EAAMC,EAAMhC,EAC7B,GACA,CAEA,IAAIqF,EAAqB,SAAUC,GAC/B,IAAIC,EAAS,GAab,OAZAA,EAAOC,KAAKF,EAAGlH,UACK,UAAhBkH,EAAGlH,UAAwC,aAAhBkH,EAAGlH,UAE1BkH,EAAGhF,aACCgF,EAAGhF,WAAkB,OACrBiF,EAAOC,KAAK,GAAGC,OAAOH,EAAGlH,SAAU,KAAKqH,OAAOH,EAAGhF,WAAkB,MAAEjB,QAAQ,KAAM,OAEpFiG,EAAGhF,WAAWoF,IACdH,EAAOC,KAAK,GAAGC,OAAOH,EAAGlH,SAAU,KAAKqH,OAAOH,EAAGhF,WAAWoF,MAIlEH,CACX,EACII,EAAwB,SAAUC,GAClC,IAAIC,EAAoB,CAAA,EACpBC,EAAuB,CAAA,EAc3B,OAbAF,EAAGpF,SAAQ,SAAUP,GACjBoF,EAAmBpF,GAAMO,SAAQ,SAAUuF,GACvC,IAAIC,EAAWD,KAAcF,EAExBG,GADSD,KAAcD,EAInBE,WACEH,EAAkBE,GACzBD,EAAqBC,IAAc,GAJnCF,EAAkBE,IAAc,CAMhD,GACA,IACWF,CACX,EACII,EAAe,SAAUC,EAAIC,GAC7B,IAAIC,EAAWT,EAAsBO,GACjCG,EAAWV,EAAsBQ,GACjCG,EAAS,CAAA,EAMb,OALA/I,OAAOgJ,KAAKH,GAAU5F,SAAQ,SAAUE,GAChC2F,EAAS3F,KACT4F,EAAO5F,IAAO,EAE1B,IACW4F,CACX,EACIE,EAAa,SAAUzE,GAIvB,cAHOA,EAAK0E,iBACL1E,EAAK2E,iBACL3E,EAAK4E,WACR5E,EAAKhD,YACEgD,EAAKhD,WAAW6H,MAAMJ,EAKrC,EACIK,EAAY,SAAUC,GACtB,GAAIvJ,OAAOC,UAAUuJ,eAAerJ,KAAKoJ,EAAU,QAK/C,MAJe,CACX1I,SAAgC,UAAtB0I,EAAS1I,SAAuB,QAAU,WACpDU,KAAMgI,EAAShI,MAKnB,IAAIkI,EAAc,CACd5I,SAAU0I,EAAS1I,UAoBvB,OAjBIb,OAAOC,UAAUuJ,eAAerJ,KAAKoJ,EAAU,gBAC/CE,EAAY1G,WAAawG,EAASxG,YAElC/C,OAAOC,UAAUuJ,eAAerJ,KAAKoJ,EAAU,aAC/CE,EAAY1F,QAAUwF,EAASxF,SAE/B/D,OAAOC,UAAUuJ,eAAerJ,KAAKoJ,EAAU,WAC/CE,EAAYrG,MAAQmG,EAASnG,OAE7BpD,OAAOC,UAAUuJ,eAAerJ,KAAKoJ,EAAU,cAC/CE,EAAYzF,SAAWuF,EAASvF,UAEhChE,OAAOC,UAAUuJ,eAAerJ,KAAKoJ,EAAU,gBAC/CE,EAAYjI,WAAa+H,EAAS/H,WAAWC,KAAI,SAAUiI,GACvD,OAAOJ,EAAUI,EACjC,KAEeD,CAEf,EACIE,EAAU,SAAUC,EAAIC,GACxB,IAAK,CAAC,WAAY,QAAS,UAAW,WAAY,QAAQR,OAAM,SAAUrC,GACtE,OAAI4C,EAAG5C,KAAa6C,EAAG7C,EAI/B,IACQ,OAAO,EAEX,GAAIhH,OAAOC,UAAUuJ,eAAerJ,KAAKyJ,EAAI,QAEzC,OAAO,EAIX,GAAIE,QAAQF,EAAG7G,cAAgB+G,QAAQD,EAAG9G,YACtC,OAAO,EAEX,GAAI+G,QAAQF,EAAGpI,cAAgBsI,QAAQD,EAAGrI,YACtC,OAAO,EAEX,GAAIoI,EAAG7G,WAAY,CACf,IAAIgH,EAAe/J,OAAOgJ,KAAKY,EAAG7G,YAC9BiH,EAAehK,OAAOgJ,KAAKa,EAAG9G,YAClC,GAAIgH,EAAa3F,SAAW4F,EAAa5F,OACrC,OAAO,EAEX,IAAK2F,EAAaV,OAAM,SAAUY,GAC9B,OAAIL,EAAG7G,WAAWkH,KACdJ,EAAG9G,WAAWkH,EAI9B,IACY,OAAO,CAEd,CACD,GAAIL,EAAGpI,WAAY,CACf,GAAIoI,EAAGpI,WAAW4C,SAAWyF,EAAGrI,WAAW4C,OACvC,OAAO,EAEX,IAAKwF,EAAGpI,WAAW6H,OAAM,SAAU3H,EAAWiF,GAC1C,OAAOgD,EAAQjI,EAAWmI,EAAGrI,WAAWmF,GACpD,IACY,OAAO,CAEd,CACD,OAAO,CACX,EACIuD,EAAe,SAAUN,EAAIC,EAAIvB,EAAmB6B,EAAcC,GAElE,QADyB,IAArBA,IAA+BA,GAAmB,IACjDR,IAAOC,EACR,OAAO,EAEX,GAAID,EAAG/I,WAAagJ,EAAGhJ,SACnB,OAAO,EAEX,GAAI,CAAC,QAAS,YAAYS,SAASsI,EAAG/I,UAIlC,QAAOuJ,GAEDR,EAAGrI,OAASsI,EAAGtI,KAIzB,GAAIqI,EAAG/I,YAAYyH,EACf,OAAO,EAEX,GAAIsB,EAAG7G,YAAc8G,EAAG9G,WAAY,CAChC,GAAI6G,EAAG7G,WAAWoF,GAAI,CAClB,GAAIyB,EAAG7G,WAAWoF,KAAO0B,EAAG9G,WAAWoF,GACnC,OAAO,EAIP,GADmB,GAAGD,OAAO0B,EAAG/I,SAAU,KAAKqH,OAAO0B,EAAG7G,WAAWoF,MAChDG,EAChB,OAAO,CAGlB,CACD,GAAIsB,EAAG7G,WAAkB,OACrB6G,EAAG7G,WAAkB,QAAM8G,EAAG9G,WAAkB,MAEhD,GADsB,GAAGmF,OAAO0B,EAAG/I,SAAU,KAAKqH,OAAO0B,EAAG7G,WAAkB,MAAEjB,QAAQ,KAAM,QACvEwG,EACnB,OAAO,CAGlB,CACD,GAAI6B,EACA,OAAO,EAEX,IAAIE,EAAYT,EAAGpI,WAAaoI,EAAGpI,WAAW2C,QAAQyD,UAAY,GAC9D0C,EAAYT,EAAGrI,WAAaqI,EAAGrI,WAAW2C,QAAQyD,UAAY,GAClE,GAAIyC,EAAUjG,SAAWkG,EAAUlG,OAC/B,OAAO,EAEX,GAAIgG,EACA,OAAOC,EAAUhB,OAAM,SAAUrC,EAASL,GACtC,OAAOK,EAAQnG,WAAayJ,EAAU3D,GAAO9F,QACzD,IAKQ,IAAI0J,EAA2B7B,EAAa2B,EAAWC,GACvD,OAAOD,EAAUhB,OAAM,SAAUrC,EAASL,GACtC,OAAOuD,EAAalD,EAASsD,EAAU3D,GAAQ4D,GAA0B,GAAM,EAC3F,GAEA,EAiEIC,EAAmB,SAAUC,EAAGC,GAChC,OAAOhK,MAAM6F,WAAM,EAAQ,IAAI7F,MAAM+J,IAAIhJ,KAAI,WAAc,OAAOiJ,CAAI,GAC1E,EAqDIC,EAAe,SAAUC,EAASC,GAwBlC,IAtBA,IAAIC,EAAcF,EAAQpJ,WAAaoJ,EAAQpJ,WAAa,GACxDuJ,EAAcF,EAAQrJ,WAAaqJ,EAAQrJ,WAAa,GACxDwJ,EAAUR,EAAiBM,EAAY1G,QAAQ,GAC/C6G,EAAUT,EAAiBO,EAAY3G,QAAQ,GAC/C8G,EAAU,GACVC,EAAc,WACd,OAAOC,UAAU,EACzB,EACQC,GAAkB,EAClBC,EAAU,WACV,IAAIC,EAhIY,SAAUC,EAAIC,EAAIT,EAASC,GAC/C,IAAIS,EAAU,EACV/E,EAAQ,GACRgF,EAAWH,EAAGpH,OACdwH,EAAWH,EAAGrH,OAElByH,EAAUnL,MAAM6F,WAAM,EAAQ,IAAI7F,MAAMiL,EAAW,IAAIlK,KAAI,WAAc,MAAO,EAAK,IACjF6G,EAAoBI,EAAa8C,EAAIC,GAIzCK,EAAcH,IAAaC,EACvBE,GACAN,EAAGO,MAAK,SAAU/E,EAASgF,GACvB,IAAIC,EAASnE,EAAmBd,GAC5BkF,EAASpE,EAAmB2D,EAAGO,IACnC,OAAIC,EAAO7H,SAAW8H,EAAO9H,QACzB0H,GAAc,GACP,IAEXG,EAAOF,MAAK,SAAUI,EAAaH,GAC/B,GAAIG,IAAgBD,EAAOF,GAEvB,OADAF,GAAc,GACP,CAE3B,KACiBA,QAAL,EAGZ,IAGI,IAAK,IAAIM,EAAU,EAAGA,EAAUT,EAAUS,IAEtC,IADA,IAAIC,EAAYb,EAAGY,GACVE,EAAU,EAAGA,EAAUV,EAAUU,IAAW,CACjD,IAAIC,EAAYd,EAAGa,GACdtB,EAAQoB,IACRnB,EAAQqB,KACTpC,EAAamC,EAAWE,EAAWjE,EAAmBwD,GAUtDD,EAAQO,EAAU,GAAGE,EAAU,GAAK,GATpCT,EAAQO,EAAU,GAAGE,EAAU,GAAKT,EAAQO,GAASE,GAC/CT,EAAQO,GAASE,GAAW,EAC5B,EACFT,EAAQO,EAAU,GAAGE,EAAU,IAAMZ,IACrCA,EAAUG,EAAQO,EAAU,GAAGE,EAAU,GACzC3F,EAAQ,CAACyF,EAAU,EAAGE,EAAU,IAM3C,CAEL,OAAgB,IAAZZ,GAGG,CACH/F,SAAUgB,EAAM,GAAK+E,EACrBpG,SAAUqB,EAAM,GAAK+E,EACrBtH,OAAQsH,EAEhB,CAoEqBc,CAAkB1B,EAAaC,EAAaC,EAASC,GAC9DM,GACAL,EAAQjD,KAAKsD,GACK7K,MAAM6F,WAAM,EAAQ,IAAI7F,MAAM6K,EAAOnH,SAAS3C,IAAI0J,GACxDlI,SAAQ,SAAUwJ,GAC1B,OArBD,SAAUzB,EAASC,EAASM,EAAQS,GAC/ChB,EAAQO,EAAO5F,SAAWqG,IAAK,EAC/Bf,EAAQM,EAAOjG,SAAW0G,IAAK,CACnC,CAkBuBU,CAAS1B,EAASC,EAASM,EAAQkB,EAC1D,KAGYpB,GAAkB,CAE9B,GACYA,GACJC,IAIJ,OAFAV,EAAQM,QAAUA,EAClBN,EAAQ+B,WAAa,IACdzB,CACX,EACI0B,EAA6B,WAC7B,SAASA,IACLC,KAAKC,KAAO,EACf,CAQD,OAPAF,EAAY3M,UAAU8M,IAAM,SAAUpF,GAClC,IAAIzE,GACHA,EAAK2J,KAAKC,MAAM7E,KAAK1B,MAAMrD,EAAIyE,EACxC,EACIiF,EAAY3M,UAAUgD,QAAU,SAAU+J,GACtCH,KAAKC,KAAK7J,SAAQ,SAAUoF,GAAM,OAAO2E,EAAG3E,EAAI,GACxD,EACWuE,CACX,IAGIK,EAAsB,WACtB,SAASA,EAAKxK,QACM,IAAZA,IAAsBA,EAAU,CAAE,GACtC,IAAIyK,EAAQL,KACZ7M,OAAOgD,QAAQP,GAASQ,SAAQ,SAAUC,GACtC,IAAIC,EAAMD,EAAG,GAAIE,EAAQF,EAAG,GAC5B,OAAQgK,EAAM/J,GAAOC,CACjC,GACK,CAQD,OAPA6J,EAAKhN,UAAUC,SAAW,WACtB,OAAOK,KAAK4M,UAAUN,KAC9B,EACII,EAAKhN,UAAUmN,SAAW,SAAUC,EAAMC,GAEtC,OADAT,KAAKQ,GAAQC,EACNT,IACf,EACWI,CACX,IAGA,SAASM,EAAoB/I,EAAMN,GAC/B,IACI0B,EACA4H,EAFA9K,EAAO8B,EAIX,IADAN,EAAQA,EAAMC,QACPD,EAAME,OAAS,GAClBoJ,EAAYtJ,EAAMI,OAAO,EAAG,GAAG,GAC/BsB,EAAalD,EACbA,EAAOA,EAAKlB,WAAakB,EAAKlB,WAAWgM,QAAaC,EAE1D,MAAO,CACH/K,KAAMA,EACNkD,WAAYA,EACZ4H,UAAWA,EAEnB,CAoRA,SAASE,EAAalJ,EAAMmD,EAAOlF,GAI/B,OAHAkF,EAAM1E,SAAQ,SAAUwB,IApR5B,SAA0BD,EAAMC,EAAMhC,GAElC,IAAIS,EACAR,EAAMkD,EAAY4H,EACtB,IAAK,CAAC/K,EAAQoC,OAAOC,WAAYrC,EAAQoC,OAAOE,gBAAgBzD,SAASmD,EAAKhC,EAAQoC,OAAOD,SAAU,CAEnG,IAAI+I,EAAYJ,EAAoB/I,EAAMC,EAAKhC,EAAQoC,OAAOX,QAC9DxB,EAAOiL,EAAUjL,KACjBkD,EAAa+H,EAAU/H,WACvB4H,EAAYG,EAAUH,SACzB,CACD,IASI9I,EAEAR,EAXA0J,EAAa,GAEb5I,EAAO,CACPP,KAAMA,EACN/B,KAAMA,GAEV,GAAID,EAAQoL,oBAAoB7I,GAC5B,OAAO,EAKX,OAAQP,EAAKhC,EAAQoC,OAAOD,SACxB,KAAKnC,EAAQoC,OAAOK,aACXxC,EAAKK,aACNL,EAAKK,WAAa,IAEtBL,EAAKK,WAAW0B,EAAKhC,EAAQoC,OAAOO,OAChCX,EAAKhC,EAAQoC,OAAOzB,OACU,YAA9BqB,EAAKhC,EAAQoC,OAAOO,MACpB1C,EAAKqB,SAAU,EAEoB,aAA9BU,EAAKhC,EAAQoC,OAAOO,MACzB1C,EAAKsB,UAAW,EAEO,UAAlBtB,EAAK7B,UACoB,UAA9B4D,EAAKhC,EAAQoC,OAAOO,QACpB1C,EAAKU,MAAQqB,EAAKhC,EAAQoC,OAAOzB,QAErC,MACJ,KAAKX,EAAQoC,OAAOQ,gBAChB3C,EAAKK,WAAW0B,EAAKhC,EAAQoC,OAAOO,OAChCX,EAAKhC,EAAQoC,OAAOS,UACxB,MACJ,KAAK7C,EAAQoC,OAAOU,uBACT7C,EAAKK,WAAW0B,EAAKhC,EAAQoC,OAAOO,OACC,IAAxCpF,OAAOgJ,KAAKtG,EAAKK,YAAYqB,eACtB1B,EAAKK,WAEkB,YAA9B0B,EAAKhC,EAAQoC,OAAOO,MACpB1C,EAAKqB,SAAU,EAEoB,aAA9BU,EAAKhC,EAAQoC,OAAOO,aAClB1C,EAAKsB,SAEW,UAAlBtB,EAAK7B,UACoB,UAA9B4D,EAAKhC,EAAQoC,OAAOO,cACb1C,EAAKU,MAEhB,MACJ,KAAKX,EAAQoC,OAAOW,kBAChB9C,EAAKnB,KAAOkD,EAAKhC,EAAQoC,OAAOS,UACJ,aAAxBM,EAAW/E,WACX+E,EAAWxC,MAAQqB,EAAKhC,EAAQoC,OAAOS,WAE3C,MACJ,KAAK7C,EAAQoC,OAAOiB,YAChBpD,EAAKU,MAAQqB,EAAKhC,EAAQoC,OAAOS,UACjC,MACJ,KAAK7C,EAAQoC,OAAOkB,cAChBrD,EAAKnB,KAAOkD,EAAKhC,EAAQoC,OAAOS,UAChC,MACJ,KAAK7C,EAAQoC,OAAOoB,cAChBvD,EAAKqB,QAAUU,EAAKhC,EAAQoC,OAAOS,UACnC,MACJ,KAAK7C,EAAQoC,OAAOqB,eAChBxD,EAAKsB,SAAWS,EAAKhC,EAAQoC,OAAOS,UACpC,MACJ,KAAK7C,EAAQoC,OAAOsB,eAChBzB,EAAUD,EAAKhC,EAAQoC,OAAOS,UAC9BM,EAAWpE,WAAWgM,GAAa9I,EACnC,MACJ,KAAKjC,EAAQoC,OAAOyB,cACJ5D,EAAKlB,WACZ8C,OAAOG,EAAKhC,EAAQoC,OAAO6B,MAAOjC,EAAKhC,EAAQoC,OAAO2B,cACtDoB,UACK3E,SAAQ,SAAU6K,GACxB,OAAOpL,EAAKlB,WAAW8C,OAAOG,EAAKhC,EAAQoC,OAAO+B,IAAK,EAAGkH,EAC1E,IACgBpL,EAAKwI,SACLxI,EAAKwI,QAAQjI,SAAQ,SAAUxB,GAC3B,GAAIgD,EAAKhC,EAAQoC,OAAO6B,MAAQjC,EAAKhC,EAAQoC,OAAO+B,KAChDnF,EAAIkE,UAAYlB,EAAKhC,EAAQoC,OAAO+B,KACpCnF,EAAIkE,SAAWlB,EAAKhC,EAAQoC,OAAO6B,MACnCjF,EAAIkE,UAAYlB,EAAKhC,EAAQoC,OAAO2B,cAChCuH,EAActM,EAAIkE,SAAWlE,EAAI2C,OAASK,EAAKhC,EAAQoC,OAAO+B,KAChD,IAEdgH,EAAW3F,KAAK,CACZtC,SAAUlB,EAAKhC,EAAQoC,OAAO+B,IAC1BnC,EAAKhC,EAAQoC,OAAO2B,aACxBlB,SAAU7D,EAAI6D,SAAW7D,EAAI2C,OAAS2J,EACtC3J,OAAQ2J,IAEZtM,EAAI2C,QAAU2J,QAGjB,GAAItJ,EAAKhC,EAAQoC,OAAO6B,MAAQjC,EAAKhC,EAAQoC,OAAO+B,KACrDnF,EAAIkE,SAAWlB,EAAKhC,EAAQoC,OAAO+B,KACnCnF,EAAIkE,SAAWlB,EAAKhC,EAAQoC,OAAO6B,MAAO,CAE1C,IAAIqH,EADJtM,EAAIkE,UAAYlB,EAAKhC,EAAQoC,OAAO2B,cAChCuH,EAActM,EAAIkE,SAAWlE,EAAI2C,OAASK,EAAKhC,EAAQoC,OAAO+B,KAChD,IAEdgH,EAAW3F,KAAK,CACZtC,SAAUlB,EAAKhC,EAAQoC,OAAO+B,IAC1BnC,EAAKhC,EAAQoC,OAAO2B,aACxBlB,SAAU7D,EAAI6D,SAAW7D,EAAI2C,OAAS2J,EACtC3J,OAAQ2J,IAEZtM,EAAI2C,QAAU2J,EAErB,MACQtM,EAAIkE,WAAalB,EAAKhC,EAAQoC,OAAO6B,QAC1CjF,EAAIkE,SAAWlB,EAAKhC,EAAQoC,OAAO+B,IAE3D,IAEY,MACJ,KAAKnE,EAAQoC,OAAOiC,cAChBlB,EAAWpE,WAAW8C,OAAOkJ,EAAW,GACpC5H,EAAWsF,SACXtF,EAAWsF,QAAQjI,SAAQ,SAAUxB,GAC7BA,EAAIkE,SAAW6H,EACf/L,EAAIkE,UAAY,EAEXlE,EAAIkE,WAAa6H,EACtB/L,EAAY,QAAI,EAEXA,EAAIkE,SAAW6H,GACpB/L,EAAIkE,SAAWlE,EAAI2C,OAASoJ,IACxB/L,EAAIkE,SAAWlE,EAAI2C,OAAS,IAAMoJ,EAClC/L,EAAI2C,UAGJwJ,EAAW3F,KAAK,CACZ3C,SAAU7D,EAAI6D,SAAWkI,EAAY/L,EAAIkE,SACzCA,SAAU6H,EACVpJ,OAAQ3C,EAAI2C,OAASoJ,EAAY/L,EAAIkE,SAAW,IAEpDlE,EAAI2C,OAASoJ,EAAY/L,EAAIkE,UAGzD,IAEYjD,EAAOkD,EACP,MACJ,KAAKnD,EAAQoC,OAAOC,WAEhB,IAAIkJ,GADJ9J,EAAQO,EAAKhC,EAAQoC,OAAOX,OAAOC,SACnBG,OAAOJ,EAAME,OAAS,EAAG,GAAG,GAC5C1B,EAAmD,QAA3CQ,EAAKqK,EAAoB/I,EAAMN,UAA2B,IAAPhB,OAAgB,EAASA,EAAGR,KACvFgC,EAAUD,EAAKhC,EAAQoC,OAAOmC,SACzBtE,EAAKlB,aACNkB,EAAKlB,WAAa,IAElBwM,GAAOtL,EAAKlB,WAAW4C,OACvB1B,EAAKlB,WAAWyG,KAAKvD,GAGrBhC,EAAKlB,WAAW8C,OAAO0J,EAAK,EAAGtJ,GAE/BhC,EAAKwI,SACLxI,EAAKwI,QAAQjI,SAAQ,SAAUxB,GAC3B,GAAIA,EAAIkE,UAAYqI,EAChBvM,EAAIkE,UAAY,OAEf,GAAIlE,EAAIkE,SAAWqI,GACpBvM,EAAIkE,SAAWlE,EAAI2C,OAAS4J,EAAK,CACjC,IAAID,EAActM,EAAIkE,SAAWlE,EAAI2C,OAAS4J,EAC9CJ,EAAW3F,KAAK,CACZ3C,SAAU7D,EAAI6D,SAAW7D,EAAI2C,OAAS2J,EACtCpI,SAAUqI,EAAM,EAChB5J,OAAQ2J,IAEZtM,EAAI2C,QAAU2J,CACjB,CACrB,IAEY,MAEJ,KAAKtL,EAAQoC,OAAOoC,kBAChBrB,EAAWpE,WAAW8C,OAAOkJ,EAAW,GACZ,aAAxB5H,EAAW/E,iBACJ+E,EAAWxC,MAElBwC,EAAWsF,SACXtF,EAAWsF,QAAQjI,SAAQ,SAAUxB,GAC7BA,EAAIkE,SAAW6H,EACf/L,EAAIkE,UAAY,EAEXlE,EAAIkE,WAAa6H,EACtB/L,EAAY,QAAI,EAEXA,EAAIkE,SAAW6H,GACpB/L,EAAIkE,SAAWlE,EAAI2C,OAASoJ,IACxB/L,EAAIkE,SAAWlE,EAAI2C,OAAS,IAAMoJ,EAClC/L,EAAI2C,UAGJwJ,EAAW3F,KAAK,CACZ3C,SAAU7D,EAAI6D,SAAWkI,EAAY/L,EAAIkE,SACzCA,SAAU6H,EACVpJ,OAAQ3C,EAAI2C,OAASoJ,EAAY/L,EAAIkE,SAAW,IAEpDlE,EAAI2C,OAASoJ,EAAY/L,EAAIkE,UAGzD,IAEYjD,EAAOkD,EACP,MACJ,KAAKnD,EAAQoC,OAAOE,eAEhB,IAAIkJ,GADJ/J,EAAQO,EAAKhC,EAAQoC,OAAOX,OAAOC,SACnBG,OAAOJ,EAAME,OAAS,EAAG,GAAG,IAC5CM,EAAU,CAAA,GACF7D,SAAW,QACnB6D,EAAQnD,KAAOkD,EAAKhC,EAAQoC,OAAOzB,QACnCV,EAAO6K,EAAoB/I,EAAMN,GAAOxB,MAC9BlB,aACNkB,EAAKlB,WAAa,IAElByM,GAAOvL,EAAKlB,WAAW4C,OACvB1B,EAAKlB,WAAWyG,KAAKvD,GAGrBhC,EAAKlB,WAAW8C,OAAO2J,EAAK,EAAGvJ,GAEb,aAAlBhC,EAAK7B,WACL6B,EAAKU,MAAQqB,EAAKhC,EAAQoC,OAAOS,WAEjC5C,EAAKwI,SACLxI,EAAKwI,QAAQjI,SAAQ,SAAUxB,GAI3B,GAHIA,EAAIkE,UAAYsI,IAChBxM,EAAIkE,UAAY,GAEhBlE,EAAIkE,SAAWsI,GAAOxM,EAAIkE,SAAWlE,EAAI2C,OAAS6J,EAAK,CACvD,IAAIF,EAActM,EAAIkE,SAAWlE,EAAI2C,OAAS6J,EAC9CL,EAAW3F,KAAK,CACZ3C,SAAU7D,EAAI6D,SAAW7D,EAAI2C,OAAS2J,EACtCpI,SAAUsI,EAAM,EAChB7J,OAAQ2J,IAEZtM,EAAI2C,QAAU2J,CACjB,CACrB,IAEY,MAEJ,QACI5G,QAAQC,IAAI,kBAEhB1E,EAAKwI,UACLxI,EAAKwI,QAAUxI,EAAKwI,QAAQgD,QAAO,SAAUzM,GAAO,OAAQA,EAAY,QAAKA,EAAIkE,WAAalE,EAAI6D,QAAS,IACvGsI,EAAWxJ,SACX1B,EAAKwI,QAAUxI,EAAKwI,QAAQhD,OAAO0F,KAG3CnL,EAAQ0L,qBAAqB,CACzBzL,KAAMsC,EAAKtC,KACX+B,KAAMO,EAAKP,KACXC,QAASA,GAGjB,CAGQ0J,CAAiB5J,EAAMC,EAAMhC,EACrC,KACW,CACX,CAEA,SAAS4L,EAAUC,EAAO7L,QACN,IAAZA,IAAsBA,EAAU,CAAEa,cAAc,IACpD,IAAIf,EAAU,CACV1B,SAAUyN,EAAMzN,UAEpB,GAAIyN,aAAiB7I,MAAQ6I,aAAiBtI,QAC1CzD,EAAQhB,KAAO+M,EAAM/M,SAEpB,CACD,GAAI+M,EAAMvL,YAAcuL,EAAMvL,WAAWqB,OAAS,EAC9C7B,EAAQQ,WAAa,GACLrC,MAAMT,UAAUkE,MAAMhE,KAAKmO,EAAMvL,YACvCE,SAAQ,SAAUgH,GACxB,OAAQ1H,EAAQQ,WAAWkH,EAAU7E,MAAQ6E,EAAU7G,KACvE,IAEQ,GAAIkL,EAAM9M,YAAc8M,EAAM9M,WAAW4C,OAAS,EAC9C7B,EAAQf,WAAa,GACLd,MAAMT,UAAUkE,MAAMhE,KAAKmO,EAAM9M,YACvCyB,SAAQ,SAAUvB,GACxB,OAAOa,EAAQf,WAAWyG,KAAKoG,EAAU3M,EAAWe,GACpE,IAEYA,EAAQa,eACJgL,aAAiBzI,sBACjBtD,EAAQa,MAAQkL,EAAMlL,OAEtBkL,aAAiB7K,kBACjB,CAAC,QAAS,YAAYnC,SAASgN,EAAMC,KAAKzL,qBACxB2K,IAAlBa,EAAMvK,QACNxB,EAAQwB,QAAUuK,EAAMvK,SAEnBuK,aAAiB/K,mBACtB+K,aAAiB9K,iBACjB8K,aAAiB7K,kBACjB6K,aAAiB5K,eACjB4K,aAAiB3K,kBACjB2K,aAAiB1K,mBACjB0K,aAAiBzK,qBACjByK,aAAiBxK,oBACjBvB,EAAQa,MAAQkL,EAAMlL,OAEtBkL,aAAiB1K,oBACjBrB,EAAQyB,SAAWsK,EAAMtK,UAGpC,CACD,OAAOzB,CACX,CAGA,IAAIiM,EAAQ,2GACRC,EAAS,qDACb,SAASC,EAASC,GACd,OAAOA,EACF7M,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,SAAU,IAC3B,CAIA,IAAI8M,EAAS,CACTC,MAAM,EACNC,MAAM,EACNC,IAAI,EACJC,KAAK,EACLC,OAAO,EACPC,IAAI,EACJC,KAAK,EACLC,OAAO,EACPC,QAAQ,EACRC,MAAM,EACNC,UAAU,EACVC,MAAM,EACNC,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPC,KAAK,GAELC,EAAW,SAAUC,GACrB,IAAIC,EAAM,CACNlP,SAAU,GACVkC,WAAY,CAAE,GAEdiN,GAAc,EAEdC,EAAWH,EAAII,MAAM,uBACzB,GAAID,IACAF,EAAIlP,SAAWoP,EAAS,IACpBrB,EAAOqB,EAAS,KAAsC,MAA/BH,EAAIK,OAAOL,EAAI1L,OAAS,MAC/C4L,GAAc,GAGdD,EAAIlP,SAASuP,WAAW,QAAQ,CAChC,IAAIC,EAAWP,EAAIQ,QAAQ,UAC3B,MAAO,CACH/B,KAAM,UACN7L,KAAM,CACF7B,SAAU,WACVU,MAAoB,IAAd8O,EAAkBP,EAAI3L,MAAM,EAAGkM,GAAY,IAErDL,YAAaA,EAEpB,CAKL,IAHA,IAAIO,EAAM,IAAIC,OAAO/B,GACjBgC,EAAS,KACTC,GAAO,GACHA,GAEJ,GAAe,QADfD,EAASF,EAAII,KAAKb,IAEdY,GAAO,OAEN,GAAID,EAAO,GAAGG,OACf,GAAIH,EAAO,GAAI,CACX,IAAIxP,EAAOwP,EAAO,GAAGG,OACjBC,EAAM,CAAC5P,EAAM,IACbA,EAAKqP,QAAQ,MAAQ,IACnBO,EAAM5P,EAAK6P,MAAM,MACvBf,EAAIhN,WAAW8N,EAAI,IAAMA,EAAI,GAC7BN,EAAIQ,WACP,MACQN,EAAO,KACVV,EAAIhN,WAAW0N,EAAO,IAAMA,EAAO,GAChCG,OACAI,UAAU,EAAGP,EAAO,GAAGrM,OAAS,IAGjD,MAAO,CACHmK,KA5CO,MA6CP7L,KAAMqN,EACNC,YAAaA,EAErB,EACIiB,EAAc,SAAUC,EAAMzO,QACd,IAAZA,IAAsBA,EAAU,CAAEa,cAAc,IACpD,IACI6N,EADAV,EAAS,GAETW,GAAS,EACTP,EAAM,GAGV,GAA0B,IAAtBK,EAAKZ,QAAQ,KAAY,CACzB,IAAIe,EAAMH,EAAKZ,QAAQ,KACvBG,EAAOxI,KAAK,CACRpH,SAAU,QACVU,MAAe,IAAT8P,EAAaH,EAAOA,EAAKF,UAAU,EAAGK,IAEnD,CAmFD,OAlFAH,EAAKpP,QAAQ0M,GAAO,SAAUsB,EAAKnJ,GAC/B,IAAI2K,EAA2B,MAAlBxB,EAAIK,OAAO,GACpBoB,EAAYzB,EAAIM,WAAW,WAC3BoB,EAAQ7K,EAAQmJ,EAAI1L,OACpBqN,EAAWP,EAAKf,OAAOqB,GAC3B,GAAID,EAAW,CACX,IAAIG,EAAU7B,EAASC,GAAKpN,KAE5B,GAAI0O,EAAQ,EAER,OADAX,EAAOxI,KAAKyJ,GACL,GAEX,IAAIC,EAAWd,EAAIO,GAOnB,OANIO,GAAYD,EAAQ7Q,WACf8Q,EAASjP,KAAKlB,aACfmQ,EAASjP,KAAKlB,WAAa,IAE/BmQ,EAASjP,KAAKlB,WAAWyG,KAAKyJ,IAE3B,EACV,CACD,GAAIJ,EAAQ,CAGR,GAFAH,EAAUtB,EAASC,GACnBsB,KACKD,EAAQnB,aAETyB,GACa,MAAbA,EAAkB,CACbN,EAAQzO,KAAKlB,aACd2P,EAAQzO,KAAKlB,WAAa,IAE9B,IAAID,EAAOmN,EAASwC,EAAK/M,MAAMqN,EAAON,EAAKZ,QAAQ,IAAKkB,KACxDL,EAAQzO,KAAKlB,WAAWyG,KAAK,CACzBpH,SAAU,QACVU,KAAMA,IAENkB,EAAQa,cACkB,aAA1B6N,EAAQzO,KAAK7B,WACbsQ,EAAQzO,KAAKU,MAAQ7B,EAE5B,CAEa,IAAV6P,GAAeD,EAAQzO,KAAK7B,UAC5B4P,EAAOxI,KAAKkJ,EAAQzO,MAExB,IAAIkP,EAAWf,EAAIO,EAAQ,GACvBQ,GAAYT,EAAQzO,KAAK7B,WACpB+Q,EAASlP,KAAKlB,aACfoQ,EAASlP,KAAKlB,WAAa,IAE/BoQ,EAASlP,KAAKlB,WAAWyG,KAAKkJ,EAAQzO,OAE1CmO,EAAIO,GAASD,CAChB,CACD,KAAKG,GAAUH,EAAQnB,eACfoB,GAAS,IACRD,EAAQnB,aACLmB,EAAQzO,KAAK7B,SAASgR,gBAClB/B,EAAI3L,MAAM,GAAI,GAAG0N,kBACzBT,GAEa,IACTD,EAAUN,EAAIO,IAGL,MAAbK,GAAoBA,GAAU,CAI9B,IAAIjQ,GAAwB,IAAX4P,EAAeX,EAASI,EAAIO,GAAO1O,KAAKlB,YAAc,GAGnE6P,EAAMH,EAAKZ,QAAQ,IAAKkB,GACxBjQ,EAAOmN,EAASwC,EAAK/M,MAAMqN,GAAgB,IAATH,OAAa5D,EAAY4D,IAC/D7P,EAAWyG,KAAK,CACZpH,SAAU,QACVU,KAAMA,GAEb,CAEL,MAAO,EACf,IACWkP,EAAO,EAClB,EAGIqB,EAA4B,WAC5B,SAASA,EAAWC,EAAQC,EAAQvP,GAChCoK,KAAKpK,QAAUA,EACfoK,KAAKoF,GAAyB,oBAAZ9M,SAA2B4M,aAAkB5M,QACzDkJ,EAAU0D,EAAQlF,KAAKpK,SACL,iBAAXsP,EACHd,EAAYc,EAAQlF,KAAKpK,SACzBlC,KAAKC,MAAMD,KAAK4M,UAAU4E,IACpClF,KAAKqF,GAAyB,oBAAZ/M,SAA2B6M,aAAkB7M,QACzDkJ,EAAU2D,EAAQnF,KAAKpK,SACL,iBAAXuP,EACHf,EAAYe,EAAQnF,KAAKpK,SACzBlC,KAAKC,MAAMD,KAAK4M,UAAU6E,IACpCnF,KAAKsF,UAAY,EACjBtF,KAAKuF,UAAW,EACZvF,KAAKwF,QACLxF,KAAKyF,OACkB,oBAAZnN,SAA2B4M,aAAkB5M,QAC9CkJ,EAAU0D,EAAQlF,KAAKpK,SACL,iBAAXsP,EACHd,EAAYc,EAAQlF,KAAKpK,SACzBlC,KAAKC,MAAMD,KAAK4M,UAAU4E,IACxClF,KAAK0F,OACkB,oBAAZpN,SAA2B6M,aAAkB7M,QAC9CkJ,EAAU2D,EAAQnF,KAAKpK,SACL,iBAAXuP,EACHf,EAAYe,EAAQnF,KAAKpK,SACzBlC,KAAKC,MAAMD,KAAK4M,UAAU6E,KAE5CnF,KAAK2F,QAAU,IAAI5F,CACtB,CAkcD,OAjcAkF,EAAW7R,UAAUwS,KAAO,WACxB,OAAO5F,KAAK6F,UAAU7F,KAAKoF,GAAIpF,KAAKqF,GAC5C,EACIJ,EAAW7R,UAAUyS,UAAY,SAAUT,EAAIC,GAC3C,IAAIvK,EACJ,EAAG,CACC,GAAIkF,KAAKpK,QAAQ4P,QACbxF,KAAKsF,WAAa,EACdtF,KAAKsF,UAAYtF,KAAKpK,QAAQkQ,SAC9B,MAAM,IAAIC,MAAM,qBAAqB1K,OAAO3H,KAAK4M,UAAUN,KAAKyF,QAAS,QAAQpK,OAAO3H,KAAK4M,UAAUN,KAAK0F,UAI/F,KADrB5K,EAAQkF,KAAKgG,aAAaZ,EAAIC,EAAI,KACxB9N,SAIDuF,EAAQsI,EAAIC,KACTrF,KAAKuF,SACLjL,QAAQ2L,MAAM,oCAGdjG,KAAKuF,UAAW,EAChBnJ,EAAWgJ,GACXtK,EAAQkF,KAAKgG,aAAaZ,EAAIC,EAAI,OAI1CvK,EAAMvD,OAAS,IACfyI,KAAKuF,UAAW,EAChBvF,KAAK2F,QAAQzF,IAAIpF,GACjB+F,EAAauE,EAAItK,EAAOkF,KAAKpK,SAE7C,OAAiBkF,EAAMvD,OAAS,GACxB,OAAOyI,KAAK2F,QAAQ1F,IAC5B,EACIgF,EAAW7R,UAAU4S,aAAe,SAAUZ,EAAIC,EAAIhO,GAClD,IAAIyD,EACAoL,EACJ,GAAIlG,KAAKpK,QAAQuQ,UAAY9O,EAAME,OAASyI,KAAKpK,QAAQuQ,SACrD,MAAO,GAGX,IAAKf,EAAG/I,UAAW,CAOf,GANAvB,EAAQkF,KAAKoG,cAAchB,EAAIC,EAAIhO,GAC/B2I,KAAKpK,QAAQyQ,kBACbH,EAASlG,KAAKpK,QAAQyQ,gBAAgBjB,EAAIC,EAAIvK,MAExCA,EAAQoL,GAEdpL,EAAMvD,OAAS,EAEf,OADA6N,EAAG/I,WAAY,EACRvB,EAGPsK,EAAG/I,WAAY,CAEtB,CACD,GAAIlJ,OAAOC,UAAUuJ,eAAerJ,KAAK8R,EAAI,QAEzC,MAAO,GAKX,IAAKA,EAAG9I,UAAW,CAEf,IADAxB,EAAQkF,KAAKsG,cAAclB,EAAIC,EAAIhO,IACzBE,OAAS,EACf,OAAOuD,EAGPsK,EAAG9I,WAAY,CAEtB,CACD,GAAI0D,KAAKpK,QAAQa,eAAiB2O,EAAG7I,UAAW,CAG5C,IADAzB,EAAQkF,KAAKuG,cAAcnB,EAAIC,EAAIhO,IACzBE,OAAS,EAEf,OADA6N,EAAG7I,WAAY,EACRzB,EAGPsK,EAAG7I,WAAY,CAEtB,CAED,MAAO,EACf,EACI0I,EAAW7R,UAAUgT,cAAgB,SAAUhB,EAAIC,EAAIhO,GACnD,IACIjD,EACAoS,EACAC,EACAC,EACAC,EACAxH,EANArE,EAAQ,GAOZ,GAAIsK,EAAGpR,WAAaqR,EAAGrR,SAAU,CAC7B,IAAKqD,EAAME,OACP,MAAM,IAAIwO,MAAM,gDAEpB,MAAO,EACH,IAAI3F,GACCG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOsB,gBACzDiH,SAASP,KAAKpK,QAAQoC,OAAOc,SAAU2D,EAAU2I,IACjD7E,SAASP,KAAKpK,QAAQoC,OAAOS,SAAUgE,EAAU4I,IACjD9E,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,GAChD,CACD,GAAIA,EAAME,QACNyI,KAAKpK,QAAQkQ,QACTc,KAAKC,KAAKzB,EAAGzQ,YAAc,IAAI4C,QAAU8N,EAAG1Q,YAAc,IAAI4C,QAClE,MAAO,EACH,IAAI6I,GACCG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOsB,gBACzDiH,SAASP,KAAKpK,QAAQoC,OAAOc,SAAU2D,EAAU2I,IACjD7E,SAASP,KAAKpK,QAAQoC,OAAOS,SAAUgE,EAAU4I,IACjD9E,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,IAEjD,GAAIlE,OAAOC,UAAUuJ,eAAerJ,KAAK8R,EAAI,SACzCA,EAAG1Q,OAAS2Q,EAAG3Q,KAEf,MAAoB,UAAhB0Q,EAAGpR,SACI,EACH,IAAIoM,GACCG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOW,mBACzD4H,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,GACpCkJ,SAASP,KAAKpK,QAAQoC,OAAOc,SAAUsM,EAAG1Q,MAC1C6L,SAASP,KAAKpK,QAAQoC,OAAOS,SAAU4M,EAAG3Q,OAG5C,EACH,IAAI0L,GACCG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOkB,eACzDqH,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,GACpCkJ,SAASP,KAAKpK,QAAQoC,OAAOc,SAAUsM,EAAG1Q,MAC1C6L,SAASP,KAAKpK,QAAQoC,OAAOS,SAAU4M,EAAG3Q,OAQ3D,IAHA8R,EAAQpB,EAAGlP,WAAa/C,OAAOgJ,KAAKiJ,EAAGlP,YAAY4Q,OAAS,GAC5DL,EAAQpB,EAAGnP,WAAa/C,OAAOgJ,KAAKkJ,EAAGnP,YAAY4Q,OAAS,GAC5DJ,EAAaF,EAAMjP,OACd4H,EAAI,EAAGA,EAAIuH,EAAYvH,IACxB/K,EAAOoS,EAAMrH,IAEA,KADbwH,EAAMF,EAAMhD,QAAQrP,IAEhB0G,EAAMM,MAAK,IAAIgF,GACVG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOU,iBACzD6H,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,GACpCkJ,SAASP,KAAKpK,QAAQoC,OAAOO,KAAMnE,GACnCmM,SAASP,KAAKpK,QAAQoC,OAAOzB,MAAO6O,EAAGlP,WAAW9B,MAGvDqS,EAAMhP,OAAOkP,EAAK,GACdvB,EAAGlP,WAAW9B,KAAUiR,EAAGnP,WAAW9B,IACtC0G,EAAMM,MAAK,IAAIgF,GACVG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOQ,iBACzD+H,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,GACpCkJ,SAASP,KAAKpK,QAAQoC,OAAOO,KAAMnE,GACnCmM,SAASP,KAAKpK,QAAQoC,OAAOc,SAAUsM,EAAGlP,WAAW9B,IACrDmM,SAASP,KAAKpK,QAAQoC,OAAOS,SAAU4M,EAAGnP,WAAW9B,MAKtE,IADAsS,EAAaD,EAAMlP,OACd4H,EAAI,EAAGA,EAAIuH,EAAYvH,IACxB/K,EAAOqS,EAAMtH,GACbrE,EAAMM,MAAK,IAAIgF,GACVG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOK,cACzDkI,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,GACpCkJ,SAASP,KAAKpK,QAAQoC,OAAOO,KAAMnE,GACnCmM,SAASP,KAAKpK,QAAQoC,OAAOzB,MAAO8O,EAAGnP,WAAW9B,KAE3D,OAAO0G,CACf,EACImK,EAAW7R,UAAUkT,cAAgB,SAAUlB,EAAIC,EAAIhO,GACnD,IAAI0P,EAAe3B,EAAGzQ,WAAayQ,EAAGzQ,WAAW2C,QAAU,GACvD0P,EAAe3B,EAAG1Q,WAAa0Q,EAAG1Q,WAAW2C,QAAU,GACvD2P,EAAOL,KAAKM,IAAIH,EAAaxP,OAAQyP,EAAazP,QAClD4P,EAA6BP,KAAKC,IAAIE,EAAaxP,OAASyP,EAAazP,QACzEuD,EAAQ,GACRhB,EAAQ,EACZ,IAAKkG,KAAKpK,QAAQwR,eAAiBH,EAAOjH,KAAKpK,QAAQwR,cAAe,CAClE,IAAIC,EAAiBpK,QAAQmI,EAAG/G,SAAW+G,EAAGtF,cAC1CwH,EAAWD,EACTjC,EAAG/G,QACH+G,EAAGzQ,YAAc0Q,EAAG1Q,WAChBmJ,EAAasH,EAAIC,GACjB,GACV,GAAIiC,EAAS/P,OAAS,IAIlBuD,EAAQkF,KAAKuH,uBAAuBnC,EAAIC,EAAIiC,EAAUjQ,EAAOgQ,IACnD9P,OAAS,EACf,OAAOuD,CAGlB,CAOD,IAAK,IAAIqE,EAAI,EAAGA,EAAI8H,EAAM9H,GAAK,EAAG,CAC9B,IAAIpC,EAAKgK,EAAa5H,GAClBnC,EAAKgK,EAAa7H,GA0CtB,GAzCIgI,IAGIpK,IAAOC,EACa,UAAhBD,EAAG/I,UACH8G,EAAMM,MAAK,IAAIgF,GACVG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOoC,mBACzDmG,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,EAAMgE,OAAOvB,IACjDyG,SAASP,KAAKpK,QAAQoC,OAAOzB,MAAOwG,EAAGrI,OAC5CoF,GAAS,IAGTgB,EAAMM,MAAK,IAAIgF,GACVG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOiC,eACzDsG,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,EAAMgE,OAAOvB,IACjDyG,SAASP,KAAKpK,QAAQoC,OAAOmC,QAASsC,EAAUM,KACrDjD,GAAS,GAGRkD,IAAOD,IACQ,UAAhBC,EAAGhJ,SACH8G,EAAMM,MAAK,IAAIgF,GACVG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOE,gBACzDqI,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,EAAMgE,OAAOvB,IACjDyG,SAASP,KAAKpK,QAAQoC,OAAOzB,MAAOyG,EAAGtI,OAG5CoG,EAAMM,MAAK,IAAIgF,GACVG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOC,YACzDsI,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,EAAMgE,OAAOvB,IACjDyG,SAASP,KAAKpK,QAAQoC,OAAOmC,QAASsC,EAAUO,OAW7DD,GAAMC,EACN,IAAKgD,KAAKpK,QAAQwR,eACdH,EAAOjH,KAAKpK,QAAQwR,cACpBtM,EAAQA,EAAMO,OAAO2E,KAAKgG,aAAajJ,EAAIC,EAAI3F,EAAMgE,OAAOvB,UAE3D,IAAKgD,EAAQC,EAAIC,GAClB,GAAI+J,EAAaxP,OAASyP,EAAazP,OACf,UAAhBwF,EAAG/I,SACH8G,EAAMM,MAAK,IAAIgF,GACVG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOoC,mBACzDmG,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,EAAMgE,OAAOvB,IACjDyG,SAASP,KAAKpK,QAAQoC,OAAOzB,MAAOwG,EAAGrI,OAG5CoG,EAAMM,MAAK,IAAIgF,GACVG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOiC,eACzDsG,SAASP,KAAKpK,QAAQoC,OAAOmC,QAASsC,EAAUM,IAChDwD,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,EAAMgE,OAAOvB,KAE1DiN,EAAatP,OAAO0H,EAAG,GACvBA,GAAK,EACLrF,GAAS,EACTqN,GAA8B,OAE7B,GAAIJ,EAAaxP,OAASyP,EAAazP,OAAQ,CAChD,IAAIiQ,EAAa/K,EAAUO,GAC3BlC,EAAQA,EAAMO,OAAO,EACjB,IAAI+E,GACCG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOC,YACzDsI,SAASP,KAAKpK,QAAQoC,OAAOmC,QAASqN,GACtCjH,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,EAAMgE,OAAOvB,MAC1DiN,EAAatP,OAAO0H,EAAG,EAAGqI,GAC1BL,GAA8B,CACjC,MAEGrM,EAAQA,EAAMO,OAAO,EACjB,IAAI+E,GACCG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOsB,gBACzDiH,SAASP,KAAKpK,QAAQoC,OAAOc,SAAU2D,EAAUM,IACjDwD,SAASP,KAAKpK,QAAQoC,OAAOS,SAAUgE,EAAUO,IACjDuD,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,EAAMgE,OAAOvB,MAItEA,GAAS,CACZ,CAED,OADAsL,EAAG9I,WAAY,EACRxB,CACf,EACImK,EAAW7R,UAAUmU,uBAAyB,SAAUnC,EAAIC,EAAIiC,EAAUjQ,EAAOgQ,GAmB7E,IAXA,IAIII,EACAC,EACAC,EACA9R,EACA+R,EACAC,EATAC,EAz8BY,SAAU1C,EAAIC,EAAI0C,GACtC,IAAIC,EAAQ5C,EAAGzQ,WACTgJ,EAAiByH,EAAGzQ,WAAW4C,QAAQ,GACvC,GACF0Q,EAAQ5C,EAAG1Q,WACTgJ,EAAiB0H,EAAG1Q,WAAW4C,QAAQ,GACvC,GACFoQ,EAAQ,EAaZ,OAXAI,EAAO3R,SAAQ,SAAUsI,GAGrB,IAFA,IAAIwJ,EAASxJ,EAAO5F,SAAW4F,EAAOnH,OAClC4Q,EAASzJ,EAAOjG,SAAWiG,EAAOnH,OAC7B6Q,EAAI1J,EAAO5F,SAAUsP,EAAIF,EAAQE,GAAK,EAC3CJ,EAAMI,GAAKT,EAEf,IAASS,EAAI1J,EAAOjG,SAAU2P,EAAID,EAAQC,GAAK,EAC3CH,EAAMG,GAAKT,EAEfA,GAAS,CACjB,IACW,CACHK,MAAOA,EACPC,MAAOA,EAEf,CAi7B6BI,CAAkBjD,EAAIC,EAAIiC,GAC3CU,EAAQF,EAAeE,MACvBC,EAAQH,EAAeG,MACvBK,EAAW1B,KAAK2B,IAAIP,EAAMzQ,OAAQ0Q,EAAM1Q,QAOxCuD,EAAQ,GACH0N,EAAS,EAAGC,EAAS,EAAGD,EAASF,EAAUG,GAAU,EAAGD,GAAU,EACvE,IAAInB,IACmB,IAAlBW,EAAMQ,KAAsC,IAAlBP,EAAMO,IAChC,IAAsB,IAAlBR,EAAMQ,GAEX,GAAsB,WADtB3S,EAAOuP,EAAGzQ,WAAW8T,IACZzU,SACL,GAAuC,UAAnCqR,EAAG1Q,WAAW6T,GAAQxU,UACtB,GAAI6B,EAAKnB,OACL2Q,EAAG1Q,WAAW6T,GAAQ9T,KAAM,CAE5B,IADAmT,EAAQY,EACDrD,EAAGzQ,WAAW4C,OAASsQ,EAAQ,GACI,UAAtCzC,EAAGzQ,WAAWkT,EAAQ,GAAG7T,UAEzB,GADA6T,GAAS,EACLxC,EAAG1Q,WAAW6T,GACb9T,OACD0Q,EAAGzQ,WAAWkT,GACTnT,KAAM,CACXkT,GAAc,EACd,KACH,CAEL,IAAKA,EAOD,OANA9M,EAAMM,MAAK,IAAIgF,GACVG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAClDW,mBACA4H,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,EAAMgE,OAAOmN,IACjDjI,SAASP,KAAKpK,QAAQoC,OAAOc,SAAUjD,EAAKnB,MAC5C6L,SAASP,KAAKpK,QAAQoC,OAAOS,SAAU4M,EAAG1Q,WAAW6T,GAAQ9T,OAC3DoG,CAEd,OAGDA,EAAMM,MAAK,IAAIgF,GACVG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOoC,mBACzDmG,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,EAAMgE,OAAOmN,IACjDjI,SAASP,KAAKpK,QAAQoC,OAAOzB,MAAOV,EAAKnB,OAC9CsT,EAAMvQ,OAAO+Q,EAAQ,GACrBF,EAAW1B,KAAK2B,IAAIP,EAAMzQ,OAAQ0Q,EAAM1Q,QACxCiR,GAAU,OAId1N,EAAMM,MAAK,IAAIgF,GACVG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOiC,eACzDsG,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,EAAMgE,OAAOmN,IACjDjI,SAASP,KAAKpK,QAAQoC,OAAOmC,QAASsC,EAAU5G,KACrDmS,EAAMvQ,OAAO+Q,EAAQ,GACrBF,EAAW1B,KAAK2B,IAAIP,EAAMzQ,OAAQ0Q,EAAM1Q,QACxCiR,GAAU,OAGb,IAAsB,IAAlBP,EAAMO,GAEW,WADtB3S,EAAOwP,EAAG1Q,WAAW6T,IACZxU,UACL8G,EAAMM,MAAK,IAAIgF,GACVG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOE,gBACzDqI,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,EAAMgE,OAAOmN,IACjDjI,SAASP,KAAKpK,QAAQoC,OAAOzB,MAAOV,EAAKnB,OAC9CsT,EAAMvQ,OAAO+Q,EAAQ,GAAG,GACxBF,EAAW1B,KAAK2B,IAAIP,EAAMzQ,OAAQ0Q,EAAM1Q,QACxCkR,GAAU,IAGV3N,EAAMM,MAAK,IAAIgF,GACVG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOC,YACzDsI,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,EAAMgE,OAAOmN,IACjDjI,SAASP,KAAKpK,QAAQoC,OAAOmC,QAASsC,EAAU5G,KACrDmS,EAAMvQ,OAAO+Q,EAAQ,GAAG,GACxBF,EAAW1B,KAAK2B,IAAIP,EAAMzQ,OAAQ0Q,EAAM1Q,QACxCkR,GAAU,QAGb,GAAIT,EAAMQ,KAAYP,EAAMO,GAAS,CACtC,GAAI1N,EAAMvD,OAAS,EACf,OAAOuD,EAKX,GAFA6M,EAAQL,EAASU,EAAMQ,KACvBd,EAAUd,KAAK2B,IAAIZ,EAAMlP,SAAU2M,EAAGzQ,WAAW4C,OAASoQ,EAAMpQ,WAChDoQ,EAAM7O,SAAU,CAE5B2O,GAAuB,EACvB,IAAK,IAAIW,EAAI,EAAGA,EAAIT,EAAMpQ,OAAQ6Q,GAAK,EAC9B/K,EAAa+H,EAAGzQ,WAAW+S,EAAUU,GAAIhD,EAAGzQ,WAAWgT,EAAM7O,SAAWsP,GAAI,CAAA,GAAI,GAAO,KACxFX,GAAuB,GAG/B,GAAIA,EACA,MAAO,EACH,IAAIrH,GACCG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOyB,eACzD8G,SAASP,KAAKpK,QAAQoC,OAAO2B,YAAagO,EAAMpQ,QAChDgJ,SAASP,KAAKpK,QAAQoC,OAAO6B,KAAM8N,EAAM7O,UACzCyH,SAASP,KAAKpK,QAAQoC,OAAO+B,GAAI2N,GACjCnH,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,GAEpD,CACJ,OAEL,OAAOyD,CACf,EACImK,EAAW7R,UAAUmT,cAAgB,SAAUnB,EAAIC,EAAIhO,GAInD,IAAIyD,EAAQ,GAwBZ,OAvBIsK,EAAGjO,WAAakO,EAAGlO,UACnB2D,EAAMM,MAAK,IAAIgF,GACVG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOqB,gBACzDkH,SAASP,KAAKpK,QAAQoC,OAAOc,SAAUsM,EAAGjO,UAC1CoJ,SAASP,KAAKpK,QAAQoC,OAAOS,SAAU4M,EAAGlO,UAC1CoJ,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,KAExC+N,EAAG7O,OAAS8O,EAAG9O,QAChB6O,EAAG7O,QAAU8O,EAAG9O,OACA,WAAhB6O,EAAGpR,UACH8G,EAAMM,MAAK,IAAIgF,GACVG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOiB,aACzDsH,SAASP,KAAKpK,QAAQoC,OAAOc,SAAUsM,EAAG7O,OAAS,IACnDgK,SAASP,KAAKpK,QAAQoC,OAAOS,SAAU4M,EAAG9O,OAAS,IACnDgK,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,IAEzC+N,EAAGlO,UAAYmO,EAAGnO,SAClB4D,EAAMM,MAAK,IAAIgF,GACVG,SAASP,KAAKpK,QAAQoC,OAAOD,OAAQiI,KAAKpK,QAAQoC,OAAOoB,eACzDmH,SAASP,KAAKpK,QAAQoC,OAAOc,SAAUsM,EAAGlO,SAC1CqJ,SAASP,KAAKpK,QAAQoC,OAAOS,SAAU4M,EAAGnO,SAC1CqJ,SAASP,KAAKpK,QAAQoC,OAAOX,MAAOA,IAEtCyD,CACf,EACWmK,CACX,IAEIyD,EAAkB,CAClBlD,OAAO,EACPM,QAAS,GACTK,UAAU,EACViB,cAAe,GACf3Q,cAAc,EAEdoC,SAAU,SAAUhD,EAAM8S,EAAcC,EAAenQ,GACnD5C,EAAKnB,KAAO+D,CAEf,EAGDuI,oBAAqB,WAAe,EACpCM,qBAAsB,WAAe,EACrClJ,aAAc,WAAe,EAC7BoC,cAAe,WAAe,EAC9B6L,gBAAiB,KACjBwC,UAAU,EACV7Q,QAAQ,EACR7D,WAA4B,oBAAX2U,SAA0BA,OAAO3U,WAC5C2U,OAAO3U,SAEb4U,WAAY,IAEZC,EAAyB,WACzB,SAASA,EAAQpT,GAUb,QATgB,IAAZA,IAAsBA,EAAU,CAAE,GAGtCzC,OAAOgD,QAAQuS,GAAiBtS,SAAQ,SAAUC,GAC9C,IAAIC,EAAMD,EAAG,GAAIE,EAAQF,EAAG,GACvBlD,OAAOC,UAAUuJ,eAAerJ,KAAKsC,EAASU,KAC/CV,EAAQU,GAAOC,EAE/B,KACaX,EAAQoC,OAAQ,CACjB,IAAIiR,EAAW,CACX,eACA,kBACA,kBACA,oBACA,gBACA,gBACA,aACA,oBACA,iBACA,iBACA,cACA,gBACA,iBACA,gBACA,SACA,QACA,WACA,WACA,UACA,QACA,cACA,OACA,KACA,OACA,QACA,OACA,aACA,WACA,aACA,UACA,YACAC,EAAe,CAAA,EACftT,EAAQiT,SACRI,EAAS7S,SAAQ,SAAU+S,EAASrP,GAAS,OAAQoP,EAAaC,GAAWrP,CAAO,IAGpFmP,EAAS7S,SAAQ,SAAU+S,GAAW,OAAQD,EAAaC,GAAWA,CAAS,IAEnFvT,EAAQoC,OAASkR,CACpB,CACDlJ,KAAKpK,QAAUA,CAClB,CAWD,OAVAoT,EAAQ5V,UAAUsG,MAAQ,SAAU/B,EAAMmD,GACtC,OA/hDR,SAAkBnD,EAAMmD,EAAOlF,GAC3B,OAAOkF,EAAM0B,OAAM,SAAU5E,GACzB,OAAOF,EAAUC,EAAMC,EAAMhC,EACrC,GACA,CA2hDewT,CAASzR,EAAMmD,EAAOkF,KAAKpK,QAC1C,EACIoT,EAAQ5V,UAAUiW,KAAO,SAAU1R,EAAMmD,GACrC,OAAOD,EAAQlD,EAAMmD,EAAOkF,KAAKpK,QACzC,EACIoT,EAAQ5V,UAAUwE,KAAO,SAAUsN,EAAQC,GAEvC,OADa,IAAIF,EAAWC,EAAQC,EAAQnF,KAAKpK,SACnCgQ,MACtB,EACWoD,CACX,ICnvDO,MAAMM,EAAgC,CACzCC,EACAC,EACAC,GAEIC,UACAC,SACAC,eACAC,WACAC,UACApI,SAGAqI,iBACAC,mBAEF,CACFhW,SAAU,KAEVW,WAAY4U,EAAS3U,KACjB,CAACqV,EAAyBnQ,KACtB,MAAMoQ,EAASV,EAAe1P,IAAW,CACrC4H,OACAiI,SACAE,UAAU,EACVM,YAAY,GAEhB,GAAID,EAAO3U,OACP,OAEJ,MAAMW,EAAwC,CAAA,EAW9C,GAVIgU,EAAOL,UAAYA,KAAcC,EAAQvS,QAAUyS,KAC/CE,EAAO7I,OACPnL,EAAW,mBAAqB,OAEhCA,EAAW,iBAAmB,QAGlCgU,EAAOE,cACPlU,EAAWmU,MAAQH,EAAOE,aAE1BX,EAAa3C,MAAQ2C,EAAa3C,KAAKoD,SAAWpQ,EAAO,CACzD,MAAMwQ,EAA2C,QAA1Bb,EAAa3C,KAAKyD,IAAgBb,EAAQc,UAAYd,EAAQe,WACrFvU,EAAWmU,MAAQnU,EAAWmU,MAAQ,GAAGnU,EAAWmU,SAASC,IAAmBA,EAChFpU,EAAW,aAAyC,QAA1BuT,EAAa3C,KAAKyD,IAAgB,YAAc,YAC7E,MAAUd,EAAaiB,QAAQ5Q,KAC5B5D,EAAWmU,MAAQnU,EAAWmU,MAAQ,GAAGnU,EAAWmU,SAASX,EAAQiB,eAAiBjB,EAAQiB,cAElG,IAAIC,EAAQ,GACRnB,EAAaoB,OAAO/Q,KAAWiQ,IAC/Ba,GAAS,UAAUnB,EAAaoB,OAAO/Q,QAEvCgQ,EAAQvS,SAAWyS,IACnBY,GAAS,+CAGTA,EAAMrT,SACNrB,EAAW0U,MAAQA,GAGvB,MAAME,EAAmD,SAAjBb,EAAQvI,KAC5CuI,EAAQvV,KACR,CACI,CACIV,SAAU,QACVU,KAAMuV,EAAQjV,MAAQ+V,OAAOd,EAAQvV,QAGjD,MAAO,CACHV,SAAU,KACVkC,aACAvB,YACMiV,IAAgBE,EAAQvS,QAAYyS,EAKjCE,EAAOL,UAAaA,EAEjB,CACI,CACI7V,SAAU,SACVkC,WAAY,CACRmU,MAAOH,EAAO7I,OAASqI,EAAQrI,OAASqI,EAAQsB,QAEpDrW,WAAYmW,IAPpBA,EALJ,CACI,CAAC9W,SAAU,QACPU,KAAM,KAazB,IAEP2M,QAAQ6I,GAAqCA,MAGtCe,EAAmB,CAACC,EAA2C3B,EAA4B4B,EAA0C3B,EAAsCC,EAAgC2B,GACpN1B,UACAE,eACAyB,SACAC,SACA3B,SACAE,WACAC,UACApI,OACA6J,YACAC,aAEAzB,iBACAC,eACAyB,mBAEA,MAAMC,EAAyB,CAC3B1X,SAAU,QACVkC,WAAY,IAAIgV,GAChBvW,WAAY,CACR,CACIX,SAAU,QACVW,WAAYwW,EAAKvW,KACb,EACI+W,MACA7R,YAEA,MAAM8R,EAAsB,CACxB5X,SAAU,KACVkC,WAAY,CACR,aAAc6U,OAAOjR,IAEzBnF,WAAYgX,EAAI/W,KACZ,CAACiX,EAAgBC,KACb,MAAM5B,EAASV,EAAesC,IAAY,CACtCpK,OACAiI,SACAE,UAAU,EACVM,YAAY,GAEhB,GAAID,EAAO3U,OACP,OAEJ,MAAMwW,EAAuC,SAAhB7B,EAAOxI,KAChC,CACI1N,SAAU,KACVW,WAAYkX,EAAKnX,MAErB,CACIV,SAAU,KACVW,WAAY,CACR,CACIX,SAAU,QACVU,KAAMmX,EAAK7W,MAAQ+V,OAAOc,EAAKnX,SAe/C,GAXK2W,GAAWC,IAAU7B,EAAaoB,OAAOiB,IAAY/B,IACtDgC,EAAG7V,WAAa,CACZ0U,MAAO,UAAUnB,EAAaoB,OAAOiB,SAGzC5B,EAAO8B,YACFD,EAAG7V,aACJ6V,EAAG7V,WAAa,IAEpB6V,EAAG7V,WAAWmU,MAAQH,EAAO8B,WAE7B9B,EAAO+B,OAAQ,CACf,MAAMC,EAAmDhC,EAAO+B,OAAOJ,EAAKnX,KAAMqX,EAAIjS,EAAOgS,GAC7F,GAAII,EAAc,CACd,GAA4B,iBAAjBA,EAWP,OAAOA,EAX2B,CAElC,MAAMrW,EAAOuO,EAAY,OAAO8H,UAED,IAA3BrW,EAAKlB,WAAW4C,QAAiB,CAAC,QAAS,YAAY9C,SAASoB,EAAKlB,WAAW,GAAGX,UAGlF+X,EAAGpX,WAAW,GAAoBD,KAAOwX,EAF1CH,EAAGpX,WAAakB,EAAKlB,UAK5B,CAGJ,CAEJ,CACD,OAAOoX,CAAE,IAEf1K,QAAQ6I,GAAqCA,KAKnD,GAHIpQ,IAAQsR,IACRQ,EAAG1V,WAAWmU,MAAQX,EAAQyC,QAE9BZ,EAAW,CACX,MAAMa,EAAyCb,EAAUI,EAAKC,EAAI9R,GAClE,GAAIsS,EAAa,CACb,GAA2B,iBAAhBA,EAUP,OAAOA,EAV0B,CAEjC,MAAMvW,EAAOuO,EAAY,OAAOgI,WAC5BvW,EAAKlB,YAA0C,IAA3BkB,EAAKlB,WAAW4C,QAAiB,CAAC,QAAS,YAAY9C,SAASoB,EAAKlB,WAAW,GAAGX,UAGtG4X,EAAGjX,WAAW,GAAoBD,KAAO0X,EAF1CR,EAAGjX,WAAakB,EAAKlB,UAK5B,CAGJ,CACJ,CACD,OAAOiX,CAAE,OAS7B,GAFAF,EAAMxV,WAAWmU,MAAQqB,EAAMxV,WAAWmU,MAAQ,GAAGqB,EAAMxV,WAAWmU,SAASX,EAAQgC,QAAUhC,EAAQgC,MAErGL,GAAUC,GAAUG,EAAc,CAClC,MAAMY,EAA6B/C,EAA8BC,EAAUC,EAAgBC,EAAc,CAACC,UACtGE,eACAC,WACAC,WAAU,CAACC,iBACXC,iBAEJ,GAAIqB,GAAUI,EAAc,CACxB,MAAMa,EAAyB,CAC3BtY,SAAU,QACVW,WAAY,CAAC0X,KAEZvC,EAAQvS,SAAUqS,GAAkBI,IACrCsC,EAAMpW,WAAa,CAAC0U,MAAO,iBAE/Bc,EAAM/W,WAAW4X,QAAQD,EAC5B,CACD,GAAIhB,EAAQ,CACR,MACMkB,EAAyB,CAC3BxY,SAAU,QACVW,WAAY,CAHE0W,EAASoB,gBAAgBJ,GAAaA,KAKnDvC,EAAQvS,SAAUqS,GAAkBI,IACrCwC,EAAMtW,WAAa,CAAC0U,MAAO,iBAE/Bc,EAAM/W,WAAWyG,KAAKoR,EACzB,CAEJ,CAMD,OAJiB,IAAbhB,IACAE,EAAMxV,WAAWwW,SAAW3B,OAAOS,IAGhCE,CAAK,wMC7PmEzY,mBAAmJ,IAAIQ,EAAE,IAAIG,EAAE,IAAIgK,EAAE,KAAK+O,EAAE,cAAcxN,EAAE,SAASyN,EAAE,SAASC,EAAE,OAAOC,EAAE,MAAMC,EAAE,OAAOC,EAAE,QAAQC,EAAE,UAAUzV,EAAE,OAAO0V,EAAE,OAAOC,EAAE,eAAeC,EAAE,6FAA6FC,EAAE,sFAAsFC,EAAE,CAAC/U,KAAK,KAAKgV,SAAS,2DAA2DtJ,MAAM,KAAKuJ,OAAO,wFAAwFvJ,MAAM,KAAKwJ,QAAQ,SAASha,GAAG,IAAIG,EAAE,CAAC,KAAK,KAAK,KAAK,MAAMgK,EAAEnK,EAAE,IAAI,MAAM,IAAIA,GAAGG,GAAGgK,EAAE,IAAI,KAAKhK,EAAEgK,IAAIhK,EAAE,IAAI,GAAG,GAAG8Z,EAAE,SAASja,EAAEG,EAAEgK,GAAG,IAAI+O,EAAE5B,OAAOtX,GAAG,OAAOkZ,GAAGA,EAAEpV,QAAQ3D,EAAEH,EAAE,GAAGI,MAAMD,EAAE,EAAE+Y,EAAEpV,QAAQzC,KAAK8I,GAAGnK,CAAC,EAAEoK,EAAE,CAAC+O,EAAEc,EAAEC,EAAE,SAASla,GAAG,IAAIG,GAAGH,EAAEma,YAAYhQ,EAAEgJ,KAAKC,IAAIjT,GAAG+Y,EAAE/F,KAAKiH,MAAMjQ,EAAE,IAAIuB,EAAEvB,EAAE,GAAG,OAAOhK,GAAG,EAAE,IAAI,KAAK8Z,EAAEf,EAAE,EAAE,KAAK,IAAIe,EAAEvO,EAAE,EAAE,IAAI,EAAEuO,EAAE,SAASja,EAAEG,EAAEgK,GAAG,GAAGhK,EAAEka,OAAOlQ,EAAEkQ,OAAO,OAAOra,EAAEmK,EAAEhK,GAAG,IAAI+Y,EAAE,IAAI/O,EAAEmQ,OAAOna,EAAEma,SAASnQ,EAAEoQ,QAAQpa,EAAEoa,SAAS7O,EAAEvL,EAAEqa,QAAQ/N,IAAIyM,EAAEK,GAAGJ,EAAEhP,EAAEuB,EAAE,EAAE0N,EAAEjZ,EAAEqa,QAAQ/N,IAAIyM,GAAGC,GAAG,EAAE,GAAGI,GAAG,UAAUL,GAAG/O,EAAEuB,IAAIyN,EAAEzN,EAAE0N,EAAEA,EAAE1N,KAAK,EAAE,EAAE2N,EAAE,SAASrZ,GAAG,OAAOA,EAAE,EAAEmT,KAAKsH,KAAKza,IAAI,EAAEmT,KAAKiH,MAAMpa,EAAE,EAAE0a,EAAE,SAAS1a,GAAG,MAAM,CAAC6Z,EAAEN,EAAEK,EAAE7V,EAAE4W,EAAErB,EAAEG,EAAEJ,EAAEuB,EAAEnB,EAAED,EAAEJ,EAAEa,EAAEd,EAAEA,EAAEzN,EAAEmP,GAAG3B,EAAE4B,EAAEtB,GAAGxZ,IAAIsX,OAAOtX,GAAG,IAAIwC,cAAchB,QAAQ,KAAK,GAAG,EAAE4X,EAAE,SAASpZ,GAAG,YAAO,IAASA,CAAC,GAAG+a,EAAE,KAAKH,EAAE,CAAE,EAACA,EAAEG,GAAGlB,EAAE,IAAIa,EAAE,SAAS1a,GAAG,OAAOA,aAAagb,CAAC,EAAEC,EAAE,SAASjb,EAAEG,EAAEgK,EAAE+O,GAAG,IAAIxN,EAAE,IAAIvL,EAAE,OAAO4a,EAAE,GAAG,iBAAiB5a,EAAE,CAAC,IAAIgZ,EAAEhZ,EAAEqC,cAAcoY,EAAEzB,KAAKzN,EAAEyN,GAAGhP,IAAIyQ,EAAEzB,GAAGhP,EAAEuB,EAAEyN,GAAG,IAAIC,EAAEjZ,EAAEqQ,MAAM,KAAK,IAAI9E,GAAG0N,EAAEtV,OAAO,EAAE,OAAO9D,EAAEoZ,EAAE,GAAG,KAAK,CAAC,IAAIC,EAAElZ,EAAE2E,KAAK8V,EAAEvB,GAAGlZ,EAAEuL,EAAE2N,CAAC,CAAC,OAAOH,GAAGxN,IAAIqP,EAAErP,GAAGA,IAAIwN,GAAG6B,CAAC,EAAEJ,EAAE,SAAS3a,EAAEG,GAAG,GAAGua,EAAE1a,GAAG,OAAOA,EAAEwa,QAAQ,IAAIrQ,EAAE,iBAAiBhK,EAAEA,EAAE,CAAA,EAAG,OAAOgK,EAAEkQ,KAAKra,EAAEmK,EAAE+Q,KAAKpQ,UAAU,IAAIkQ,EAAE7Q,EAAE,EAAEgR,EAAE/Q,EAAE+Q,EAAEzB,EAAEuB,EAAEE,EAAEzP,EAAEgP,EAAES,EAAER,EAAE,SAAS3a,EAAEG,GAAG,OAAOwa,EAAE3a,EAAE,CAACob,OAAOjb,EAAEkb,GAAGC,IAAInb,EAAEob,GAAGC,EAAErb,EAAEsb,GAAGC,QAAQvb,EAAEub,SAAS,EAAE,IAAIV,EAAE,WAAW,SAASnB,EAAE7Z,GAAGuM,KAAK8O,GAAGJ,EAAEjb,EAAEob,OAAO,MAAK,GAAI7O,KAAKrM,MAAMF,EAAE,CAAC,IAAIia,EAAEJ,EAAEla,UAAU,OAAOsa,EAAE/Z,MAAM,SAASF,GAAGuM,KAAKoP,GAAG,SAAS3b,GAAG,IAAIG,EAAEH,EAAEqa,KAAKlQ,EAAEnK,EAAEsb,IAAI,GAAG,OAAOnb,EAAE,OAAO,IAAIyb,KAAKC,KAAK,GAAGV,EAAE/B,EAAEjZ,GAAG,OAAO,IAAIyb,KAAK,GAAGzb,aAAayb,KAAK,OAAO,IAAIA,KAAKzb,GAAG,GAAG,iBAAiBA,IAAI,MAAM2b,KAAK3b,GAAG,CAAC,IAAI+Y,EAAE/Y,EAAEyP,MAAM+J,GAAG,GAAGT,EAAE,CAAC,IAAIxN,EAAEwN,EAAE,GAAG,GAAG,EAAEC,GAAGD,EAAE,IAAI,KAAKxI,UAAU,EAAE,GAAG,OAAOvG,EAAE,IAAIyR,KAAKA,KAAKG,IAAI7C,EAAE,GAAGxN,EAAEwN,EAAE,IAAI,EAAEA,EAAE,IAAI,EAAEA,EAAE,IAAI,EAAEA,EAAE,IAAI,EAAEC,IAAI,IAAIyC,KAAK1C,EAAE,GAAGxN,EAAEwN,EAAE,IAAI,EAAEA,EAAE,IAAI,EAAEA,EAAE,IAAI,EAAEA,EAAE,IAAI,EAAEC,EAAE,CAAC,CAAC,OAAO,IAAIyC,KAAKzb,EAAE,CAA3X,CAA6XH,GAAGuM,KAAKkP,GAAGzb,EAAEwb,GAAG,GAAGjP,KAAK4F,MAAM,EAAE8H,EAAE9H,KAAK,WAAW,IAAInS,EAAEuM,KAAKoP,GAAGpP,KAAKyP,GAAGhc,EAAEic,cAAc1P,KAAK2P,GAAGlc,EAAEmc,WAAW5P,KAAK6P,GAAGpc,EAAEqc,UAAU9P,KAAK+P,GAAGtc,EAAEuc,SAAShQ,KAAKiQ,GAAGxc,EAAEyc,WAAWlQ,KAAKmQ,GAAG1c,EAAE2c,aAAapQ,KAAKqQ,GAAG5c,EAAE6c,aAAatQ,KAAKuQ,IAAI9c,EAAE+c,iBAAiB,EAAE9C,EAAE+C,OAAO,WAAW,OAAO7B,CAAC,EAAElB,EAAEgD,QAAQ,WAAW,QAAQ1Q,KAAKoP,GAAG/b,aAAa8Z,EAAE,EAAEO,EAAEiD,OAAO,SAASld,EAAEG,GAAG,IAAIgK,EAAEwQ,EAAE3a,GAAG,OAAOuM,KAAK4Q,QAAQhd,IAAIgK,GAAGA,GAAGoC,KAAK6Q,MAAMjd,EAAE,EAAE8Z,EAAEoD,QAAQ,SAASrd,EAAEG,GAAG,OAAOwa,EAAE3a,GAAGuM,KAAK4Q,QAAQhd,EAAE,EAAE8Z,EAAEqD,SAAS,SAAStd,EAAEG,GAAG,OAAOoM,KAAK6Q,MAAMjd,GAAGwa,EAAE3a,EAAE,EAAEia,EAAEsD,GAAG,SAASvd,EAAEG,EAAEgK,GAAG,OAAOgR,EAAE/B,EAAEpZ,GAAGuM,KAAKpM,GAAGoM,KAAKiR,IAAIrT,EAAEnK,EAAE,EAAEia,EAAEwD,KAAK,WAAW,OAAOtK,KAAKiH,MAAM7N,KAAKmR,UAAU,IAAI,EAAEzD,EAAEyD,QAAQ,WAAW,OAAOnR,KAAKoP,GAAGgC,SAAS,EAAE1D,EAAEkD,QAAQ,SAASnd,EAAEG,GAAG,IAAIgK,EAAEoC,KAAK2M,IAAIiC,EAAE/B,EAAEjZ,IAAIA,EAAEqZ,EAAE2B,EAAET,EAAE1a,GAAG0Z,EAAE,SAAS1Z,EAAEG,GAAG,IAAIuL,EAAEyP,EAAER,EAAExQ,EAAEoR,GAAGK,KAAKG,IAAI5R,EAAE6R,GAAG7b,EAAEH,GAAG,IAAI4b,KAAKzR,EAAE6R,GAAG7b,EAAEH,GAAGmK,GAAG,OAAO+O,EAAExN,EAAEA,EAAE0R,MAAM/D,EAAE,EAAEM,EAAE,SAAS3Z,EAAEG,GAAG,OAAOgb,EAAER,EAAExQ,EAAEyT,SAAS5d,GAAGiG,MAAMkE,EAAEyT,OAAO,MAAM1E,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,MAAMrV,MAAM1D,IAAIgK,EAAE,EAAEyP,EAAErN,KAAK+P,GAAGzC,EAAEtN,KAAK2P,GAAGjC,EAAE1N,KAAK6P,GAAGhS,EAAE,OAAOmC,KAAKgP,GAAG,MAAM,IAAI,OAAO/B,GAAG,KAAKzV,EAAE,OAAOmV,EAAEQ,EAAE,EAAE,GAAGA,EAAE,GAAG,IAAI,KAAKH,EAAE,OAAOL,EAAEQ,EAAE,EAAEG,GAAGH,EAAE,EAAEG,EAAE,GAAG,KAAKP,EAAE,IAAIyB,EAAExO,KAAKsR,UAAUC,WAAW,EAAElD,GAAGhB,EAAEmB,EAAEnB,EAAE,EAAEA,GAAGmB,EAAE,OAAOrB,EAAER,EAAEe,EAAEW,EAAEX,GAAG,EAAEW,GAAGf,GAAG,KAAKR,EAAE,KAAKI,EAAE,OAAOE,EAAEvP,EAAE,QAAQ,GAAG,KAAKgP,EAAE,OAAOO,EAAEvP,EAAE,UAAU,GAAG,KAAK+O,EAAE,OAAOQ,EAAEvP,EAAE,UAAU,GAAG,KAAKsB,EAAE,OAAOiO,EAAEvP,EAAE,eAAe,GAAG,QAAQ,OAAOmC,KAAKiO,QAAQ,EAAEP,EAAEmD,MAAM,SAASpd,GAAG,OAAOuM,KAAK4Q,QAAQnd,GAAE,EAAG,EAAEia,EAAE8D,KAAK,SAAS/d,EAAEG,GAAG,IAAIgK,EAAEmP,EAAE6B,EAAET,EAAE1a,GAAGwZ,EAAE,OAAOjN,KAAKgP,GAAG,MAAM,IAAI7B,GAAGvP,EAAE,CAAE,EAACA,EAAEkP,GAAGG,EAAE,OAAOrP,EAAEsP,GAAGD,EAAE,OAAOrP,EAAEoP,GAAGC,EAAE,QAAQrP,EAAEpG,GAAGyV,EAAE,WAAWrP,EAAEiP,GAAGI,EAAE,QAAQrP,EAAEgP,GAAGK,EAAE,UAAUrP,EAAEuB,GAAG8N,EAAE,UAAUrP,EAAE+O,GAAGM,EAAE,eAAerP,GAAGmP,GAAGK,EAAEL,IAAID,EAAE9M,KAAK6P,IAAIjc,EAAEoM,KAAK+P,IAAInc,EAAE,GAAGmZ,IAAIC,GAAGD,IAAIvV,EAAE,CAAC,IAAI6V,EAAErN,KAAKiO,QAAQgD,IAAI/D,EAAE,GAAGG,EAAE+B,GAAGjC,GAAGC,GAAGC,EAAEzH,OAAO5F,KAAKoP,GAAG/B,EAAE4D,IAAI/D,EAAEtG,KAAK2B,IAAIvI,KAAK6P,GAAGxC,EAAEoE,gBAAgBrC,EAAE,MAAMjC,GAAGnN,KAAKoP,GAAGjC,GAAGC,GAAG,OAAOpN,KAAK4F,OAAO5F,IAAI,EAAE0N,EAAEuD,IAAI,SAASxd,EAAEG,GAAG,OAAOoM,KAAKiO,QAAQuD,KAAK/d,EAAEG,EAAE,EAAE8Z,EAAEgE,IAAI,SAASje,GAAG,OAAOuM,KAAK4O,EAAET,EAAE1a,KAAK,EAAEia,EAAExN,IAAI,SAASyM,EAAEM,GAAG,IAAIC,EAAEC,EAAEnN,KAAK2M,EAAEgF,OAAOhF,GAAG,IAAIS,EAAEwB,EAAET,EAAElB,GAAGI,EAAE,SAAS5Z,GAAG,IAAIG,EAAEwa,EAAEjB,GAAG,OAAOyB,EAAER,EAAExa,EAAEka,KAAKla,EAAEka,OAAOlH,KAAKgL,MAAMne,EAAEkZ,IAAIQ,EAAE,EAAE,GAAGC,IAAIJ,EAAE,OAAOhN,KAAKiR,IAAIjE,EAAEhN,KAAK2P,GAAGhD,GAAG,GAAGS,IAAI5V,EAAE,OAAOwI,KAAKiR,IAAIzZ,EAAEwI,KAAKyP,GAAG9C,GAAG,GAAGS,IAAIN,EAAE,OAAOO,EAAE,GAAG,GAAGD,IAAIL,EAAE,OAAOM,EAAE,GAAG,IAAIC,GAAGJ,EAAE,CAAE,EAACA,EAAEN,GAAGhZ,EAAEsZ,EAAEL,GAAGjP,EAAEsP,EAAE/N,GAAG1L,EAAEyZ,GAAGE,IAAI,EAAEM,EAAE1N,KAAKoP,GAAGgC,UAAUzE,EAAEW,EAAE,OAAOsB,EAAER,EAAEV,EAAE1N,KAAK,EAAE0N,EAAEmE,SAAS,SAASpe,EAAEG,GAAG,OAAOoM,KAAKE,KAAK,EAAEzM,EAAEG,EAAE,EAAE8Z,EAAE/D,OAAO,SAASlW,GAAG,IAAIG,EAAEoM,KAAKpC,EAAEoC,KAAKsR,UAAU,IAAItR,KAAK0Q,UAAU,OAAO9S,EAAEkU,aAAa3E,EAAE,IAAIR,EAAElZ,GAAG,uBAAuB0L,EAAEyP,EAAEjB,EAAE3N,MAAM4M,EAAE5M,KAAKiQ,GAAGpD,EAAE7M,KAAKmQ,GAAGrD,EAAE9M,KAAK2P,GAAG5C,EAAEnP,EAAE2P,SAASP,EAAEpP,EAAE4P,OAAOP,EAAE,SAASxZ,EAAEmK,EAAEuB,EAAEyN,GAAG,OAAOnZ,IAAIA,EAAEmK,IAAInK,EAAEG,EAAE+Y,KAAKxN,EAAEvB,GAAGtG,MAAM,EAAEsV,EAAE,EAAEpV,EAAE,SAAS/D,GAAG,OAAOmb,EAAEhC,EAAEA,EAAE,IAAI,GAAGnZ,EAAE,IAAI,EAAEyZ,EAAEtP,EAAEmU,UAAU,SAASte,EAAEG,EAAEgK,GAAG,IAAI+O,EAAElZ,EAAE,GAAG,KAAK,KAAK,OAAOmK,EAAE+O,EAAE1W,cAAc0W,CAAC,EAAES,EAAE,CAAC4E,GAAGjH,OAAO/K,KAAKyP,IAAInY,OAAO,GAAG2a,KAAKjS,KAAKyP,GAAGnC,EAAER,EAAE,EAAEoF,GAAGtD,EAAEhC,EAAEE,EAAE,EAAE,EAAE,KAAKqF,IAAIlF,EAAErP,EAAEwU,YAAYtF,EAAEE,EAAE,GAAGqF,KAAKpF,EAAED,EAAEF,GAAGuB,EAAErO,KAAK6P,GAAGyC,GAAG1D,EAAEhC,EAAE5M,KAAK6P,GAAG,EAAE,KAAK3C,EAAEnC,OAAO/K,KAAK+P,IAAIwC,GAAGtF,EAAErP,EAAE4U,YAAYxS,KAAK+P,GAAGhD,EAAE,GAAG0F,IAAIxF,EAAErP,EAAE8U,cAAc1S,KAAK+P,GAAGhD,EAAE,GAAG4F,KAAK5F,EAAE/M,KAAK+P,IAAI6C,EAAE7H,OAAO6B,GAAGiG,GAAGjE,EAAEhC,EAAEA,EAAE,EAAE,KAAKK,EAAEzV,EAAE,GAAGsb,GAAGtb,EAAE,GAAGsV,EAAEI,EAAEN,EAAEC,GAAE,GAAIkG,EAAE7F,EAAEN,EAAEC,GAAE,GAAIa,EAAE3C,OAAO8B,GAAGmG,GAAGpE,EAAEhC,EAAEC,EAAE,EAAE,KAAKD,EAAE7B,OAAO/K,KAAKqQ,IAAI4C,GAAGrE,EAAEhC,EAAE5M,KAAKqQ,GAAG,EAAE,KAAK6C,IAAItE,EAAEhC,EAAE5M,KAAKuQ,IAAI,EAAE,KAAK4C,EAAEhU,GAAG,OAAOwN,EAAE1X,QAAQoY,GAAG,SAAS5Z,EAAEG,GAAG,OAAOA,GAAGwZ,EAAE3Z,IAAI0L,EAAElK,QAAQ,IAAI,GAAI,GAAE,EAAEyY,EAAEE,UAAU,WAAW,OAAO,IAAIhH,KAAKgL,MAAM5R,KAAKoP,GAAGgE,oBAAoB,GAAG,EAAE1F,EAAE9V,KAAK,SAAS+U,EAAEO,EAAEC,GAAG,IAAIC,EAAEC,EAAEuB,EAAET,EAAEjB,GAAGI,EAAEc,EAAEzB,GAAGe,GAAGJ,EAAEM,YAAY5N,KAAK4N,aAAaha,EAAEiK,EAAEmC,KAAKsN,EAAEkB,EAAEI,EAAElB,EAAE1N,KAAKsN,GAAG,OAAOkB,GAAGpB,EAAE,CAAA,EAAGA,EAAE5V,GAAGgX,EAAE,GAAGpB,EAAEJ,GAAGwB,EAAEpB,EAAEH,GAAGuB,EAAE,EAAEpB,EAAEL,IAAIlP,EAAE6P,GAAG,OAAON,EAAEN,IAAIjP,EAAE6P,GAAG,MAAMN,EAAEP,GAAGhP,EAAED,EAAEwP,EAAER,GAAG/O,EAAEjK,EAAEwZ,EAAEjO,GAAGtB,EAAEpK,EAAE2Z,GAAGC,IAAIxP,EAAEsP,EAAEqB,EAAEI,EAAE9B,EAAE0B,EAAE,EAAEd,EAAE+D,YAAY,WAAW,OAAOzR,KAAK6Q,MAAM7D,GAAG6C,EAAE,EAAEnC,EAAE4D,QAAQ,WAAW,OAAOjD,EAAErO,KAAK8O,GAAG,EAAEpB,EAAEmB,OAAO,SAASpb,EAAEG,GAAG,IAAIH,EAAE,OAAOuM,KAAK8O,GAAG,IAAIlR,EAAEoC,KAAKiO,QAAQtB,EAAE+B,EAAEjb,EAAEG,GAAE,GAAI,OAAO+Y,IAAI/O,EAAEkR,GAAGnC,GAAG/O,CAAC,EAAE8P,EAAEO,MAAM,WAAW,OAAOW,EAAER,EAAEpO,KAAKoP,GAAGpP,KAAK,EAAE0N,EAAE2D,OAAO,WAAW,OAAO,IAAIhC,KAAKrP,KAAKmR,UAAU,EAAEzD,EAAE2F,OAAO,WAAW,OAAOrT,KAAK0Q,UAAU1Q,KAAKsT,cAAc,IAAI,EAAE5F,EAAE4F,YAAY,WAAW,OAAOtT,KAAKoP,GAAGkE,aAAa,EAAE5F,EAAEra,SAAS,WAAW,OAAO2M,KAAKoP,GAAGmE,aAAa,EAAEjG,CAAC,CAAtwI,GAA0wIkG,EAAE/E,EAAErb,UAAU,OAAOgb,EAAEhb,UAAUogB,EAAE,CAAC,CAAC,MAAM7G,GAAG,CAAC,KAAKxN,GAAG,CAAC,KAAKyN,GAAG,CAAC,KAAKC,GAAG,CAAC,KAAKC,GAAG,CAAC,KAAKE,GAAG,CAAC,KAAKxV,GAAG,CAAC,KAAK0V,IAAI9W,kBAAkB3C,GAAG+f,EAAE/f,EAAE,IAAI,SAASG,GAAG,OAAOoM,KAAKgR,GAAGpd,EAAEH,EAAE,GAAGA,EAAE,GAAG,CAAE,IAAG2a,EAAEqF,OAAO,SAAShgB,EAAEG,GAAG,OAAOH,EAAEigB,KAAKjgB,EAAEG,EAAE6a,EAAEL,GAAG3a,EAAEigB,IAAG,GAAItF,CAAC,EAAEA,EAAES,OAAOH,EAAEN,EAAEuF,QAAQxF,EAAEC,EAAE8C,KAAK,SAASzd,GAAG,OAAO2a,EAAE,IAAI3a,EAAE,EAAE2a,EAAEwF,GAAGvF,EAAEG,GAAGJ,EAAEyF,GAAGxF,EAAED,EAAED,EAAE,GAAGC,CAAE,CAAx7Mxa,+BCAfkgB,EAAA7gB,QAAmK,WAAwB,IAAIW,EAAE,CAACmgB,IAAI,YAAYC,GAAG,SAASC,EAAE,aAAaC,GAAG,eAAeC,IAAI,sBAAsBC,KAAK,6BAA6B3gB,EAAE,0FAA0FmK,EAAE,OAAO+O,EAAE,QAAQxN,EAAE,qBAAqB4N,EAAE,CAAE,EAACH,EAAE,SAAShZ,GAAG,OAAOA,GAAGA,IAAIA,EAAE,GAAG,KAAK,IAAI,EAAMkZ,EAAE,SAASlZ,GAAG,OAAO,SAASH,GAAGuM,KAAKpM,IAAIH,CAAC,CAAC,EAAEuZ,EAAE,CAAC,sBAAsB,SAASpZ,IAAIoM,KAAKqU,OAAOrU,KAAKqU,KAAK,CAAA,IAAKC,OAAO,SAAS1gB,GAAG,IAAIA,EAAE,OAAO,EAAE,GAAG,MAAMA,EAAE,OAAO,EAAE,IAAIH,EAAEG,EAAEyP,MAAM,gBAAgBzF,EAAE,GAAGnK,EAAE,KAAKA,EAAE,IAAI,GAAG,OAAO,IAAImK,EAAE,EAAE,MAAMnK,EAAE,IAAImK,EAAEA,CAAC,CAAhI,CAAkIhK,EAAE,GAAGqZ,EAAE,SAASrZ,GAAG,IAAIH,EAAEsZ,EAAEnZ,GAAG,OAAOH,IAAIA,EAAEgQ,QAAQhQ,EAAEA,EAAEmZ,EAAEvR,OAAO5H,EAAEuZ,GAAG,EAAEH,EAAE,SAASjZ,EAAEH,GAAG,IAAImK,EAAE+O,EAAEI,EAAEgF,SAAS,GAAGpF,GAAG,IAAI,IAAIxN,EAAE,EAAEA,GAAG,GAAGA,GAAG,EAAE,GAAGvL,EAAE6P,QAAQkJ,EAAExN,EAAE,EAAE1L,KAAK,EAAE,CAACmK,EAAEuB,EAAE,GAAG,KAAK,OAAOvB,EAAEhK,KAAKH,EAAE,KAAK,MAAM,OAAOmK,CAAC,EAAEsP,EAAE,CAAC6F,EAAE,CAAC5T,EAAE,SAASvL,GAAGoM,KAAKuU,UAAU1H,EAAEjZ,GAAE,EAAG,GAAGkZ,EAAE,CAAC3N,EAAE,SAASvL,GAAGoM,KAAKuU,UAAU1H,EAAEjZ,GAAE,EAAG,GAAG8a,EAAE,CAAC,KAAK,SAAS9a,GAAGoM,KAAKwU,aAAa,KAAK5gB,CAAC,GAAG6gB,GAAG,CAAC7W,EAAE,SAAShK,GAAGoM,KAAKwU,aAAa,IAAI5gB,CAAC,GAAGsf,IAAI,CAAC,QAAQ,SAAStf,GAAGoM,KAAKwU,cAAc5gB,CAAC,GAAGgZ,EAAE,CAACD,EAAEG,EAAE,YAAYmG,GAAG,CAACtG,EAAEG,EAAE,YAAYY,EAAE,CAACf,EAAEG,EAAE,YAAYkG,GAAG,CAACrG,EAAEG,EAAE,YAAY8F,EAAE,CAACjG,EAAEG,EAAE,UAAUG,EAAE,CAACN,EAAEG,EAAE,UAAU+F,GAAG,CAAClG,EAAEG,EAAE,UAAUgG,GAAG,CAACnG,EAAEG,EAAE,UAAUuB,EAAE,CAAC1B,EAAEG,EAAE,QAAQwF,GAAG,CAAC1U,EAAEkP,EAAE,QAAQ4H,GAAG,CAACvV,EAAE,SAASvL,GAAG,IAAIH,EAAEsZ,EAAEU,QAAQ7P,EAAEhK,EAAEyP,MAAM,OAAO,GAAGrD,KAAK2U,IAAI/W,EAAE,GAAGnK,EAAE,IAAI,IAAIkZ,EAAE,EAAEA,GAAG,GAAGA,GAAG,EAAElZ,EAAEkZ,GAAG1X,QAAQ,SAAS,MAAMrB,IAAIoM,KAAK2U,IAAIhI,EAAE,GAAGW,EAAE,CAACX,EAAEG,EAAE,UAAUoF,GAAG,CAACtU,EAAEkP,EAAE,UAAUqF,IAAI,CAAChT,EAAE,SAASvL,GAAG,IAAIH,EAAEwZ,EAAE,UAAUrP,GAAGqP,EAAE,gBAAgBxZ,EAAEmB,KAAK,SAAShB,GAAG,OAAOA,EAAE0D,MAAM,EAAE,EAAG,KAAImM,QAAQ7P,GAAG,EAAE,GAAGgK,EAAE,EAAE,MAAM,IAAImI,MAAM/F,KAAKgO,MAAMpQ,EAAE,IAAIA,CAAC,GAAGyU,KAAK,CAAClT,EAAE,SAASvL,GAAG,IAAIH,EAAEwZ,EAAE,UAAUxJ,QAAQ7P,GAAG,EAAE,GAAGH,EAAE,EAAE,MAAM,IAAIsS,MAAM/F,KAAKgO,MAAMva,EAAE,IAAIA,CAAC,GAAGmhB,EAAE,CAAC,WAAW9H,EAAE,SAASkF,GAAG,CAACpU,EAAE,SAAShK,GAAGoM,KAAK+N,KAAKnB,EAAEhZ,EAAE,GAAGqe,KAAK,CAAC,QAAQnF,EAAE,SAASqG,EAAEnG,EAAE6H,GAAG7H,GAAG,SAASxV,EAAEoG,GAAG,IAAI+O,EAAExN,EAAEwN,EAAE/O,EAAEuB,EAAE4N,GAAGA,EAAE+H,QAAQ,IAAI,IAAIlI,GAAGhP,EAAE+O,EAAE1X,QAAQ,qCAAqC,SAASxB,EAAEmK,EAAE+O,GAAG,IAAII,EAAEJ,GAAGA,EAAE3H,cAAc,OAAOpH,GAAGuB,EAAEwN,IAAI/Y,EAAE+Y,IAAIxN,EAAE4N,GAAG9X,QAAQ,2CAA2CrB,EAAEH,EAAEmK,GAAG,OAAOnK,GAAGmK,EAAEtG,MAAM,EAAG,GAAG,KAAI+L,MAAM5P,GAAGqZ,EAAEF,EAAErV,OAAOyV,EAAE,EAAEA,EAAEF,EAAEE,GAAG,EAAE,CAAC,IAAIC,EAAEL,EAAEI,GAAGH,EAAEK,EAAED,GAAGzV,EAAEqV,GAAGA,EAAE,GAAGM,EAAEN,GAAGA,EAAE,GAAGD,EAAEI,GAAGG,EAAE,CAAC4H,MAAMvd,EAAEwd,OAAO7H,GAAGF,EAAEhY,QAAQ,WAAW,GAAG,CAAC,OAAO,SAASrB,GAAG,IAAI,IAAIH,EAAE,CAAE,EAACmK,EAAE,EAAE+O,EAAE,EAAE/O,EAAEkP,EAAElP,GAAG,EAAE,CAAC,IAAIuB,EAAEyN,EAAEhP,GAAG,GAAG,iBAAiBuB,EAAEwN,GAAGxN,EAAE5H,WAAW,CAAC,IAAIwV,EAAE5N,EAAE4V,MAAM/H,EAAE7N,EAAE6V,OAAO/H,EAAErZ,EAAE0D,MAAMqV,GAAGE,EAAEE,EAAEjJ,KAAKmJ,GAAG,GAAGD,EAAE1Z,KAAKG,EAAEoZ,GAAGjZ,EAAEA,EAAEqB,QAAQ4X,EAAE,GAAG,CAAC,CAAC,OAAO,SAASjZ,GAAG,IAAIH,EAAEG,EAAE2gB,UAAU,QAAG,IAAS9gB,EAAE,CAAC,IAAImK,EAAEhK,EAAEqhB,MAAMxhB,EAAEmK,EAAE,KAAKhK,EAAEqhB,OAAO,IAAI,KAAKrX,IAAIhK,EAAEqhB,MAAM,UAAUrhB,EAAE2gB,SAAS,CAAC,CAAxH,CAA0H9gB,GAAGA,CAAC,CAAC,CAAC,OAAO,SAASG,EAAEH,EAAEmK,GAAGA,EAAEuQ,EAAE+G,mBAAkB,EAAGthB,GAAGA,EAAEuhB,oBAAoBvI,EAAEhZ,EAAEuhB,mBAAmB,IAAIxI,EAAElZ,EAAEL,UAAU+L,EAAEwN,EAAEhZ,MAAMgZ,EAAEhZ,MAAM,SAASC,GAAG,IAAIH,EAAEG,EAAEka,KAAKnB,EAAE/Y,EAAEmb,IAAInC,EAAEhZ,EAAE+a,KAAK3O,KAAKgP,GAAGrC,EAAE,IAAIG,EAAEF,EAAE,GAAG,GAAG,iBAAiBE,EAAE,CAAC,IAAIE,GAAE,IAAKJ,EAAE,GAAGK,GAAE,IAAKL,EAAE,GAAGC,EAAEG,GAAGC,EAAEC,EAAEN,EAAE,GAAGK,IAAIC,EAAEN,EAAE,IAAIG,EAAE/M,KAAKsR,WAAWtE,GAAGE,IAAIH,EAAEnP,EAAEiW,GAAG3G,IAAIlN,KAAKoP,GAAG,SAASxb,EAAEH,EAAEmK,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK6F,QAAQhQ,IAAI,EAAE,OAAO,IAAI4b,MAAM,MAAM5b,EAAE,IAAI,GAAGG,GAAG,IAAI+Y,EAAEnV,EAAE/D,EAAF+D,CAAK5D,GAAGuL,EAAEwN,EAAEoB,KAAKhB,EAAEJ,EAAEqB,MAAMpB,EAAED,EAAEgI,IAAI7H,EAAEH,EAAEsI,MAAMjI,EAAEL,EAAEyI,QAAQnI,EAAEN,EAAE0I,QAAQxI,EAAEF,EAAE6H,aAAatH,EAAEP,EAAE0H,KAAKlH,EAAE,IAAIkC,KAAK3B,EAAEd,IAAIzN,GAAG4N,EAAE,EAAEI,EAAE2C,WAAWxC,EAAEnO,GAAGgO,EAAEuC,cAAckF,EAAE,EAAEzV,IAAI4N,IAAI6H,EAAE7H,EAAE,EAAEA,EAAE,EAAEI,EAAEyC,YAAY,IAAIzB,EAAErB,GAAG,EAAEjP,EAAEmP,GAAG,EAAEqB,EAAEpB,GAAG,EAAEuB,EAAE3B,GAAG,EAAE,OAAOK,EAAE,IAAImC,KAAKA,KAAKG,IAAIlC,EAAEsH,EAAElH,EAAES,EAAEtQ,EAAEwQ,EAAEG,EAAE,GAAGtB,EAAEoH,OAAO,MAAM1W,EAAE,IAAIyR,KAAKA,KAAKG,IAAIlC,EAAEsH,EAAElH,EAAES,EAAEtQ,EAAEwQ,EAAEG,IAAI,IAAIa,KAAK/B,EAAEsH,EAAElH,EAAES,EAAEtQ,EAAEwQ,EAAEG,EAA+B,CAA5B,MAAM5a,GAAG,OAAO,IAAIyb,KAAK,GAAG,CAAC,CAAzc,CAA2c5b,EAAEqZ,EAAEH,GAAG3M,KAAK4F,OAAOsH,IAAG,IAAKA,IAAIlN,KAAK8O,GAAG9O,KAAK6O,OAAO3B,GAAG4B,IAAIjC,GAAGpZ,GAAGuM,KAAK2J,OAAOmD,KAAK9M,KAAKoP,GAAG,IAAIC,KAAK,KAAKtC,EAAE,CAAA,CAAE,MAAM,GAAGD,aAAajZ,MAAM,IAAI,IAAIsZ,EAAEL,EAAEvV,OAAOmW,EAAE,EAAEA,GAAGP,EAAEO,GAAG,EAAE,CAACd,EAAE,GAAGE,EAAEY,EAAE,GAAG,IAAIJ,EAAE1P,EAAElE,MAAMsG,KAAK4M,GAAG,GAAGU,EAAEoD,UAAU,CAAC1Q,KAAKoP,GAAG9B,EAAE8B,GAAGpP,KAAK8O,GAAGxB,EAAEwB,GAAG9O,KAAK4F,OAAO,KAAK,CAAC8H,IAAIP,IAAInN,KAAKoP,GAAG,IAAIC,KAAK,IAAI,MAAMlQ,EAAE7L,KAAK0M,KAAKpM,EAAE,CAAC,CAAE,CAA5kHH,2DCGnF6hB,EAAM7B,OAAOyB,GAKN,MAAMK,EAAY,CAACC,EAAiB7L,KACvC,IAAImE,EAIJ,GAAInE,EACA,OAAQA,GACR,IAAK,WAEDmE,EAAO0H,EACP,MACJ,IAAK,WACD1H,EAAOwH,EAAME,EAAQle,MAAM,GAAI,2BAA2B4Z,OAC1D,MACJ,IAAK,QACDpD,EAAOwH,EAAME,EAAS,uBAAuBtE,OAC7C,MACJ,IAAK,OACDpD,EAAOwH,EAAME,GAAStE,OACtB,MAEJ,QACIpD,EAAOwH,EAAME,EAAS7L,GAAQ,GAAMwH,UAI5C,OAAOrD,CAAI,EC7BF2H,EAAe,CAAC5J,EAAqBrC,KAC9C,GAAIqC,GAAM6J,cAAgBviB,QAAUA,OAAOC,UAAUuJ,eAAerJ,KAAKuY,EAAM,UAAY1Y,OAAOgJ,KAAK0P,GAAM8J,MAAKrf,IAAS,CAAC,OAAQ,QAAS,QAAQ7B,SAAS6B,KAC1J,OAAQuV,EAEZ,MAAM+J,EAAsB,CACxBlhB,KAAMmX,GAEV,OAAQrC,EAAe9H,MACvB,IAAK,SACqB,iBAATmK,IACT+J,EAAS5gB,KAAO+V,OAAO6K,EAASlhB,MAChCkhB,EAASC,MAAQD,EAAS5gB,MAE9B,MACJ,IAAK,OACGwU,EAAeG,SACfiM,EAASC,MAAQN,EAAUxK,OAAO6K,EAASlhB,MAAO8U,EAAeG,SAErE,MACJ,IAAK,SACDiM,EAAS5gB,KAAO+V,OAAO6K,EAASlhB,MAChCkhB,EAASlhB,KAAOohB,SAASF,EAASlhB,KAAgB,IAClD,MACJ,IAAK,OAAQ,CACT,MAAMmB,EAAOhC,MAAMC,QAAQ8hB,EAASlhB,MAChC,CAACV,SAAU,KACPW,WAAaihB,EAASlhB,MAC1B0P,EAAY,OAAO2G,OAAO6K,EAASlhB,cACvCkhB,EAASlhB,KAAOmB,EAAKlB,YAAc,GACnC,MAAMK,EAAOT,EAAUsB,GACvB+f,EAAS5gB,KAAOA,EAChB4gB,EAASC,MAAQ7gB,EACjB,KACH,CACD,IAAK,UAC4B,iBAAlB4gB,EAASlhB,OAChBkhB,EAASlhB,KAAOkhB,EAASlhB,KAAKuB,cAAc8N,QAEhD6R,EAASlhB,MAAQ,CAAC,SAAS,EAAO,UAAMkM,EAAW,GAAGnM,SAASmhB,EAASlhB,MACxEkhB,EAASC,MAAQD,EAASlhB,KAAO,EAAI,EACrCkhB,EAAS5gB,KAAO+V,OAAO6K,EAASlhB,MAChC,MACJ,IAAK,QACDkhB,EAAS5gB,KAAO,GAChB4gB,EAASC,MAAQ,EACjB,MACJ,QACID,EAAS5gB,KAAOtB,KAAK4M,UAAUsV,EAASlhB,MAI5C,OAAOkhB,CAAQ,EAiDNG,EAAkBlK,IAC3B,GACIA,aAAgB1Y,QAChB0Y,EAAK6J,cAAgBviB,QACrB0Y,EAAKlP,eAAe,UACE,iBAAdkP,EAAK7W,MAA0C,iBAAd6W,EAAKnX,MAE9C,OAAOmX,EAEX,MAAM+J,EAA4B,CAC9BlhB,KAAMmX,GAEV,GAAoB,iBAATA,GACP,GAAIA,EAAKtU,OAAQ,CACb,MAAM1B,EAAOuO,EAAY,OAAOyH,UAChC,GAAIhW,EAAKlB,aAA0C,IAA3BkB,EAAKlB,WAAW4C,QAAgD,UAAhC1B,EAAKlB,WAAW,GAAGX,UAAuB,CAC9F4hB,EAASlhB,KAAOmB,EAAKlB,WACrBihB,EAASlU,KAAO,OAChB,MAAM1M,EAAOT,EAAUsB,GACvB+f,EAAS5gB,KAAOA,CACnB,CACJ,MAEM,CAAC,UAAM4L,GAAWnM,SAASoX,GAClC+J,EAAS5gB,KAAO,GAEhB4gB,EAAS5gB,KAAOtB,KAAK4M,UAAUuL,GAEnC,OAAO+J,CAAQ,EAsBNI,EAAgB,CAACC,EAAwB/hB,EAA+CsV,EAAgB0M,EAAaC,KAE9H,MAAMzhB,EAAO,CACTA,KAAM,GACN6U,SAAU,IAEV0M,EAAW1M,SACX7U,EAAK6U,SAAW0M,EAAW1M,SAAS3U,KAAKqV,GAAiC8L,EAAe9L,KAClF/V,GAAKkiB,MACZ1hB,EAAK6U,SAAW1V,MAAMgG,KAAK3F,EAAIkiB,MAAMC,iBAAiB,OAAOzhB,KAAI,CAAC0hB,EAAIxc,KAClE,MAAMmQ,EA7Be,CAAC4B,IAC9B,MAAMhW,EAAO2L,EAAUqK,EAAM,CAACpV,cAAc,IAC5C,IAAImf,EAaJ,OALIA,GAPA/f,EAAKlB,YAA0C,IAA3BkB,EAAKlB,WAAW4C,QAAgD,UAAhC1B,EAAKlB,WAAW,GAAGX,SAO5D,CACPU,KAAMmX,EAAK0K,UACX7U,KAAM,UARC,CACPhN,KAAMmB,EAAKlB,WACX+M,KAAM,OACN1M,KAAMT,EAAUsB,IAQjB+f,CAAQ,EAcSY,CAAkBF,GAC7B9M,EAAe1P,KAChB0P,EAAe1P,GAAS,CACpB4H,KAAMwU,EACNvM,OAAQwM,EACRhM,YAAY,EACZN,UAAU,IAGlB,MAAM4M,EAAWjN,EAAe1P,GAgBhC,MAfkD,UAA9Cwc,EAAGI,QAAQ7M,UAAU9F,OAAO9N,eAAuE,UAA1CqgB,EAAGI,QAAQ5P,MAAM/C,OAAO9N,gBACjFwgB,EAAS5M,UAAW,GAE4B,UAAhDyM,EAAGI,QAAQvM,YAAYpG,OAAO9N,gBAC9BwgB,EAAStM,YAAa,GAEsB,SAA5CmM,EAAGI,QAAQnhB,QAAQwO,OAAO9N,eAAgF,SAApDqgB,EAAGK,aAAa,WAAW5S,OAAO9N,gBACxFwgB,EAASlhB,QAAS,GAElB,CAAC,SAAU,SAAU,OAAQ,OAAQ,UAAW,SAASd,SAAS6hB,EAAGI,QAAQhV,QAC7E+U,EAAS/U,KAAO4U,EAAGI,QAAQhV,KACL,SAAlB+U,EAAS/U,MAAmB4U,EAAGI,QAAQ/M,SACvC8M,EAAS9M,OAAS2M,EAAGI,QAAQ/M,SAG9BM,CAAO,IAEXgM,EAAWvhB,MAAM6C,OACxB7C,EAAK6U,SAAW0M,EAAWvhB,KAAK,GAAGE,KAAKgiB,GAAyBb,EAAe,MACzE7hB,GAAK2iB,QAAQtf,SACpB7C,EAAK6U,SAAW1V,MAAMgG,KAAK3F,EAAI2iB,QAAQ,GAAG1L,KAAK,GAAG2L,OAAOliB,KAAKgiB,GAAuBb,EAAe,OAExG,IAAK,IAAI5W,EAAE,EAAGA,EAAEzK,EAAK6U,SAAShS,OAAQ4H,IAE7BqK,EAAerK,KAChBqK,EAAerK,GAAK,CAChBuC,KAAMwU,EACNvM,OAAQwM,EACRtM,UAAU,EACVM,YAAY,IAuBxB,GAnBI8L,EAAWvhB,KACXA,EAAKA,KAAOuhB,EAAWvhB,KAAKE,KAAK+W,GAAyBA,EAAI/W,KAAI,CAACiX,EAAqB/R,IAAkB2b,EAAa5J,EAAMrC,EAAe1P,QACrI5F,GAAK2iB,SAAStf,SACrB7C,EAAKA,KAAOb,MAAMgG,KAAK3F,EAAI2iB,QAAQ,GAAG1L,MAAMvW,KACxC+W,GAAO9X,MAAMgG,KAAK8R,EAAImL,OAAOliB,KACzB,CAACiX,EAAM/R,KACH,MAAM8b,EAAW/J,EAAK6K,QAAQlB,QAC1BC,EAAa5J,EAAK6K,QAAQlB,QAAShM,EAAe1P,IA5JlD,EAAC+R,EAAmBrC,KACxC,IAAIoM,EACJ,OAAQpM,EAAe9H,MACvB,IAAK,SACDkU,EAAW,CACPlhB,KAAMmX,EAAK0K,WAEf,MACJ,IAAK,OAAQ,CACT,MAAM7hB,EAAOmX,EAAK0K,UAClBX,EAAW,CACPlhB,OACAmhB,MAAON,EAAU7gB,EAAM8U,EAAeG,SAE1C,KACH,CACD,IAAK,SACDiM,EAAW,CACPlhB,KAAMohB,SAASjK,EAAK0K,UAAW,IAC/BvhB,KAAM6W,EAAK0K,WAEf,MACJ,IAAK,UAAW,CACZ,MAAM7hB,GAAQ,CAAC,QAAS,IAAK,OAAQ,aAAaD,SAASoX,EAAK0K,UAAUtgB,cAAc8N,QACxF6R,EAAW,CACPlhB,OACAmhB,MAAOnhB,EAAO,EAAI,EAClBM,KAAMN,EAAO,IAAM,KAEvB,KACH,CACD,QAEIkhB,EAAW,CACPlhB,KAFS8M,EAAUqK,EAAM,CAACpV,cAAc,IAE7B9B,YAAc,GACzBK,KAAM6W,EAAK0K,UACXV,MAAOhK,EAAK0K,WAMpB,OAAOX,CAAQ,EAmHKmB,CAAgBlL,EAAMrC,EAAe1P,IAIzC,OAHI+R,EAAK6K,QAAQb,QACbD,EAASC,MAAQmB,MAAMC,WAAWpL,EAAK6K,QAAQb,QAAUhK,EAAK6K,QAAQb,MAAQoB,WAAWpL,EAAK6K,QAAQb,QAEnGD,CAAQ,OAO3BlhB,EAAKA,KAAK6C,QAAU7C,EAAKA,KAAK,GAAG6C,SAAW7C,EAAK6U,SAAShS,OAC1D,MAAM,IAAIwO,MACN,iCAGR,OAAOrR,CAAI,QClOFwiB,EAKTxB,YAAYyB,GACRnX,KAAKmX,GAAKA,EAEVnX,KAAKmM,QAAS,CACjB,CAEDiL,UAAUtd,GAA0B,GAChC,GAAIA,IAAUkG,KAAKmM,OACf,OAEJ,MAAMkL,EAAYrX,KAAKmM,OAGvB,GAFAnM,KAAKmM,OAASrS,EACdkG,KAAKmX,GAAGG,gBACM,IAAVxd,GAAmBkG,KAAKmX,GAAGvhB,QAAQkU,QAAS,CAC5C,MAAMyN,EAAYvX,KAAKmX,GAAGjjB,IAAIsjB,cAAc,MAAMxX,KAAKmX,GAAGvhB,QAAQ8T,QAAQyC,UACtEoL,GACAA,EAAUE,eAAe,CAACC,MAAO,WAExC,CACD1X,KAAKmX,GAAGQ,KAAK,uBAAwB3X,KAAKmM,OAAQkL,EACrD,CAKDnX,IAAIxL,GACA,MAAMiX,EAAMjX,EAAKE,KAAI,CAACiX,EAAgB/R,KAClC,MAAM0P,EAAiBxJ,KAAKmX,GAAG/hB,QAAQqhB,SAAS3c,GAChD,OAAO2b,EAAa5J,EAAMrC,EAAe,IAE7CxJ,KAAKmX,GAAGziB,KAAKA,KAAK0G,KAAKuQ,GAGlB3L,KAAKmX,GAAGziB,KAAKA,KAAK6C,SACnByI,KAAKmX,GAAGS,SAAU,GAEtB5X,KAAKmX,GAAGU,QAAO,EAClB,CAKDC,OAAOC,GACH,IAAIlkB,MAAMC,QAAQikB,GAQd,OAAO/X,KAAK8X,OAAO,CAACC,IAPpB/X,KAAKmX,GAAGziB,KAAKA,KAAOsL,KAAKmX,GAAGziB,KAAKA,KAAK2M,QAAO,CAAC2W,EAAkBle,KAAmBie,EAAOtjB,SAASqF,KAE7FkG,KAAKmX,GAAGziB,KAAKA,KAAK6C,SACpByI,KAAKmX,GAAGS,SAAU,GAEtB5X,KAAKmX,GAAGU,QAAO,EAItB,CAMDI,aAAa3iB,EAAqBiB,GAG9B,OAAOyJ,KAAKmX,GAAGziB,KAAKA,KAAKwjB,WACpBvM,IAAqBA,EAAIrW,GAAaN,MAAQ+V,OAAOY,EAAIrW,GAAaZ,OAAOuB,cAAcxB,SAASsW,OAAOxU,GAAON,gBAE1H,CAKDkiB,QAAQ7iB,EAAqBiB,GAEzB,MAAMuD,EAAQkG,KAAKiY,aAAa3iB,EAAaiB,GAE7C,GAAIuD,EAAQ,EACR,MAAO,CACHA,OAAQ,EACR6R,IAAK,KACLyM,KAAM,IAId,MAAMzM,EAAM3L,KAAKmX,GAAGziB,KAAKA,KAAKoF,GAExBse,EAAOzM,EAAI/W,KAAKiX,GAAmBA,EAAKnX,OAE9C,MAAO,CACHoF,QACA6R,MACAyM,OAEP,CAKDC,UAAUN,EAAgBrjB,GACtB,MAAMiX,EAAMjX,EAAKE,KAAI,CAACiX,EAAqB/R,KACvC,MAAM0P,EAAiBxJ,KAAKmX,GAAG/hB,QAAQqhB,SAAS3c,GAChD,OAAO2b,EAAa5J,EAAMrC,EAAe,IAE7CxJ,KAAKmX,GAAGziB,KAAKA,KAAK+C,OAAOsgB,EAAQ,EAAGpM,GACpC3L,KAAKmX,GAAGU,QAAO,EAClB,QC5GQS,EAOT5C,YAAYyB,GACRnX,KAAKmX,GAAKA,EACVnX,KAAK4F,MACR,CAEDA,QACK5F,KAAKyW,SAAUzW,KAAKuY,QCbK,EAACC,EAAgB,GAAItC,EAAaC,KAEhE,IAAI/gB,EAA8C,GAC9C0R,GAAwD,EAC5D,MAAM4D,EAA4C,GA2GlD,OAvGA8N,EAAcpiB,SAAQ1B,KAGMb,MAAMC,QAAQY,EAAKqjB,QAAUrjB,EAAKqjB,OAAS,CAACrjB,EAAKqjB,SAEzD3hB,SAASqiB,IAChBrjB,EAAQqjB,KACTrjB,EAAQqjB,GAAY,CAChB/W,KAAMhN,EAAKgN,MAAQwU,EACnBrM,UAAU,EACVM,YAAY,IAGpB,MAAMD,EAAS9U,EAAQqjB,GAGnB/jB,EAAKuX,SACL/B,EAAO+B,OAASvX,EAAKuX,QAGrBvX,EAAKiV,OACLO,EAAOP,OAASjV,EAAKiV,OACA,SAAdjV,EAAKgN,OACZwI,EAAOP,OAASwM,GAGhBzhB,EAAKsX,YACL9B,EAAO8B,UAAYtX,EAAKsX,WAGxBtX,EAAK0V,cACLF,EAAOE,YAAc1V,EAAK0V,aAG1B1V,EAAKma,SACL3E,EAAO2E,OAASna,EAAKma,SAGH,IAAlBna,EAAKmV,SACLK,EAAOL,UAAW,GAEdnV,EAAKgkB,UACLxO,EAAOwO,QAAUhkB,EAAKgkB,SAEtBhkB,EAAKikB,YACLzO,EAAOyO,UAAYjkB,EAAKikB,aAIR,IAApBjkB,EAAKyV,WACLD,EAAOC,YAAa,EAEhBzV,EAAKkkB,cACL1O,EAAO0O,YAAclkB,EAAKkkB,cAI9B1O,EAAOC,YAAcD,EAAOL,gBACU,IAA3BnV,EAAKmkB,oBACZ3O,EAAO2O,kBAAoBnkB,EAAKmkB,mBAIpCnkB,EAAKa,SACL2U,EAAO3U,QAAS,GAGhBb,EAAK2M,SACL6I,EAAO7I,OAAS3M,EAAK2M,QAGrB3M,EAAKokB,eACL5O,EAAO4O,aAAepkB,EAAKokB,cAG3BpkB,EAAKoS,OACDpS,EAAK2M,OACLqJ,EAAQ+N,GAAY/jB,EAAKoS,KAGzBA,EAAO,CAACoD,OAAQuO,EACZlO,IAAK7V,EAAKoS,YAIkB,IAA7BpS,EAAKqkB,sBACZ7O,EAAO6O,oBAAsBrkB,EAAKqkB,oBACrC,GAEH,IAKN3jB,EAAUA,EAAQR,KAAIsV,GAAUA,GAE5B,CAACxI,KAAMwU,EACHvM,OAAwB,SAAhBuM,EAAyBC,OAAgBvV,EACjDiJ,UAAU,EACVM,YAAY,KAIb,CACH/U,EAAS,CAACsV,UACN5D,OACA+D,OALO,IAMd,EDtGkCmO,CAAmBhZ,KAAKmX,GAAGvhB,QAAQR,QAAS4K,KAAKmX,GAAGvhB,QAAQ8L,KAAM1B,KAAKmX,GAAGvhB,QAAQ+T,OACpH,CAKDlP,KAAKrF,GACD,GAAuB,IAAnBA,EAAQmC,OAAc,CAEtB,MAAM6gB,EAAOpY,KAAKmX,GAAGziB,KAAK6U,SAAS3U,KAAI,CAACqkB,EAAuBnf,IAAkBA,IAE3EmV,EAAI7Z,EAAQ,GACZiY,EAAIjY,EAAQ,GACZ8jB,EAAId,EAAK/K,GAIf,OAHA+K,EAAK/K,GAAK+K,EAAKnJ,GACfmJ,EAAKnJ,GAAKiK,EAEHlZ,KAAK6V,MAAMuC,EACrB,CACJ,CAKDvC,MAAMzgB,GAEF4K,KAAKmX,GAAGziB,KAAK6U,SAAWnU,EAAQR,KAAKkF,GAAkBkG,KAAKmX,GAAGziB,KAAK6U,SAASzP,KAC7EkG,KAAKmX,GAAGziB,KAAKA,KAAOsL,KAAKmX,GAAGziB,KAAKA,KAAKE,KACjC+W,GAAoBvW,EAAQR,KAAKkF,GAAkB6R,EAAI7R,OAE5DkG,KAAKyW,SAAWrhB,EAAQR,KACnBkF,GAAkBkG,KAAKyW,SAAS3c,KAIrCkG,KAAKmX,GAAGU,QACX,CAKDsB,KAAK/jB,GACIA,EAAQmC,SAGbnC,EAAQgB,SAAS0D,IACRkG,KAAKyW,SAAS3c,KACfkG,KAAKyW,SAAS3c,GAAS,CACnB4H,KAAM,WAGC1B,KAAKyW,SAAS3c,GACtBvE,QAAS,CAAI,IAGxByK,KAAKmX,GAAGU,SACX,CAKDuB,KAAKhkB,GACIA,EAAQmC,SAGbnC,EAAQgB,SAAS0D,IACRkG,KAAKyW,SAAS3c,KACfkG,KAAKyW,SAAS3c,GAAS,CACnB4H,KAAM,SACNmI,UAAU,WAGH7J,KAAKyW,SAAS3c,GACfvE,MAAM,IAGxByK,KAAKmX,GAAGU,SACX,CAKDwB,QAAQjkB,GAKJ,YAHgBwL,IAAZxL,IACAA,EAAU,IAAIvB,MAAMmM,KAAKmX,GAAGziB,KAAK6U,SAAShS,QAAQ4E,SAElDtI,MAAMC,QAAQsB,GACPA,EAAQR,KAAIkF,IAAUkG,KAAKyW,SAAS3c,IAAQvE,UAE/CyK,KAAKyW,SAASrhB,IAAUG,MAEnC,CAKD2K,IAAIxL,GACA,MAAM4kB,EAAoBtZ,KAAKmX,GAAGziB,KAAK6U,SAAShS,OAUhD,GATAyI,KAAKmX,GAAGziB,KAAK6U,SAAWvJ,KAAKmX,GAAGziB,KAAK6U,SAASlO,OAAO,CAAC0a,EAAerhB,EAAKuV,WAC1EjK,KAAKmX,GAAGziB,KAAKA,KAAOsL,KAAKmX,GAAGziB,KAAKA,KAAKE,KAClC,CAAC+W,EAAiB7R,IAAkB6R,EAAItQ,OAAO,CAACoa,EAAa/gB,EAAKA,KAAKoF,GAAQpF,OAEnFsL,KAAKyW,SAAS6C,GAAqB,CAC/B5X,KAAMhN,EAAKgN,MAAQ,SACnBmI,UAAU,EACVM,YAAY,GAEZzV,EAAKgN,MAAQhN,EAAKiV,QAAUjV,EAAKmV,UAAYnV,EAAKuX,QAAUvX,EAAK2M,OAAQ,CACzE,MAAM6I,EAASlK,KAAKyW,SAAS6C,GAEzB5kB,EAAKuX,SACL/B,EAAO+B,OAASvX,EAAKuX,QAGrBvX,EAAKiV,SACLO,EAAOP,OAASjV,EAAKiV,QAGrBjV,EAAKsX,YACL9B,EAAO8B,UAAYtX,EAAKsX,WAGxBtX,EAAK0V,cACLF,EAAOE,YAAc1V,EAAK0V,aAG1B1V,EAAKma,SACL3E,EAAO2E,OAASna,EAAKma,SAGH,IAAlBna,EAAKmV,SACLK,EAAOL,UAAW,GAEdnV,EAAKgkB,UACLxO,EAAOwO,QAAUhkB,EAAKgkB,SAEtBhkB,EAAKikB,YACLzO,EAAOyO,UAAYjkB,EAAKikB,aAIR,IAApBjkB,EAAKyV,WACLD,EAAOC,YAAa,EAEhBzV,EAAKkkB,cACL1O,EAAO0O,YAAclkB,EAAKkkB,cAI9B1O,EAAOC,YAAcD,EAAOL,WACxBnV,EAAKmkB,oBACL3O,EAAO2O,kBAAoBnkB,EAAKmkB,mBAIpCnkB,EAAKa,SACL2U,EAAO3U,QAAS,GAGhBb,EAAK2M,SACL6I,EAAO7I,OAAS3M,EAAK2M,QAGrB3M,EAAKokB,eACL5O,EAAO4O,aAAepkB,EAAKokB,aAElC,CACD9Y,KAAKmX,GAAGU,QAAO,EAClB,CAKDC,OAAO1iB,GACH,IAAIvB,MAAMC,QAAQsB,GAOd,OAAO4K,KAAK8X,OAAO,CAAC1iB,IANpB4K,KAAKmX,GAAGziB,KAAK6U,SAAWvJ,KAAKmX,GAAGziB,KAAK6U,SAASlI,QAAO,CAACkY,EAA0Bzf,KAAmB1E,EAAQX,SAASqF,KACpHkG,KAAKmX,GAAGziB,KAAKA,KAAOsL,KAAKmX,GAAGziB,KAAKA,KAAKE,KACjC+W,GAAoBA,EAAItK,QAAO,CAACuV,EAAiB9c,KAAmB1E,EAAQX,SAASqF,OAE1FkG,KAAKmX,GAAGU,QAAO,EAItB,CAKDxW,OAAO6I,EAAgBtE,GAAO,GAE1B,IAAK5F,KAAKyW,SAASvM,IAAS7I,QAAQ9J,OAEhC,OAGJ,MAAMiiB,EAAgBxZ,KAAKuY,OAAO7N,QAAQR,GAC1C,IAAIuP,EACJ,GAAID,EAAe,CACf,IAAIE,GAAa,EACjBD,EAAiBzZ,KAAKyW,SAASvM,GAAQ7I,OAAOsU,MAAMtU,KAC5CqY,IAGArY,IAAWmY,IACXE,GAAa,IAEV,IAEd,KAAM,CACH,MAAMrY,EAASrB,KAAKyW,SAASvM,GAAQ7I,OACrCoY,EAAiBpY,EAASA,EAAO,QAAKT,CACzC,CAEG6Y,EACAzZ,KAAKuY,OAAO7N,QAAQR,GAAUuP,EACvBD,IACPxZ,KAAKuY,OAAO7N,QAAQR,QAAUtJ,GAElCZ,KAAKmX,GAAGwC,aAAe,EACvB3Z,KAAKmX,GAAGU,SAEHjS,GACD5F,KAAKmX,GAAGQ,KAAK,mBAAoBzN,EAAQuP,EAEhD,CAKD3S,KAAKhN,EAAeyQ,EAA+C3E,GAAO,GACtE,MAAMsE,EAASlK,KAAKyW,SAAS3c,GAM7B,GAJK8L,GACD5F,KAAKmX,GAAGQ,KAAK,oBAAqB7d,EAAOyQ,IAGxCA,EAAK,CACN,MAAMqP,KAAa5Z,KAAKuY,OAAOzR,MAAQ9G,KAAKuY,OAAOzR,KAAKoD,SAAWpQ,IAAQkG,KAAKuY,OAAOzR,MAAMyD,IACvFuO,EAAe5O,GAAQ4O,cAAgB,CAAC,MAAO,QACrD,GAAKc,EAEE,CACH,MAAMC,EAAkBf,EAAarV,QAAQmW,GAEzCrP,GADqB,IAArBsP,EACMf,EAAa,IAAM,MAClBe,IAAoBf,EAAavhB,OAAQ,EAC1CuhB,EAAa,GAEbA,EAAae,EAAkB,EAE5C,MAVGtP,EAAMuO,EAAavhB,OAASuhB,EAAa,GAAK,KAYrD,CAED,MAAMgB,IAAW,CAAC,SAAU,QAAQrlB,SAASyV,EAAOxI,OAChD,IAAIqY,KAAKC,SAAS9P,EAAO2E,QAAU7O,KAAKmX,GAAGvhB,QAAQiZ,OAAQ,CACvDoL,MAAO,OACPvB,QAASxO,EAAOwO,SAAW1Y,KAAKmX,GAAGvhB,QAAQ8iB,QAC3CC,UAAWzO,EAAOyO,WAAa3Y,KAAKmX,GAAGvhB,QAAQ+iB,UAC/CE,kBAAmB3O,EAAO2O,mBAAoB7Y,KAAKmX,GAAGvhB,QAAQijB,oBAItE7Y,KAAKmX,GAAGziB,KAAKA,KAAKoS,MAAK,CAACoT,EAAkBC,KACtC,IAAIC,EAASF,EAAKpgB,GAAO+b,OAASqE,EAAKpgB,GAAOpF,KAC1C2lB,EAASF,EAAKrgB,GAAO+b,OAASsE,EAAKrgB,GAAOpF,KAC9C,GAAY,SAAR6V,EAAgB,CAChB,MAAM+P,EAAOF,EACbA,EAASC,EACTA,EAASC,CACZ,CACD,OAAIR,EACOA,EAASS,QAAQxP,OAAOqP,GAASrP,OAAOsP,IAE/CD,EAASC,GACD,EACDD,EAASC,EACT,EAEJ,CAAC,IAGZra,KAAKuY,OAAOzR,KAAO,CAACoD,OAAQpQ,EACxByQ,OACAvK,KAAKmX,GAAGqD,eAAejjB,QACvByI,KAAKmX,GAAGsD,YAAYza,KAAKmX,GAAGqD,gBAC5Bxa,KAAKmX,GAAGQ,KAAK,iBAAkB7d,EAAOyQ,IAC9B3E,IACR5F,KAAKmX,GAAGwC,aAAe,EACvB3Z,KAAKmX,GAAGU,SACR7X,KAAKmX,GAAGQ,KAAK,iBAAkB7d,EAAOyQ,GAE7C,CAMDmQ,iBACI,MAAMC,EAAiB3a,KAAKmX,GAAGziB,KAAK6U,SAASlI,QAAO,CAAC4I,EAAyBnQ,KAAmBkG,KAAKyW,SAAS3c,IAAQvE,SACvH,IAAKyK,KAAKmX,GAAGvhB,QAAQkU,QAAQvS,QAAUyI,KAAKmX,GAAGvhB,QAAQglB,eAAiBD,GAAgBpjB,OAAQ,CAE5FyI,KAAKuY,OAAO1N,OAAS,GACrB,MAAMgQ,EAAoG,CACtGC,UAAU,GAId,GAAI9a,KAAKmX,GAAGvhB,QAAQyV,QAAUrL,KAAKmX,GAAGvhB,QAAQ0V,OAAQ,CAE9CtL,KAAKmX,GAAGvhB,QAAQkU,QAAQvS,SACxBsjB,EAAc7Q,cAAe,GAE7BhK,KAAKmX,GAAG4D,WAER/a,KAAKmX,GAAG4D,UAAUC,cAAcphB,YAAYoG,KAAKmX,GAAG4D,WAIxDF,EAAc9Q,gBAAiB,EAC/B/J,KAAKmX,GAAGG,aAAauD,GAErB,MAAMI,EAA6CpnB,MAAMgG,KAAKmG,KAAKmX,GAAGjjB,IAAIsjB,cAAc,iBAAiB0D,mBAAmB7E,iBAAiB,OAAS,IACtJ,IAAI8E,EAAa,EACjB,MAAMC,EAAuBpb,KAAKmX,GAAGziB,KAAK6U,SAAS3U,KAAI,CAAC2kB,EAA0Bzf,KAC9E,GAAIkG,KAAKyW,SAAS3c,IAAQvE,OACtB,OAAO,EAEX,MAAM8lB,EAAQJ,EAAkBE,GAAYG,YAE5C,OADAH,GAAc,EACPE,CAAK,IAGVE,EAAmBH,EAAqBI,QAC1C,CAACC,EAAOC,IAAcD,EAAQC,GAC9B,GAEJ1b,KAAKuY,OAAO1N,OAASuQ,EAAqBxmB,KAAI8mB,GAAaA,EAAYH,EAAmB,KAE7F,KAAM,CACHV,EAAcpP,cAAe,EAC7BzL,KAAKmX,GAAGG,aAAauD,GAErB,MAAMI,EAA4CpnB,MAAMgG,KAAKmG,KAAKmX,GAAGjjB,IAAIsjB,cAAc,iBAAiB0D,mBAAmB7E,iBAAiB,OAAS,IACrJ,IAAI8E,EAAa,EACjB,MAAMC,EAAuBpb,KAAKmX,GAAGziB,KAAK6U,SAAS3U,KAAI,CAAC2kB,EAA0Bzf,KAC9E,GAAIkG,KAAKyW,SAAS3c,IAAQvE,OACtB,OAAO,EAEX,MAAM8lB,EAAQJ,EAAkBE,GAAYG,YAE5C,OADAH,GAAc,EACPE,CAAK,IAGVE,EAAmBH,EAAqBI,QAC1C,CAACC,EAAOC,IAAcD,EAAQC,GAC9B,GAEJ1b,KAAKuY,OAAO1N,OAASuQ,EAAqBxmB,KAAI8mB,GAAaA,EAAYH,EAAmB,KAC7F,CAEDvb,KAAKmX,GAAGG,cACX,CACJ,EE9XE,MCIMqE,EAAwC,CAEjD9R,UAAU,EACVgF,OAAQ,KACR6J,SAAS,EACTC,UAAW,QAGXxO,YAAY,EACZyO,YAAa,OACbC,mBAAmB,EACnB+C,aAAa,EACb7C,oBAAqB,GACrB8C,qBAAsB,IACtBC,WAAW,EAGXpnB,KAAM,CAAE,EACRgN,KAAM,OACNiI,OAAQ,aACRvU,QAAS,GAGT2mB,QAAQ,EACRC,QAAS,GACTC,cAAe,CAAC,EAAG,GAAI,GAAI,GAAI,IAC/BC,UAAU,EACVC,WAAW,EACXC,SAAU,IACVC,SAAU,IACVC,UAAW,IACXC,SAAU,IACVC,aAAc,IACdC,eAAe,EACfC,WAAY,EAEZ5S,QAAS,GAET8Q,cAAc,EACd+B,aAAa,EAEbrR,QAAQ,EACRD,QAAQ,EACRzB,cAAc,EAEdgT,eAAe,EACfpR,UAAU,EAGVqR,aAAa,EACbtR,WAAW,EACXuR,aAAa,EACbC,eAAgB,CACZtmB,cAAc,GAIlBumB,OAAQ,CACJC,YAAa,YACbC,YAAa,sBACblB,QAAS,mBACTmB,UAAW,cACXC,OAAQ,mBACRC,UAAW,qCACXllB,KAAM,8CAIVmlB,SDxE0B,CAAC1nB,EAAS1B,IAAQ,eAAe0B,EAAQ8T,QAAQ6T,cAE3E3nB,EAAQmmB,QAAUnmB,EAAQqmB,cACtB,eAAermB,EAAQ8T,QAAQ8T,mEAEN5nB,EAAQ8T,QAAQ+O,uBAAuB7iB,EAAQonB,OAAOhB,gDAG/E,WAGJpmB,EAAQuU,WACJ,eAAevU,EAAQ8T,QAAQ+T,uCACX7nB,EAAQ8T,QAAQnH,uBAAuB3M,EAAQonB,OAAOC,qCAAqCrnB,EAAQonB,OAAOE,eAAehpB,EAAIoH,GAAK,mBAAmBpH,EAAIoH,MAAQ,sBAErL,2BAGM1F,EAAQ8T,QAAQgU,aAAa9nB,EAAQkU,QAAQvS,OAAS,mBAAmB3B,EAAQkU,8BAAgC,0BACjHlU,EAAQ8T,QAAQiU,iBAE1B/nB,EAAQmmB,OACJ,eAAenmB,EAAQ8T,QAAQvR,eAC/B,uBAEUvC,EAAQ8T,QAAQkU,6BCkD9BlU,QAAS,CACLmU,OAAQ,mBACRrT,UAAW,sBACXmT,OAAQ,mBACRD,UAAW,sBACXvR,OAAQ,mBACR1B,WAAY,uBACZqT,SAAU,qBACVN,SAAU,qBACVO,SAAU,qBACV1c,OAAQ,mBACRsJ,aAAc,0BACdqT,MAAO,kBACPC,gBAAiB,4BACjB1oB,OAAQ,mBACR4C,KAAM,iBACNoK,MAAO,kBACP2b,QAAS,oBACTN,WAAY,uBACZO,eAAgB,4BAChBC,mBAAoB,iCACpBC,uBAAwB,sCACxBZ,OAAQ,mBACRhF,SAAU,qBACVzN,OAAQ,mBACRU,MAAO,kBACP6R,IAAK,gBACLe,QAAS,sBCrCXF,EAAqB,CAACG,EAAcC,EAAe5oB,EAAiC6oB,EAA8C,CAAA,KAA0B,CAC9JzqB,SAAU,KACVkC,WAAY,CACRmU,MACCoU,EAAMZ,SAAWY,EAAMlpB,OACpB,GAAGK,EAAQ8T,QAAQ0U,sBAAsBxoB,EAAQ8T,QAAQmU,SACzDY,EAAMlpB,OACF,GAAGK,EAAQ8T,QAAQ0U,sBAAsBxoB,EAAQ8T,QAAQnU,UAAUK,EAAQ8T,QAAQoU,WACnFloB,EAAQ8T,QAAQ0U,oBAE5BzpB,WAAY,CACR,CACIX,SAAU,SACVkC,WAAY,CACR,YAAa6U,OAAOwT,GACpBlU,MAAOzU,EAAQ8T,QAAQ2U,uBACvB,aAAczoB,EAAQonB,OAAOG,UAAUloB,QAAQ,SAAU8V,OAAOwT,KAEpE5pB,WAAY,CACR,CACIX,SAAU,QACVU,KAAM8pB,QAObE,EAAwB,CAACC,EAAsBC,EAAqBC,EAAqBC,EAAoBlpB,KAEtH,IAAImpB,EAAqC,GAQzC,GALInpB,EAAQumB,WACR4C,EAAe3jB,KAAKgjB,EAAmB,EAAGxoB,EAAQ0mB,UAAW1mB,IAI7DA,EAAQsmB,SAAU,CAClB,MAAM8C,EAAOL,EAAc,EAAIE,EAAc,EAC7CE,EAAe3jB,KAAKgjB,EAAmBY,EAAMppB,EAAQwmB,SAAUxmB,EAAS,CAACL,OAAQopB,IACpF,CAED,IAAIM,EAAQ,IAAIprB,MAAMirB,GAAY3iB,QAAQvH,KAAIkF,GAASskB,EAAmBtkB,EAAM,EAAGiR,OAAOjR,EAAM,GAAIlE,EAAS,CAACioB,OAAS/jB,IAAW+kB,EAAY,MAiB9I,GAfIjpB,EAAQ6mB,gBAERwC,EA5GS,EAACC,EAAwCL,EAAqBM,EAAqBvpB,KAChG,MAAM8mB,EAAa9mB,EAAQ8mB,WACrBhT,EAAU9T,EAAQ8T,QAClB8S,EAAe5mB,EAAQ4mB,aAEvB4C,EAAmB,EAAI1C,EAC7B,IAAI2C,EAAeR,EAAcnC,EAC7B4C,EAAWT,EAAcnC,EAEzBmC,EAAc,EAAInC,EAAa0C,EAC/BE,EAAW,EAAIF,EACRP,EAAcM,GAAe,EAAIzC,EAAa0C,KACrDC,EAAeF,GAAe,EAAIC,IAEtC,MAAMG,EAAiD,GACvD,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAaK,IAC9B,GAAI,GAAKA,GAAKA,GAAKL,GAAgBK,GAAKH,GAAgBG,GAAKF,EAAW,CACpE,MAAM9jB,EAAK0jB,EAAoBM,EAAI,GACnCD,EAA4BnkB,KAAKI,EACpC,CAEL,IAAIikB,EACJ,MAAMC,EAAiC,GAmCvC,OAlCAH,EAA4BnpB,SAAQoF,IAChC,MAAMmkB,EAAa7J,SAAUta,EAAG7G,WAAW,GAAuBuB,WAAW,aAAc,IAC3F,GAAIupB,EAAY,CACZ,MAAMG,EAAqB9J,SAAU2J,EAAW9qB,WAAW,GAAuBuB,WAAW,aAAc,IAC3G,GAAIypB,EAAaC,GAAsB,EACnCF,EAAYtkB,KAAK8jB,EAAoBU,SAClC,GAAID,EAAaC,GAAsB,EAAG,CAC7C,MAAMC,EAAyB,CAC3B7rB,SAAU,KACVkC,WAAY,CACRmU,MAAO,GAAGX,EAAQ0U,sBAAsB1U,EAAQqU,YAAYrU,EAAQoU,YAExEnpB,WAAY,CACR,CACIX,SAAU,SACVkC,WAAY,CACRmU,MAAOX,EAAQ2U,wBAEnB1pB,WAAY,CACR,CACIX,SAAU,QACVU,KAAM8nB,OAM1BkD,EAAYtkB,KAAKykB,EACpB,CACJ,CACDH,EAAYtkB,KAAKI,GACjBikB,EAAajkB,CAAE,IAGZkkB,CAAW,EAmDNI,CACJb,EACAJ,EACAC,EACAlpB,IAMRmpB,EAAiBA,EAAe1jB,OAAO4jB,GAGnCrpB,EAAQsmB,SAAU,CAClB,MAAM6D,EAAOnB,EAAaE,EAAaD,EAAc,EACrDE,EAAe3jB,KAAKgjB,EAAmB2B,EAAMnqB,EAAQymB,SAAUzmB,EAAS,CAACL,OAAQqpB,IACpF,CAGGhpB,EAAQumB,WACR4C,EAAe3jB,KAAKgjB,EAAmBU,EAAYlpB,EAAQ2mB,SAAU3mB,IAWzE,MARgC,CAC5B5B,SAAU,KACVkC,WAAY,CACRmU,MAAOzU,EAAQ8T,QAAQyU,gBAE3BxpB,WAAYsqB,EAAM1nB,OAAS,EAAIwnB,EAAiB,GAGxC,ECm6Bf9rB,EAAA,kBA39BGyiB,YAAYhK,EAAkC9V,EAA4B,IAGtE,MAAM1B,EAAuB,iBAAVwX,EACfvX,SAASqjB,cAAc9L,GACvBA,EAEAxX,aAAe8rB,iBACfhgB,KAAK9L,IAAMA,GAEX8L,KAAK9L,IAAMC,SAASJ,cAAc,SAClCG,EAAIsC,YAAYwJ,KAAK9L,MAGzB,MAAM6oB,EAAiB,IAChBpB,EAAcoB,kBACdnnB,EAAQmnB,gBAGTC,EAAS,IACRrB,EAAcqB,UACdpnB,EAAQonB,QAGTtT,EAAU,IACTiS,EAAcjS,WACd9T,EAAQ8T,SAIf1J,KAAKpK,QAAU,IACR+lB,KACA/lB,EACHmnB,iBACAC,SACAtT,WAGJ1J,KAAKigB,kBAAoBjgB,KAAKpK,QAAQgmB,YAAc5b,KAAK9L,IAAIG,UAAY,GAErE2L,KAAKpK,QAAQ4V,SACbxL,KAAK9L,IAAIsX,SAAWxL,KAAKpK,QAAQ4V,SAC1BxL,KAAKpK,QAAQgnB,gBAAwC,IAAvB5c,KAAK9L,IAAIsX,WAC9CxL,KAAK9L,IAAIsX,SAAW,GAGxBxL,KAAKkgB,WAAa,CACdC,SAAU,IAAMngB,KAAKogB,aAGzBpgB,KAAKqgB,IAAM,IAAIrX,EAAQhJ,KAAKpK,QAAQmnB,gBAAkB,CAAA,GAEtD/c,KAAKsgB,aAAc,EACnBtgB,KAAKugB,QAAU,GAEfvgB,KAAK2Z,aAAe,EACpB3Z,KAAK2e,aAAc,EACnB3e,KAAKwgB,aAAc,EACnBxgB,KAAK4X,SAAU,EACf5X,KAAKwa,eAAiB,GAEtBxa,KAAK4F,MACR,CAKDA,OACI,GAAI5F,KAAKsgB,aAAetgB,KAAK9L,IAAIusB,UAAUC,SAAS1gB,KAAKpK,QAAQ8T,QAAQgC,OACrE,OAAO,EAGX1L,KAAK2gB,YAAcnf,EAAUxB,KAAK9L,IAAK8L,KAAKpK,QAAQmnB,gBAAkB,CAAA,GAEtE/c,KAAK4gB,iBAAmB,IAAI5gB,KAAK2gB,YAAYzqB,YAE7C8J,KAAKmL,KAAO,IAAI+L,EAAKlX,MACrBA,KAAK5K,QAAU,IAAIkjB,EAAQtY,MAE3BA,KAAKtL,KAAOshB,EAAchW,KAAKpK,QAAQlB,KAAMsL,KAAK9L,IAAK8L,KAAK5K,QAAQqhB,SAAUzW,KAAKpK,QAAQ8L,KAAM1B,KAAKpK,QAAQ+T,QAE9G3J,KAAK6gB,UAELC,YAAW,KACP9gB,KAAK2X,KAAK,kBACV3X,KAAKsgB,aAAc,CAAI,GACxB,GACN,CAMDO,UAGI7gB,KAAK+gB,WAAahtB,EAAc,MAAO,CACnCsW,MAAO,GAAGrK,KAAKpK,QAAQ8T,QAAQ4U,WAAWte,KAAKpK,QAAQ8T,QAAQwU,YAGnEle,KAAK+gB,WAAW1sB,UAAY2L,KAAKpK,QAAQ0nB,SAAStd,KAAKpK,QAASoK,KAAK9L,KAErE,MAAMukB,EAAWzY,KAAK+gB,WAAWvJ,cAAc,UAAUxX,KAAKpK,QAAQ8T,QAAQ+O,YAG1EA,GAAYzY,KAAKpK,QAAQmmB,QAAU/b,KAAKpK,QAAQqmB,cAGhDjc,KAAKpK,QAAQqmB,cAAc7lB,SAAS4qB,IAChC,MAAOC,EAAK/tB,GAAOW,MAAMC,QAAQktB,GAAU,CAACA,EAAO,GAAIA,EAAO,IAAM,CAACjW,OAAOiW,GAASA,GAC/E7pB,EAAWjE,IAAQ8M,KAAKpK,QAAQomB,QAChCkF,EAAS,IAAIC,OAAOF,EAAKlW,OAAO7X,GAAMiE,EAAUA,GACtDshB,EAASjiB,YAAY0qB,EAAO,IAGzBzI,GACPA,EAASuC,cAAcphB,YAAY6e,GAGvCzY,KAAKohB,aAAephB,KAAK+gB,WAAWvJ,cAAc,IAAIxX,KAAKpK,QAAQ8T,QAAQgU,aAE3E1d,KAAKqhB,WAAa,GAClBxtB,MAAMgG,KAAKmG,KAAK+gB,WAAW1K,iBAAiB,IAAIrW,KAAKpK,QAAQ8T,QAAQkU,eAAexnB,SAAQ8E,IAClFA,aAAcomB,cAIpBpmB,EAAG7G,UAAY,cAAc2L,KAAKpK,QAAQ8T,QAAQyU,wBAClDne,KAAKqhB,WAAWjmB,KAAKF,EAAGggB,mBAAiC,IAG7Dlb,KAAKuhB,iBAAmB,CACpBvtB,SAAU,KACVkC,WAAY,CACRmU,MAAOrK,KAAKpK,QAAQ8T,QAAQyU,iBAKpCne,KAAKwhB,OAASxhB,KAAK+gB,WAAWvJ,cAAc,IAAIxX,KAAKpK,QAAQ8T,QAAQvR,QAGrE6H,KAAK9L,IAAI8mB,cAAcxhB,aAAawG,KAAK+gB,WAAY/gB,KAAK9L,KAC1D8L,KAAKohB,aAAa5qB,YAAYwJ,KAAK9L,KAGnC8L,KAAKyhB,MAAQzhB,KAAK9L,IAAIwtB,wBAGtB1hB,KAAK2hB,aAKA3hB,KAAKpK,QAAQyV,QACdrL,KAAK+gB,WAAWN,UAAUvgB,IAAI,aAG7BF,KAAKpK,QAAQ0V,QACdtL,KAAK+gB,WAAWN,UAAUvgB,IAAI,aAG9BF,KAAKpK,QAAQiU,UACb7J,KAAK+gB,WAAWN,UAAUvgB,IAAI,YAG9BF,KAAKpK,QAAQuU,YACbnK,KAAK+gB,WAAWN,UAAUvgB,IAAI,cAG9BF,KAAKpK,QAAQ+mB,aACb3c,KAAK+gB,WAAWN,UAAUvgB,IAAI,gBAG9BF,KAAKpK,QAAQglB,cACb5a,KAAK+gB,WAAWN,UAAUvgB,IAAI,iBAGlCF,KAAK4hB,cAED5hB,KAAK5K,QAAQmjB,OAAOzR,MACpB9G,KAAK5K,QAAQ0R,KAAK9G,KAAK5K,QAAQmjB,OAAOzR,KAAKoD,OAAQlK,KAAK5K,QAAQmjB,OAAOzR,KAAKyD,KAAK,GAGrFvK,KAAK6X,QAAO,EACf,CAEDP,aAAauD,EAA8B,IACvC,IAAIgH,EAAgB5W,EAChBjL,KAAK4gB,iBACL5gB,KAAKtL,KAAK6U,UACTvJ,KAAKpK,QAAQmmB,QAAU/b,KAAKwa,eAAejjB,QAAUyI,KAAK5K,QAAQmjB,OAAO7N,QAAQnT,SAAWyI,KAAK2Z,cAAgB3Z,KAAKif,MAAM1nB,SAAWsjB,EAAcC,SAClJ9a,KAAKif,MAAMjf,KAAK2Z,aAAe,GAC/B3Z,KAAKtL,KAAKA,KAAKE,KAAI,CAAC+W,EAAK7R,KAAW,CAChC6R,MACA7R,YAERkG,KAAK5K,QAAQqhB,SACbzW,KAAK5K,QAAQmjB,OACbvY,KAAKmL,KAAKgB,OACVnM,KAAKpK,QACLilB,GAGJ,GAAI7a,KAAKpK,QAAQknB,YAAa,CAC1B,MAAMgF,EAAqD9hB,KAAKpK,QAAQknB,YAAY9c,KAAKtL,KAAMmtB,EAAe,QAC1GC,IACAD,EAAgBC,EAEvB,CACD,MAAMlqB,EAAOoI,KAAKqgB,IAAIzoB,KAAKoI,KAAK2gB,YAAakB,GAC7C7hB,KAAKqgB,IAAI3mB,MAAMsG,KAAK9L,IAAK0D,GACzBoI,KAAK2gB,YAAckB,CACtB,CAMDE,YAAYC,GAAc,GAClBhiB,KAAK4X,SAAW5X,KAAK8e,YACjB9e,KAAK2Z,aAAe3Z,KAAK8e,aACzB9e,KAAK2Z,aAAe,GAIxB3Z,KAAKsX,eAELtX,KAAK2e,YAAoC,IAAtB3e,KAAK2Z,aACxB3Z,KAAK4e,WAAa5e,KAAK2Z,eAAiB3Z,KAAKiiB,UAE7CjiB,KAAKkiB,WAAWliB,KAAKpK,QAAQonB,OAAOI,QAIxC,IAII+E,EAJA7d,EAAU,EAEV0I,EAAI,EACJvZ,EAAI,EAWR,GARIuM,KAAK8e,aACLxa,EAAUtE,KAAK2Z,aAAe,EAC9B3M,EAAI1I,EAAUtE,KAAKpK,QAAQomB,QAC3BvoB,EAAIuZ,EAAIhN,KAAKif,MAAM3a,GAAS/M,OAC5ByV,GAAQ,EACRmV,EAAQniB,KAAKwa,eAAejjB,OAASyI,KAAKoiB,YAAY7qB,OAASyI,KAAKtL,KAAKA,KAAK6C,QAG9EyI,KAAKwhB,QAAUxhB,KAAKpK,QAAQonB,OAAO7kB,KAAKZ,OAAQ,CAEhD,MAAMuK,EAAS9B,KAAKpK,QAAQonB,OAAO7kB,KAC9BlD,QAAQ,UAAW8V,OAAOiC,IAC1B/X,QAAQ,QAAS8V,OAAOtX,IACxBwB,QAAQ,SAAU8V,OAAO/K,KAAK2Z,eAC9B1kB,QAAQ,UAAW8V,OAAO/K,KAAK8e,aAC/B7pB,QAAQ,SAAU8V,OAAOoX,IAE9BniB,KAAKwhB,OAAOntB,UAAY8tB,EAAQrgB,EAAS,EAC5C,CAMD,GAJyB,GAArB9B,KAAK2Z,cACL3Z,KAAK2hB,aAGL3hB,KAAKpK,QAAQgnB,eAAiB5c,KAAK2Z,gBAC9B3Z,KAAKmL,KAAKgB,SAAWnM,KAAKif,MAAMjf,KAAK2Z,aAAa,GAAGhE,MACtDhK,GAAOA,EAAI7R,QAAUkG,KAAKmL,KAAKgB,UACjC,CACE,MAAMhB,EAAOnL,KAAKif,MAAMjf,KAAK2Z,aAAa,GACtCxO,EAAK5T,SACDyqB,EACAhiB,KAAKmL,KAAKiM,UAAUjM,EAAKA,EAAK5T,OAAO,GAAGuC,OAExCkG,KAAKmL,KAAKiM,UAAUjM,EAAK,GAAGrR,OAGvC,CAER,CAKDuoB,gBACI,IAAKriB,KAAKpK,QAAQmmB,OACd,OAEJ,IAAIuG,EAAqB5D,EAAsB1e,KAAK2e,YAAa3e,KAAK4e,WAAY5e,KAAK2Z,aAAc3Z,KAAK8e,WAAY9e,KAAKpK,SAE3H,GAAIoK,KAAKpK,QAAQinB,YAAa,CAC1B,MAAM0F,EAAqDviB,KAAKpK,QAAQinB,YAAY,CAAC7c,KAAK2e,YAAa3e,KAAK4e,WAAY5e,KAAK2Z,aAAc3Z,KAAK8e,YAAawD,GACzJC,IACAD,EAAqBC,EAE5B,CAED,MAAMznB,EAAQkF,KAAKqgB,IAAIzoB,KAAKoI,KAAKuhB,iBAAkBe,GAEnDtiB,KAAKqhB,WAAWjrB,SAASosB,IACrBxiB,KAAKqgB,IAAI3mB,MAAM8oB,EAAU1nB,EAAM,IAGnCkF,KAAKuhB,iBAAmBe,CAC3B,CAIDG,wBACI,MAAM/E,EAAY1d,KAAK9L,IAAI8mB,cACtBhb,KAAK+a,YACN/a,KAAK+a,UAAY5mB,SAASJ,cAAc,OACxCiM,KAAK0iB,kBAAoB,CACrB1uB,SAAU,QAIlB0pB,EAAU1C,cAAchhB,aAAagG,KAAK+a,UAAW2C,GACrD,IAAIiF,EAAoC,CACpC3uB,SAAU,QACVkC,WAAY8J,KAAK4gB,iBACjBjsB,WAAY,CACR,CACIX,SAAU,QACVW,WAAY,CACR2U,EACItJ,KAAKtL,KAAK6U,SAAUvJ,KAAK5K,QAAQqhB,SAAUzW,KAAK5K,QAAQmjB,OAAQvY,KAAKpK,QAAS,CAACoU,cAAc,QAQjH,GADA2Y,EAAgBzsB,WAAWmU,MAAQsY,EAAgBzsB,WAAWmU,MAAQ,GAAGsY,EAAgBzsB,WAAWmU,SAASrK,KAAKpK,QAAQ8T,QAAQgC,QAAU1L,KAAKpK,QAAQ8T,QAAQgC,MAC7J1L,KAAKpK,QAAQknB,YAAa,CAC1B,MAAMgF,EAAqD9hB,KAAKpK,QAAQknB,YAAY9c,KAAKtL,KAAMiuB,EAAiB,UAC5Gb,IACAa,EAAkBb,EAEzB,CAED,MAAMc,EAAsB,CACxB5uB,SAAU,MACVkC,WAAY,CACRmU,MAAOrK,KAAKpK,QAAQ8T,QAAQuU,iBAEhCtpB,WAAY,CAACguB,IAGX/qB,EAAOoI,KAAKqgB,IAAIzoB,KAAKoI,KAAK0iB,kBAAmBE,GACnD5iB,KAAKqgB,IAAI3mB,MAAMsG,KAAK+a,UAAWnjB,GAC/BoI,KAAK0iB,kBAAoBE,EAGzB,MAAMC,EAAe7iB,KAAK+a,UAAUG,kBAAkB4H,YAAc9iB,KAAK9L,IAAI4uB,YAC7E,GAAID,EAAc,CACd,MAAME,EAAyBtW,gBAAgBzM,KAAK0iB,mBACpDK,EAAuB7sB,WAAW0U,MAAQ,kBAAkBiY,OAC5D,MAAMjrB,EAAOoI,KAAKqgB,IAAIzoB,KAAKoI,KAAK0iB,kBAAmBK,GACnD/iB,KAAKqgB,IAAI3mB,MAAMsG,KAAK+a,UAAWnjB,GAC/BoI,KAAK0iB,kBAAoBK,CAC5B,CAEGrF,EAAUsF,aAAetF,EAAUuF,eAEnCvF,EAAU9S,MAAMsY,UAAY,SAEnC,CAMDtB,cAEI,GAAI5hB,KAAKpK,QAAQqmB,cAAe,CAC5B,MAAMxD,EAAWzY,KAAK+gB,WAAWvJ,cAAc,UAAUxX,KAAKpK,QAAQ8T,QAAQ+O,YAC1EA,GAAYA,aAAoB0K,mBAEhC1K,EAAS2K,iBAAiB,UAAU,KAChCpjB,KAAKpK,QAAQomB,QAAUlG,SAAS2C,EAASliB,MAAO,IAChDyJ,KAAK6X,SAEL7X,KAAK2hB,aAEL3hB,KAAK2X,KAAK,oBAAqB3X,KAAKpK,QAAQomB,QAAQ,IACrD,EAEV,CAGGhc,KAAKpK,QAAQuU,YACbnK,KAAK+gB,WAAWqC,iBAAiB,SAAUC,IACvC,MAAMC,EAASD,EAAMC,OACrB,KAAMA,aAAkB1sB,kBAAsB0sB,EAAOtkB,QAAQ,IAAIgB,KAAKpK,QAAQ8T,QAAQnH,UAClF,OAEJ8gB,EAAME,iBAEN,MAAMC,EAAmE,GAmCzE,GAlCqB3vB,MAAMgG,KAAKmG,KAAK+gB,WAAW1K,iBAAiB,IAAIrW,KAAKpK,QAAQ8T,QAAQnH,UAC7ElB,QACTnG,GAAMA,EAAG3E,MAAMgB,SACjBnB,SACE8E,IACI,MAAMuoB,EAAYvoB,EAAGwb,QAAQgN,KAAO1jB,KAAKpK,QAAQkmB,UAE3C6H,EADiBzoB,EAAGwb,QAAQkN,gBAAkB5jB,KAAKpK,QAAQimB,qBAClC3gB,EAAG3E,MAAM0N,MAAMjE,KAAKpK,QAAQimB,sBAAwB,CAAC3gB,EAAG3E,OACnFktB,EACAE,EAAMvtB,SAAQytB,IACN3oB,EAAGwb,QAAQthB,QACXouB,EAASpoB,KAAK,CACVuoB,MAAO,CAACE,GACRzuB,QAAU1B,KAAKC,MAAMuH,EAAGwb,QAAQthB,WAGpCouB,EAASpoB,KAAK,CAACuoB,MAAO,CAACE,GACnBzuB,aAASwL,GAChB,IAGD1F,EAAGwb,QAAQthB,QACXouB,EAASpoB,KAAK,CACVuoB,QACAvuB,QAAU1B,KAAKC,MAAMuH,EAAGwb,QAAQthB,WAGpCouB,EAASpoB,KAAK,CAACuoB,QACXvuB,aAASwL,GAEpB,IAIe,IAApB4iB,EAASjsB,QAA6C,IAA7BisB,EAAS,GAAGG,MAAMpsB,OAAc,CACzD,MAAMkmB,EAAS+F,EAAS,GACxBxjB,KAAKyd,OAAOA,EAAOkG,MAAM,GAAIlG,EAAOroB,QACvC,MACG4K,KAAKya,YAAY+I,EACpB,IAKTxjB,KAAK+gB,WAAWqC,iBAAiB,SAAUC,IACvC,MACMS,EADST,EAAMC,OACIS,QAAQ,aACjC,GAAKD,EAIL,GAAIA,EAAUE,aAAa,aACvBhkB,KAAKue,KAAKzI,SAASgO,EAAUnN,aAAa,aAAc,KACxD0M,EAAME,sBACH,GACHO,EAAUrD,UAAUC,SAAS1gB,KAAKpK,QAAQ8T,QAAQsB,QACpD,CACE,MAAM7V,EAAetB,MAAMgG,KAAKiqB,EAAU9I,cAAcA,cAAciJ,UAAUxgB,QAAQqgB,EAAU9I,eAC5F1lB,EAAcJ,EAAqBC,EAAc6K,KAAK5K,QAAQqhB,UACpEzW,KAAK5K,QAAQ0R,KAAKxR,GAClB+tB,EAAME,gBACT,MAAM,GACHO,EAAUrD,UAAUC,SAAS1gB,KAAKpK,QAAQ8T,QAAQrI,QACpD,CACE,MAAMlM,EAAetB,MAAMgG,KAAKiqB,EAAU9I,cAAcA,cAAciJ,UAAUxgB,QAAQqgB,EAAU9I,eAC5F1lB,EAAcJ,EAAqBC,EAAc6K,KAAK5K,QAAQqhB,UACpEzW,KAAK5K,QAAQiM,OAAO/L,GACpB+tB,EAAME,gBACT,KACF,GAECvjB,KAAKpK,QAAQgnB,eACb5c,KAAK9L,IAAIkvB,iBAAiB,WAAYC,IAClC,GAAkB,YAAdA,EAAM/sB,IAAmB,CAGzB,IAAI4tB,EAFJb,EAAME,iBACNF,EAAMc,kBAENnkB,KAAKif,MAAMjf,KAAK2Z,aAAa,GAAGhE,MAAMhK,GAC9BA,EAAI7R,QAAQkG,KAAKmL,KAAKgB,SAG1B+X,EAAUvY,GACH,KAEPuY,EACAlkB,KAAKmL,KAAKiM,UAAU8M,EAAQpqB,OACpBkG,KAAK2e,aACb3e,KAAKue,KAAKve,KAAK2Z,aAAa,GAAG,EAEtC,MAAM,GAAkB,cAAd0J,EAAM/sB,IAAqB,CAGlC,IAAI8tB,EAFJf,EAAME,iBACNF,EAAMc,kBAEN,MAAME,EAAUrkB,KAAKif,MAAMjf,KAAK2Z,aAAa,GAAGhE,MAAMhK,KAC9CyY,IAGAzY,EAAI7R,QAAQkG,KAAKmL,KAAKgB,SACtBiY,GAAW,IAER,KAEPC,EACArkB,KAAKmL,KAAKiM,UAAUiN,EAAQvqB,OACpBkG,KAAK4e,YACb5e,KAAKue,KAAKve,KAAK2Z,aAAa,EAEnC,KAAU,CAAC,QAAS,KAAKllB,SAAS4uB,EAAM/sB,MACrC0J,KAAK2X,KAAK,sBAAuB3X,KAAKmL,KAAKgB,OAAQkX,EACtD,IAELrjB,KAAK9L,IAAIkvB,iBAAiB,aAAcC,IACpC,MAAMC,EAASD,EAAMC,OACrB,GAAMA,aAAkBhrB,SAGpB0H,KAAK9L,IAAI8K,QAAQ,UAAW,CAC5B,MAAM2M,EAAM9X,MAAMgG,KAAKmG,KAAK9L,IAAImiB,iBAAiB,YAAYV,MAAKhK,GAAOA,EAAI+U,SAAS4C,KAClF3X,GAAOA,aAAe2V,aACtBthB,KAAK2X,KAAK,sBAAuB7B,SAASnK,EAAI+K,QAAQ5c,MAAO,IAAKupB,EAEzE,MAILrjB,KAAK9L,IAAIkvB,iBAAiB,aAAcC,IACpC,MAAMC,EAASD,EAAMC,OACrB,KAAMA,aAAkBhrB,SACpB,OAEJ,MAAMqT,EAAM9X,MAAMgG,KAAKmG,KAAK9L,IAAImiB,iBAAiB,YAAYV,MAAKhK,GAAOA,EAAI+U,SAAS4C,KAClF3X,GAAOA,aAAe2V,aACtBthB,KAAK2X,KAAK,sBAAuB7B,SAASnK,EAAI+K,QAAQ5c,MAAO,IAAKupB,EACrE,IAITva,OAAOsa,iBAAiB,SAAUpjB,KAAKkgB,WAAWC,SACrD,CAKDC,YACIpgB,KAAKyhB,MAAQzhB,KAAKohB,aAAaM,wBAC1B1hB,KAAKyhB,MAAMpG,OAIhBrb,KAAK6X,QAAO,EACf,CAMDyM,UACStkB,KAAKpK,QAAQgmB,cAGlB5b,KAAK9L,IAAIG,UAAY2L,KAAKigB,kBAG1BjgB,KAAK9L,IAAIusB,UAAU3I,OAAO9X,KAAKpK,QAAQ8T,QAAQgC,OAG3C1L,KAAK+gB,WAAW/F,eAChBhb,KAAK+gB,WAAW/F,cAAcxhB,aAAawG,KAAK9L,IAAK8L,KAAK+gB,YAG9D/gB,KAAKsgB,aAAc,EAEnBxX,OAAOyb,oBAAoB,SAAUvkB,KAAKkgB,WAAWC,UACxD,CAMDtI,OAAO2M,GAAgB,GACfA,IACAxkB,KAAK5K,QAAQslB,iBACb1a,KAAK4X,QAAU3a,QAAQ+C,KAAKtL,KAAKA,KAAK6C,QACtCyI,KAAKwgB,YAAcvjB,QAAQ+C,KAAKtL,KAAK6U,SAAShS,SAElDyI,KAAK+gB,WAAWN,UAAU3I,OAAO9X,KAAKpK,QAAQ8T,QAAQsU,OAEtDhe,KAAKykB,YACLzkB,KAAK+hB,cAEL/hB,KAAKqiB,gBAEDriB,KAAKpK,QAAQkU,QAAQvS,QACrByI,KAAKyiB,wBAGTziB,KAAK2X,KAAK,mBACb,CAED8M,YACI,IAAItZ,EAAOnL,KAAKtL,KAAKA,KAAKE,KAAI,CAAC+W,EAAK7R,KAAW,CAC3C6R,MACA7R,YAqCJ,OAlCIkG,KAAKwa,eAAejjB,SACpB4T,EAAO,GAEPnL,KAAKoiB,YAAYhsB,SAAS0D,GAAkBqR,EAAK/P,KAAK,CAACtB,QACnD6R,IAAK3L,KAAKtL,KAAKA,KAAKoF,QAGxBkG,KAAK5K,QAAQmjB,OAAO7N,QAAQnT,QAC5ByI,KAAK5K,QAAQmjB,OAAO7N,QAAQtU,SACxB,CAACsuB,EAA4Cxa,KACpCwa,IAGLvZ,EAAOA,EAAK9J,QACPsK,GAAiE,mBAAhB+Y,EAA6BA,EAAY/Y,EAAIA,IAAIzB,GAAQxV,OAASiX,EAAIA,IAAIzB,GAAQlV,MAAQ2W,EAAIA,IAAIzB,GAAQxV,QAAUgwB,IACzK,IAKT1kB,KAAKpK,QAAQmmB,QAAU/b,KAAKpK,QAAQomB,QAAU,EAE9Chc,KAAKif,MAAQ9T,EACRvW,KAAI,CAAC+W,EAAuCxM,IAAcA,EAAIa,KAAKpK,QAAQomB,SAAY,EAAI7Q,EAAK7T,MAAM6H,EAAGA,EAAIa,KAAKpK,QAAQomB,SAAW,OACrI3a,QAAQkd,GAA6CA,IAE1Dve,KAAKif,MAAQ,CAAC9T,GAGlBnL,KAAK8e,WAAa9e,KAAKiiB,SAAWjiB,KAAKif,MAAM1nB,OAExCyI,KAAK2Z,eACN3Z,KAAK2Z,aAAe,GAEjB3Z,KAAK8e,UACf,CAKD6C,aACQ3hB,KAAKpK,QAAQ+mB,cACb3c,KAAKohB,aAAaxW,MAAM+Z,OAAS,KACjC3kB,KAAKyhB,MAAQzhB,KAAKohB,aAAaM,wBAC/B1hB,KAAKohB,aAAaxW,MAAM+Z,OAAS,GAAG3kB,KAAKyhB,MAAMkD,WAEtD,CAKDlH,OAAOoG,EAAczuB,GAEjB,IAAKyuB,EAAKtsB,OAON,OANAyI,KAAK2Z,aAAe,EACpB3Z,KAAKwa,eAAiB,GACtBxa,KAAKoiB,YAAc,GACnBpiB,KAAK6X,SACL7X,KAAK2X,KAAK,mBAAoB,GAAI,IAClC3X,KAAK+gB,WAAWN,UAAU3I,OAAO,mBAC1B,EAGX9X,KAAKya,YAAY,CACb,CAACkJ,MAAO,CAACE,GACLzuB,QAASA,QAAoBwL,KAGrCZ,KAAK2X,KAAK,mBAAoBkM,EAAM7jB,KAAKoiB,YAE5C,CAKD3H,YAAYmK,GACR,IAAK5kB,KAAK4X,QAAS,OAAO,EAE1B5X,KAAK2Z,aAAe,EACpB3Z,KAAKoiB,YAAc,GAEnB,MAAMyC,EAAUD,EAAWhwB,KAAIkwB,IAAU,CACrC1vB,QAAS0vB,EAAM1vB,QACfuuB,MAAOmB,EAAMnB,MAAM/uB,KAAIivB,GAAQA,EAAK9f,SAAQ1C,QAAOwiB,GAAQA,QAC3DxiB,QAAOyjB,GAASA,EAAMnB,MAAMpsB,SAKhC,GAFAyI,KAAKwa,eAAiBqK,GAEjBA,EAAQttB,OAIT,OAHAyI,KAAK6X,SACL7X,KAAK2X,KAAK,wBAAyBkN,EAAS7kB,KAAKoiB,aACjDpiB,KAAK+gB,WAAWN,UAAU3I,OAAO,mBAC1B,EAEX,MAAMiN,EAAaF,EAAQjwB,KAAIkwB,GAAS9kB,KAAK5K,QAAQqhB,SAAS7hB,KAC1D,CAACsV,EAAQpQ,KACL,GAAIoQ,EAAO3U,SAAW2U,EAAOC,YAAe2a,EAAM1vB,UAAY0vB,EAAM1vB,QAAQX,SAASqF,GACjF,OAAO,EAEX,IAAIkrB,EAAgBF,EAAMnB,MAC1B,MAAM/K,EAAc1O,EAAO0O,aAAe5Y,KAAKpK,QAAQgjB,YACnD,CAAC,OAAQ,UAAUnkB,SAASmkB,KAC5BoM,EAAgBA,EAAcpwB,KAAIkwB,GAASA,EAAM7uB,iBAEjD,CAAC,OAAQ,QAAQxB,SAASmkB,KAC1BoM,EAAgBA,EAAcpwB,KAAIkwB,GAASA,EAAMG,UAAU,OAAOhwB,QAAQ,kBAAmB,OAMjG,OAJ0BiV,EAAO2O,mBAAqB7Y,KAAKpK,QAAQijB,qBAE/DmM,EAAgBA,EAAcpwB,KAAIkwB,GAASA,EAAM7vB,QAAQ,2BAA4B,OAElF+vB,CAAa,MAG5BhlB,KAAKtL,KAAKA,KAAK0B,SAAQ,CAACuV,EAAiBuZ,KACrC,MAAMC,EAAYxZ,EAAI/W,KAAI,CAACiX,EAAM1M,KAC7B,IAAIqW,GAAW3J,EAAK7W,MAAQ+V,OAAOc,EAAKnX,OAAOqP,OAC/C,MAAMmG,EAASlK,KAAK5K,QAAQqhB,SAAStX,GACrC,GAAIqW,EAAQje,OAAQ,CAChB,MAAMqhB,EAAc1O,EAAO0O,aAAe5Y,KAAKpK,QAAQgjB,YACnD,CAAC,OAAQ,UAAUnkB,SAASmkB,KAC5BpD,EAAUA,EAAQvf,eAElB,CAAC,OAAQ,QAAQxB,SAASmkB,KAC1BpD,EAAUA,EAAQyP,UAAU,OAAOhwB,QAAQ,kBAAmB,MAExCiV,EAAO2O,mBAAqB7Y,KAAKpK,QAAQijB,qBAE/DrD,EAAUA,EAAQvgB,QAAQ,2BAA4B,IAE7D,CACD,MAAM8jB,EAAsB7O,EAAO6O,qBAAuB/Y,KAAKpK,QAAQmjB,oBACvE,OAAOA,EAAsBvD,EAAQvR,MAAM8U,GAAuB,CAACvD,EAAQ,IAG3EuP,EAAWvoB,OACPqoB,GAAWA,EAAQlP,MACf,CAACmP,EAAOhrB,MAAUgrB,GACdA,EAAMnP,MAAKyP,GAAaD,EAAUrrB,GAAO6b,MAAK0P,GAAcA,EAAW5wB,SAAS2wB,YAK5FplB,KAAKoiB,YAAYhnB,KAAK8pB,EACzB,IAILllB,KAAK+gB,WAAWN,UAAUvgB,IAAI,kBAC1BF,KAAKoiB,YAAY7qB,OACjByI,KAAK6X,UAEL7X,KAAK+gB,WAAWN,UAAU3I,OAAO,kBAEjC9X,KAAKkiB,WAAWliB,KAAKpK,QAAQonB,OAAOK,YAGxCrd,KAAK2X,KAAK,wBAAyBkN,EAAS7kB,KAAKoiB,YACpD,CAKD7D,KAAKA,EAAcyD,GAAgB,GAE/B,OAAIzD,IAASve,KAAK2Z,eAIb3C,MAAMuH,KACPve,KAAK2Z,aAAe4E,KAGpBA,EAAOve,KAAKif,MAAM1nB,QAAUgnB,EAAO,KAIvCve,KAAK+hB,YAAYC,GACjBhiB,KAAKqiB,qBAELriB,KAAK2X,KAAK,iBAAkB4G,IAC/B,CAKD+G,OAAO5wB,GAEH,IAAIyW,EAAqB,GACzB,GAAItX,MAAMC,QAAQY,GAAO,CACrB,MAAM6U,EAAWvJ,KAAKtL,KAAK6U,SAAS3U,KAAKqV,GAA4BA,EAAQjV,MAAQ+V,OAAOd,EAAQvV,QACpGA,EAAK0B,SAAQ,CAACuV,EAAK4Z,KACf,MAAM5Y,EAAgB,GACtBxZ,OAAOgD,QAAQwV,GAAKvV,SAAQ,EAAE6T,EAAS4B,MAEnC,MAAM/R,EAAQyP,EAAS9F,QAAQwG,GAE3BnQ,GAAS,EACT6S,EAAE7S,GAAS2b,EAAa5J,EAAuB7L,KAAK5K,QAAQqhB,SAAS3c,IAC7DkG,KAAKwgB,aAAgBxgB,KAAK4X,SAAsB,IAAX2N,IAC7C5Y,EAAEpD,EAAShS,QAAUke,EAAa5J,EAAuB7L,KAAK5K,QAAQqhB,SAASlN,EAAShS,SACxFgS,EAASnO,KAAK6O,GACdjK,KAAKtL,KAAK6U,SAASnO,KAAK2a,EAAe9L,IAC1C,IAELkB,EAAK/P,KAAKuR,EAAE,GAEnB,MAAU3Z,EAAS0B,MACZA,EAAK6U,UAAavJ,KAAKwgB,aAAgBxgB,KAAK4X,QAErCljB,EAAKA,MAAQb,MAAMC,QAAQY,EAAKA,QACvCyW,EAAOzW,EAAKA,KAAKE,KAAI+W,GAAOA,EAAI/W,KAAI,CAACiX,EAAM/R,IAAU2b,EAAa5J,EAAuB7L,KAAK5K,QAAQqhB,SAAS3c,SAF/GkG,KAAKtL,KAAOshB,EAActhB,OAAMkM,EAAWZ,KAAK5K,QAAQqhB,SAAUzW,KAAKpK,QAAQ8L,KAAM1B,KAAKpK,QAAQ+T,SAKtGwB,EAAK5T,QACL4T,EAAK/U,SAASuV,GAAoB3L,KAAKtL,KAAKA,KAAK0G,KAAKuQ,KAE1D3L,KAAKwgB,YAAcvjB,QAAQ+C,KAAKtL,KAAK6U,SAAShS,QAE1CyI,KAAK5K,QAAQmjB,OAAOzR,MACpB9G,KAAK5K,QAAQ0R,KAAK9G,KAAK5K,QAAQmjB,OAAOzR,KAAKoD,OAAQlK,KAAK5K,QAAQmjB,OAAOzR,KAAKyD,KAAK,GAGrFvK,KAAK6X,QAAO,EACf,CAKD2N,UACQxlB,KAAKpK,QAAQuU,aACZtW,MAAMgG,KAAKmG,KAAK+gB,WAAW1K,iBAAiB,IAAIrW,KAAKpK,QAAQ8T,QAAQnH,UAAiCnM,SACnG8E,IACIA,EAAG3E,MAAQ,EAAE,IAGrByJ,KAAKwa,eAAiB,IAE1Bxa,KAAK2Z,aAAe,EACpB3Z,KAAK2e,aAAc,EACnB3e,KAAK6X,QAAO,GAEZ7X,KAAK2X,KAAK,oBACb,CAKD8N,QACI,MAAMC,EAAW3xB,EAAc,SAE/B,IAAI4xB,EAAqB1a,EACrBjL,KAAK4gB,iBACL5gB,KAAKtL,KAAK6U,SACVvJ,KAAKtL,KAAKA,KAAKE,KAAI,CAAC+W,EAAK7R,KAAW,CAChC6R,MACA7R,YAEJkG,KAAK5K,QAAQqhB,SACbzW,KAAK5K,QAAQmjB,QACb,EACAvY,KAAKpK,QACL,CACImU,gBAAgB,EAChBC,cAAc,IAItB,GAAIhK,KAAKpK,QAAQknB,YAAa,CAC1B,MAAMgF,EAAqD9hB,KAAKpK,QAAQknB,YAAY9c,KAAKtL,KAAMixB,EAAoB,SAC/G7D,IACA6D,EAAqB7D,EAE5B,CAED,MAAMlqB,EAAOoI,KAAKqgB,IAAIzoB,KAzBE,CAAC5D,SAAU,SAyBS2xB,GAC5C3lB,KAAKqgB,IAAI3mB,MAAMgsB,EAAU9tB,GAGzB,MAAMwW,EAAItF,OAAO8c,OAGjBxX,EAAEja,SAAS0xB,KAAKrvB,YAAYkvB,GAG5BtX,EAAEqX,OACL,CAKDvD,WAAW4D,GACP,MACMC,EADiB/lB,KAAKtL,KAAK6U,SAASlI,QAAO,CAAC4I,EAAyBnQ,KAAmBkG,KAAK5K,QAAQqhB,SAAS3c,IAAQvE,SAC7FgC,QAAU,EAEzCyI,KAAK+gB,WAAWN,UAAUvgB,IAAIF,KAAKpK,QAAQ8T,QAAQsU,OAE/Che,KAAKwhB,SACLxhB,KAAKwhB,OAAOntB,UAAY,IAE5B2L,KAAK8e,WAAa,EAClB9e,KAAKqiB,gBAEL,IAAIR,EAAkC,CAClC7tB,SAAU,QACVkC,WAAY8J,KAAK4gB,iBACjBjsB,WAAY,CACR,CACIX,SAAU,QACVW,WAAY,CACR2U,EACItJ,KAAKtL,KAAK6U,SAAUvJ,KAAK5K,QAAQqhB,SAAUzW,KAAK5K,QAAQmjB,OAAQvY,KAAKpK,QAAS,CAAA,KAG1F,CACI5B,SAAU,QACVW,WAAY,CACR,CACIX,SAAU,KACVW,WAAY,CACR,CACIX,SAAU,KACVkC,WAAY,CACRmU,MAAOrK,KAAKpK,QAAQ8T,QAAQsU,MAC5B+H,QAAShb,OAAOgb,IAEpBpxB,WAAY,CACR,CACIX,SAAU,QACVU,KAAMoxB,WAc1C,GAFAjE,EAAc3rB,WAAWmU,MAAQwX,EAAc3rB,WAAWmU,MAAQ,GAAGwX,EAAc3rB,WAAWmU,SAASrK,KAAKpK,QAAQ8T,QAAQgC,QAAU1L,KAAKpK,QAAQ8T,QAAQgC,MAEvJ1L,KAAKpK,QAAQknB,YAAa,CAC1B,MAAMgF,EAAqD9hB,KAAKpK,QAAQknB,YAAY9c,KAAKtL,KAAMmtB,EAAe,WAC1GC,IACAD,EAAgBC,EAEvB,CAED,MAAMlqB,EAAOoI,KAAKqgB,IAAIzoB,KAAKoI,KAAK2gB,YAAakB,GAC7C7hB,KAAKqgB,IAAI3mB,MAAMsG,KAAK9L,IAAK0D,GACzBoI,KAAK2gB,YAAckB,CAEtB,CAKDmE,GAAG3C,EAAe4C,GACdjmB,KAAKugB,QAAQ8C,GAASrjB,KAAKugB,QAAQ8C,IAAU,GAC7CrjB,KAAKugB,QAAQ8C,GAAOjoB,KAAK6qB,EAC5B,CAKDC,IAAI7C,EAAe4C,GACX5C,KAASrjB,KAAKugB,UAAY,GAC9BvgB,KAAKugB,QAAQ8C,GAAO5rB,OAAOuI,KAAKugB,QAAQ8C,GAAO5f,QAAQwiB,GAAW,EACrE,CAKDtO,KAAK0L,KAAkB1U,GACnB,GAAI0U,KAASrjB,KAAKugB,UAAY,EAC9B,IAAK,IAAIphB,EAAI,EAAGA,EAAIa,KAAKugB,QAAQ8C,GAAO9rB,OAAQ4H,IAC5Ca,KAAKugB,QAAQ8C,GAAOlkB,MAAMwP,EAEjC,ICliCkB1b,EAAA,cAAG,SAASkzB,GAC/B,IAAI3xB,EAQJ,IAAKxB,EAASmzB,GACV,OAAO,EAGX,MAAMvwB,EAAU,CAVZwwB,cAAe,KACfC,gBAAiB,IACjBC,oBAAoB,KAUjBH,GAGP,GAAIvwB,EAAQlB,KAAK6C,OAAQ,CAErB/C,EAAM,CACFE,KAAM,IAIV,MAAMyW,EAAkBvV,EAAQlB,KAAKuP,MAAMrO,EAAQwwB,eA6BnD,GA3BIjb,EAAK5T,SAED3B,EAAQ2T,WACR/U,EAAI+U,SAAW4B,EAAK,GAAGlH,MAAMrO,EAAQywB,iBACjCzwB,EAAQ0wB,qBACR9xB,EAAI+U,SAAW/U,EAAI+U,SAAS3U,KAAKhB,GAAcA,EAAEmQ,OAAO9O,QAAQ,WAAY,OAEhFkW,EAAKob,SAGTpb,EAAK/U,SAAQ,CAACuV,EAAaxM,KACvB3K,EAAIE,KAAKyK,GAAK,GAGd,MAAMqnB,EAAS7a,EAAI1H,MAAMrO,EAAQywB,iBAE7BG,EAAOjvB,QACPivB,EAAOpwB,SAASG,IACRX,EAAQ0wB,qBACR/vB,EAAQA,EAAMwN,OAAO9O,QAAQ,WAAY,KAE7CT,EAAIE,KAAKyK,GAAG/D,KAAK7E,EAAM,GAE9B,KAIL/B,EACA,OAAOA,CAEd,CAED,OAAO,CACX,IC5DwBvB,EAAA,eAAG,SAASkzB,GAChC,IAAI3xB,EAMJ,IAAKxB,EAASmzB,GACV,OAAO,EAGX,MAAMvwB,EAAU,CARZlB,KAAM,MAUHyxB,GAGP,GAAIvwB,EAAQlB,KAAK6C,QAAUvE,EAAS4C,EAAQlB,MAAO,CAE/C,MAAM+xB,IAAOlzB,EAAOqC,EAAQlB,OAAQhB,KAAKC,MAAMiC,EAAQlB,MAsBvD,GAnBI+xB,GACAjyB,EAAM,CACF+U,SAAU,GACV7U,KAAM,IAGV+xB,EAAKrwB,SAAQ,CAAC1B,EAAsEyK,KAChF3K,EAAIE,KAAKyK,GAAK,GACdhM,OAAOgD,QAAQzB,GAAM0B,SAAQ,EAAE8T,EAAQ3T,MAC9B/B,EAAI+U,SAAS9U,SAASyV,IACvB1V,EAAI+U,SAASnO,KAAK8O,GAEtB1V,EAAIE,KAAKyK,GAAG/D,KAAK7E,EAAM,GACzB,KAGN+D,QAAQosB,KAAK,0BAGblyB,EACA,OAAOA,CAEd,CAED,OAAO,CACX,mBCvCyB,SAAS2iB,EAAegP,EAA8B,IAC3E,IAAKhP,EAAGqJ,cAAgBrJ,EAAGS,QAAS,OAAO,EAU3C,IAAK5kB,EAASmzB,GACV,OAAO,EAGX,MAAMvwB,EAAU,CAXZ+wB,UAAU,EACVC,WAAY,GACZR,cAAe,KACfC,gBAAiB,OAUdF,GAEDU,EAAe/sB,IAAmBlE,EAAQgxB,WAAWnyB,SAASqF,KAAWqd,EAAG/hB,QAAQqhB,SAAS3c,IAAQvE,OAC3G,IAAI4V,EAAqE,GACzE,MAAM2b,EAAU3P,EAAGziB,KAAK6U,SAASlI,QAAO,CAACkY,EAA0Bzf,IAAkB+sB,EAAY/sB,KAAQlF,KAAKyW,GAA2BA,EAAOrW,MAAQqW,EAAO3W,OAK/J,GAHAyW,EAAK,GAAK2b,EAGNlxB,EAAQmxB,UAER,GAAIlzB,MAAMC,QAAQ8B,EAAQmxB,WAEtB,IAAK,IAAI5nB,EAAI,EAAGA,EAAIvJ,EAAQmxB,UAAUxvB,OAAQ4H,IAC1CgM,EAAOA,EAAK9P,OAAO8b,EAAG8H,MAAMrpB,EAAQmxB,UAAU5nB,GAAK,GAAGvK,KAAK+W,GAA0CA,EAAIA,IAAItK,QAAO,CAACuV,EAAiB9c,IAAkB+sB,EAAY/sB,KAAQlF,KAAKiX,GAAmBA,EAAK7W,MAAQ6W,EAAKnX,eAI1NyW,EAAOA,EAAK9P,OAAO8b,EAAG8H,MAAMrpB,EAAQmxB,UAAY,GAAGnyB,KAAK+W,GAA0CA,EAAIA,IAAItK,QAAO,CAACuV,EAAiB9c,IAAkB+sB,EAAY/sB,KAAQlF,KAAKiX,GAAmBA,EAAK7W,MAAQ6W,EAAKnX,eAGvNyW,EAAOA,EAAK9P,OAAO8b,EAAGziB,KAAKA,KAAKE,KAAK+W,GAAoBA,EAAItK,QAAO,CAACuV,EAAiB9c,IAAkB+sB,EAAY/sB,KAAQlF,KAAKiX,GAAmBA,EAAK7W,MAAQ6W,EAAKnX,UAI1K,GAAIyW,EAAK5T,OAAQ,CACb,IAAI/D,EAAM,GA2BV,GA1BA2X,EAAK/U,SAAQuV,IACTA,EAAIvV,SAASyV,IACW,iBAATA,IAMPA,GAFAA,GADAA,GADAA,GADAA,EAAOA,EAAK9H,QACA9O,QAAQ,UAAW,MACnBA,QAAQ,MAAO,OACfA,QAAQ,KAAM,OAEdA,QAAQ,KAAM,QACjBR,SAAS,OACdoX,EAAO,IAAIA,MAGnBrY,GAAOqY,EAAOjW,EAAQywB,eAAe,IAGzC7yB,EAAMA,EAAIuQ,OAAOI,UAAU,EAAG3Q,EAAI+D,OAAS,GAG3C/D,GAAOoC,EAAQwwB,aAAa,IAIhC5yB,EAAMA,EAAIuQ,OAAOI,UAAU,EAAG3Q,EAAI+D,OAAS,GAGvC3B,EAAQ+wB,SAAU,CAElB,MAAMlkB,EAAOtO,SAASJ,cAAc,KACpC0O,EAAKukB,KAAOC,UAAU,+BAA+BzzB,KACrDiP,EAAKkkB,SAAW,GAAG/wB,EAAQsxB,UAAY,yBAGvC/yB,SAAS0xB,KAAKrvB,YAAYiM,GAG1BA,EAAK0kB,QAGLhzB,SAAS0xB,KAAKjsB,YAAY6I,EAC7B,CAED,OAAOjP,CACV,CAED,OAAO,CACX,oBC1F0B,SAAS2jB,EAAegP,EAA+B,IAC7E,IAAKhP,EAAGqJ,cAAgBrJ,EAAGS,QAAS,OAAO,EAW3C,IAAK5kB,EAASmzB,GACV,OAAO,EAGX,MAAMvwB,EAAU,CAXZ+wB,UAAU,EACVC,WAAY,GACZQ,SAAU,KACVC,MAAO,KAUJlB,GAGDU,EAAe/sB,IAAmBlE,EAAQgxB,WAAWnyB,SAASqF,KAAWqd,EAAG/hB,QAAQqhB,SAAS3c,IAAQvE,OAE3G,IAAI4V,EAAqE,GAEzE,GAAIvV,EAAQmxB,UAER,GAAIlzB,MAAMC,QAAQ8B,EAAQmxB,WAEtB,IAAK,IAAI5nB,EAAI,EAAGA,EAAIvJ,EAAQmxB,UAAUxvB,OAAQ4H,IAC1CgM,EAAOA,EAAK9P,OAAO8b,EAAG8H,MAAMrpB,EAAQmxB,UAAU5nB,GAAK,GAAGvK,KAAK+W,GAA0CA,EAAIA,IAAItK,QAAO,CAACuV,EAAiB9c,IAAkB+sB,EAAY/sB,KAAQlF,KAAKiX,GAAmBA,EAAKnX,eAG7MyW,EAAOA,EAAK9P,OAAO8b,EAAG8H,MAAMrpB,EAAQmxB,UAAY,GAAGnyB,KAAK+W,GAA0CA,EAAIA,IAAItK,QAAO,CAACuV,EAAiB9c,IAAkB+sB,EAAY/sB,KAAQlF,KAAKiX,GAAmBA,EAAKnX,eAG1MyW,EAAOA,EAAK9P,OAAO8b,EAAGziB,KAAKA,KAAKE,KAAK+W,GAAoBA,EAAItK,QAAO,CAACuV,EAAiB9c,IAAkB+sB,EAAY/sB,KAAQlF,KAAKiX,GAAmBA,EAAKnX,UAG7J,MAAMoyB,EAAU3P,EAAGziB,KAAK6U,SAASlI,QAAO,CAACkY,EAA0Bzf,IAAkB+sB,EAAY/sB,KAAQlF,KAAKyW,GAA2BA,EAAOrW,MAAQ+V,OAAOM,EAAO3W,QAGtK,GAAIyW,EAAK5T,OAAQ,CACb,MAAMyM,EAAuG,GAC7GmH,EAAK/U,SAAQ,CAACuV,EAAgEsD,KAC1EjL,EAAIiL,GAAKjL,EAAIiL,IAAM,CAAA,EACnBtD,EAAIvV,SAAQ,CAACyV,EAA+D1M,KACxE6E,EAAIiL,GAAG6X,EAAQ3nB,IAAM0M,CAAI,GAC3B,IAIN,MAAMrY,EAAME,KAAK4M,UAAU0D,EAAKpO,EAAQwxB,SAAUxxB,EAAQyxB,OAG1D,GAAIzxB,EAAQ+wB,SAAU,CAGlB,MAAMW,EAAO,IAAIC,KACb,CAAC/zB,GACD,CACIkO,KAAM,wCAGR8lB,EAAMC,IAAIC,gBAAgBJ,GAG1B7kB,EAAOtO,SAASJ,cAAc,KACpC0O,EAAKukB,KAAOQ,EACZ/kB,EAAKkkB,SAAW,GAAG/wB,EAAQsxB,UAAY,0BAGvC/yB,SAAS0xB,KAAKrvB,YAAYiM,GAG1BA,EAAK0kB,QAGLhzB,SAAS0xB,KAAKjsB,YAAY6I,GAC1BglB,IAAIE,gBAAgBH,EACvB,CAED,OAAOh0B,CACV,CAED,OAAO,CACX,mBCzFyB,SAAS2jB,EAAegP,EAA+B,IAC5E,IAAKhP,EAAGqJ,cAAgBrJ,EAAGS,QAAS,OAAO,EAS3C,IAAK5kB,EAASmzB,GACV,OAAO,EAGX,MAAMvwB,EAAU,CAVZ+wB,UAAU,EACVC,WAAY,GACZgB,UAAW,aAURzB,GAEDU,EAAe/sB,IAAmBlE,EAAQgxB,WAAWnyB,SAASqF,KAAWqd,EAAG/hB,QAAQqhB,SAAS3c,IAAQvE,OAC3G,IAAI4V,EAAqE,GAEzE,GAAIvV,EAAQmxB,UAER,GAAIlzB,MAAMC,QAAQ8B,EAAQmxB,WAEtB,IAAK,IAAI5nB,EAAI,EAAGA,EAAIvJ,EAAQmxB,UAAUxvB,OAAQ4H,IAC1CgM,EAAOA,EAAK9P,OAAO8b,EAAG8H,MAAMrpB,EAAQmxB,UAAU5nB,GAAK,GAAGvK,KAAK+W,GAA0CA,EAAIA,IAAItK,QAAO,CAACuV,EAAiB9c,IAAkB+sB,EAAY/sB,KAAQlF,KAAKiX,GAAmBA,EAAK7W,MAAQ6W,EAAKnX,eAI1NyW,EAAOA,EAAK9P,OAAO8b,EAAG8H,MAAMrpB,EAAQmxB,UAAY,GAAGnyB,KAAK+W,GAA0CA,EAAIA,IAAItK,QAAO,CAACuV,EAAiB9c,IAAkB+sB,EAAY/sB,KAAQlF,KAAKiX,GAAmBA,EAAK7W,MAAQ6W,EAAKnX,eAGvNyW,EAAOA,EAAK9P,OAAO8b,EAAGziB,KAAKA,KAAKE,KAAK+W,GAAoBA,EAAItK,QAAO,CAACuV,EAAiB9c,IAAkB+sB,EAAY/sB,KAAQlF,KAAKiX,GAAmBA,EAAK7W,MAAQ6W,EAAKnX,UAG1K,MAAMoyB,EAAU3P,EAAGziB,KAAK6U,SAASlI,QAAO,CAACkY,EAA0Bzf,IAAkB+sB,EAAY/sB,KAAQlF,KAAKyW,GAA2BA,EAAOrW,MAAQ+V,OAAOM,EAAO3W,QAEtK,GAAIyW,EAAK5T,OAAQ,CAEb,IAAI/D,EAAM,iBAAiBoC,EAAQgyB,gBA2CnC,GAxCAd,EAAQ1wB,SAASiV,IACb7X,GAAO,KAAK6X,MAAW,IAI3B7X,EAAMA,EAAIuQ,OAAOI,UAAU,EAAG3Q,EAAI+D,OAAS,GAG3C/D,GAAO,YAIP2X,EAAK/U,SAASuV,IACVnY,GAAO,IACPmY,EAAIvV,SAASyV,IAELrY,GADgB,iBAATqY,EACA,IAAIA,MAEJ,GAAGA,IACb,IAGLrY,EAAMA,EAAIuQ,OAAOI,UAAU,EAAG3Q,EAAI+D,OAAS,GAG3C/D,GAAO,IAAI,IAKfA,EAAMA,EAAIuQ,OAAOI,UAAU,EAAG3Q,EAAI+D,OAAS,GAG3C/D,GAAO,IAEHoC,EAAQ+wB,WACRnzB,EAAM,sCAAsCA,KAI5CoC,EAAQ+wB,SAAU,CAElB,MAAMlkB,EAAOtO,SAASJ,cAAc,KACpC0O,EAAKukB,KAAOC,UAAUzzB,GACtBiP,EAAKkkB,SAAW,GAAG/wB,EAAQsxB,UAAY,yBAGvC/yB,SAAS0xB,KAAKrvB,YAAYiM,GAG1BA,EAAK0kB,QAGLhzB,SAAS0xB,KAAKjsB,YAAY6I,EAC7B,CAED,OAAOjP,CACV,CAED,OAAO,CACX,mBCtGyB,SAAS2jB,EAAegP,EAA+B,IAC5E,IAAKhP,EAAGqJ,cAAgBrJ,EAAGS,QAAS,OAAO,EAU3C,IAAK5kB,EAASmzB,GACV,OAAO,EAGX,MAAMvwB,EAAU,CAXZ+wB,UAAU,EACVC,WAAY,GACZR,cAAe,KACfC,gBAAiB,OAUdF,GAGDU,EAAe/sB,IAAmBlE,EAAQgxB,WAAWnyB,SAASqF,KAAWqd,EAAG/hB,QAAQqhB,SAAS3c,IAAQvE,OAE3G,IAAI4V,EAAqE,GACzE,MAAM2b,EAAU3P,EAAGziB,KAAK6U,SAASlI,QAAO,CAACkY,EAA0Bzf,IAAkB+sB,EAAY/sB,KAAQlF,KAAKyW,GAA2BA,EAAOrW,MAAQqW,EAAO3W,OAK/J,GAHAyW,EAAK,GAAK2b,EAGNlxB,EAAQmxB,UAER,GAAIlzB,MAAMC,QAAQ8B,EAAQmxB,WAEtB,IAAK,IAAI5nB,EAAI,EAAGA,EAAIvJ,EAAQmxB,UAAUxvB,OAAQ4H,IAC1CgM,EAAOA,EAAK9P,OAAO8b,EAAG8H,MAAMrpB,EAAQmxB,UAAU5nB,GAAK,GAAGvK,KAAK+W,GAA0CA,EAAIA,IAAItK,QAAO,CAACuV,EAAiB9c,IAAkB+sB,EAAY/sB,KAAQlF,KAAKiX,GAAmBA,EAAKnX,eAG7MyW,EAAOA,EAAK9P,OAAO8b,EAAG8H,MAAMrpB,EAAQmxB,UAAY,GAAGnyB,KAAK+W,GAA0CA,EAAIA,IAAItK,QAAO,CAACuV,EAAiB9c,IAAkB+sB,EAAY/sB,KAAQlF,KAAKiX,GAAmBA,EAAKnX,eAG1MyW,EAAOA,EAAK9P,OAAO8b,EAAGziB,KAAKA,KAAKE,KAAK+W,GAAoBA,EAAItK,QAAO,CAACuV,EAAiB9c,IAAkB+sB,EAAY/sB,KAAQlF,KAAKiX,GAAmBA,EAAKnX,UAI7J,GAAIyW,EAAK5T,OAAQ,CACb,IAAI/D,EAAM,GAgCV,GA9BA2X,EAAK/U,SAAQuV,IACTA,EAAIvV,SAASyV,IACW,iBAATA,IAMPA,GAFAA,GADAA,GADAA,GADAA,EAAOA,EAAK9H,QACA9O,QAAQ,UAAW,MACnBA,QAAQ,MAAO,OACfA,QAAQ,KAAM,OAEdA,QAAQ,KAAM,QACjBR,SAAS,OACdoX,EAAO,IAAIA,MAGnBrY,GAAOqY,EAAOjW,EAAQywB,eAAe,IAGzC7yB,EAAMA,EAAIuQ,OAAOI,UAAU,EAAG3Q,EAAI+D,OAAS,GAG3C/D,GAAOoC,EAAQwwB,aAAa,IAKhC5yB,EAAMA,EAAIuQ,OAAOI,UAAU,EAAG3Q,EAAI+D,OAAS,GAEvC3B,EAAQ+wB,WACRnzB,EAAM,+BAA+BA,KAGrCoC,EAAQ+wB,SAAU,CAElB,MAAMlkB,EAAOtO,SAASJ,cAAc,KACpC0O,EAAKukB,KAAOC,UAAUzzB,GACtBiP,EAAKkkB,SAAW,GAAG/wB,EAAQsxB,UAAY,yBAGvC/yB,SAAS0xB,KAAKrvB,YAAYiM,GAG1BA,EAAK0kB,QAGLhzB,SAAS0xB,KAAKjsB,YAAY6I,EAC7B,CAED,OAAOjP,CACV,CAED,OAAO,CACX,ILrGO,MMVMmoB,EAAgB,CACzBjS,QAAS,CACLiC,IAAK,uBACLkc,KAAM,wBACNjoB,KAAM,wBACNkoB,KAAM,wBACNC,KAAM,wBACNrQ,MAAO,yBACPsQ,OAAQ,0BACRC,MAAO,yBACPC,MAAO,yBACP3lB,MAAO,yBACPic,MAAO,yBACP2J,MAAO,yBACPpwB,OAAQ,0BACRsT,OAAQ,0BACRiT,QAAS,2BACT8J,SAAU,4BACV1K,UAAW,6BACX2K,UAAW,8BAGfrL,OAAQ,CACJsL,OAAQ,IACRC,SAAU,YACVC,QAAS,WACTC,UAAW,aACXC,aAAc,gBACdC,aAAc,gCACdZ,KAAM,OACNC,OAAQ,UAGZY,YAAaC,GAAUC,QAAQD,EAAOjzB,QAAQonB,OAAO2L,cAGrDI,QAAQ,EAGRC,eAAe,EAGfC,aAAa,EAGbC,WAAY,WAGZC,eAAgB,GAGhBC,UAAW,CACP,CACIp0B,KAAO6zB,GAAmBA,EAAOjzB,QAAQonB,OAAOuL,SAChDxwB,OAAQ,CAAC8wB,EAAgBQ,KACrB,KAAMR,EAAOxF,MAAMC,kBAAkBhrB,SACjC,OAEJ,MAAMuT,EAAOgd,EAAOxF,MAAMC,OAAOS,QAAQ,MACzC,OAAO8E,EAAON,SAAS1c,EAAK,GAGpC,CACI7W,KAAO6zB,GAAmBA,EAAOjzB,QAAQonB,OAAOwL,QAChDzwB,OAAQ,CAAC8wB,EAAgBQ,KACrB,KAAMR,EAAOxF,MAAMC,kBAAkBhrB,SACjC,OAEJ,MAAMqT,EAAMkd,EAAOxF,MAAMC,OAAOS,QAAQ,MACxC,OAAO8E,EAAOL,QAAQ7c,EAAI,GAGlC,CACI0c,WAAW,GAEf,CACIrzB,KAAO6zB,GAAmBA,EAAOjzB,QAAQonB,OAAOyL,UAChD1wB,OAAQ,CAAC8wB,EAAgBQ,KACrB,GAAMR,EAAOxF,MAAMC,kBAAkBhrB,SAGjCwwB,QAAQD,EAAOjzB,QAAQonB,OAAO0L,cAAe,CAC7C,MAAM/c,EAAMkd,EAAOxF,MAAMC,OAAOS,QAAQ,MACxC8E,EAAOJ,UAAU9c,EACpB,YC9DJ2d,EAqCT5T,YAAY6T,EAAsB3zB,EAAU,IACxCoK,KAAKmX,GAAKoS,EACVvpB,KAAKpK,QAAU,IACR+lB,KACA/lB,EAEV,CAMDgQ,OACQ5F,KAAKsgB,cAGTtgB,KAAKmX,GAAG4J,WAAWN,UAAUvgB,IAAIF,KAAKpK,QAAQ8T,QAAQ0e,UAClDpoB,KAAKpK,QAAQmzB,SACb/oB,KAAKwpB,kBAAoBxpB,KAAKmX,GAAGvhB,QAAQ2V,UACzCvL,KAAKmX,GAAGvhB,QAAQ2V,UAAY,CAACI,EAAKC,EAAI9R,KAClC,IAAI2vB,EAAQzpB,KAAKuL,UAAUI,EAAKC,EAAI9R,GAIpC,OAHIkG,KAAKwpB,oBACLC,EAAQzpB,KAAKwpB,kBAAkB7d,EAAK8d,EAAO3vB,IAExC2vB,CAAK,GAGhBzpB,KAAKpK,QAAQqzB,cACbjpB,KAAKohB,aAAertB,EAAc,MAAO,CACrCuH,GAAI0E,KAAKpK,QAAQ8T,QAAQgU,YAE7B1d,KAAK+gB,WAAahtB,EAAc,MAAO,CACnCsW,MAAOrK,KAAKpK,QAAQ8T,QAAQ4U,UAEhCte,KAAK0pB,QAAU31B,EAAc,KAAM,CAC/BsW,MAAOrK,KAAKpK,QAAQ8T,QAAQoe,OAE5B9nB,KAAKpK,QAAQwzB,WAAappB,KAAKpK,QAAQwzB,UAAU7xB,QACjDyI,KAAKpK,QAAQwzB,UAAUhzB,SAASwJ,IAC5B,MAAMpE,EAAKzH,EAAc,KAAM,CAC3BsW,MAAOzK,EAAKyoB,UAAYroB,KAAKpK,QAAQ8T,QAAQ2e,UAAYroB,KAAKpK,QAAQ8T,QAAQ9J,OAElF,IAAKA,EAAKyoB,UAAW,CACjB,MAAMvb,EAAI/Y,EAAc,IAAK,CACzBsW,MAAOrK,KAAKpK,QAAQ8T,QAAQ3R,OAC5BivB,KAAMpnB,EAAK4nB,KAAO,IAClBnjB,KAA2B,mBAAdzE,EAAK5K,KAAsB4K,EAAK5K,KAAKgL,MAAQJ,EAAK5K,OAEnEwG,EAAGhF,YAAYsW,GACXlN,EAAK7H,QAAiC,mBAAhB6H,EAAK7H,QAC3B+U,EAAEsW,iBAAiB,SAAUC,IACzBA,EAAME,iBACN3jB,EAAK7H,OAAOiI,KAAMqjB,EAAM,GAGnC,CACDrjB,KAAK0pB,QAAQlzB,YAAYgF,EAAG,IAGpCwE,KAAK+gB,WAAWvqB,YAAYwJ,KAAK0pB,SACjC1pB,KAAKohB,aAAa5qB,YAAYwJ,KAAK+gB,YACnC/gB,KAAK2pB,cAET3pB,KAAKtL,KAAO,GACZsL,KAAK4pB,UAAW,EAChB5pB,KAAK6pB,SAAU,EACf7pB,KAAK8pB,YAAa,EAClB9pB,KAAK+pB,aAAc,EACnB/pB,KAAKgqB,aACLlJ,YAAW,KACP9gB,KAAKsgB,aAAc,EACnBtgB,KAAKmX,GAAGQ,KAAK,gBAAgB,GAC9B,IACN,CAMDqS,aACIhqB,KAAKiqB,OAAS,CACVC,QAASlqB,KAAKkqB,QAAQC,KAAKnqB,MAC3BmnB,MAAOnnB,KAAKmnB,MAAMgD,KAAKnqB,OAG3BA,KAAKmX,GAAGjjB,IAAIkvB,iBAAiBpjB,KAAKpK,QAAQszB,WAAYlpB,KAAKiqB,OAAO9C,OAElEhzB,SAASivB,iBAAiB,UAAWpjB,KAAKiqB,OAAOC,SAE7ClqB,KAAKpK,QAAQqzB,cACbjpB,KAAKiqB,OAAOG,QAAUpqB,KAAKoqB,QAAQD,KAAKnqB,MACxCA,KAAKiqB,OAAON,WAAa3pB,KAAK2pB,WAAWQ,KAAKnqB,MAC9CA,KAAKiqB,OAAOI,YAAcrqB,KAAKqqB,YAAYF,KAAKnqB,MAChDA,KAAKiqB,OAAOK,MC5JA,SAASC,EAAkBC,EAAU,KACzD,IAAIC,EACJ,MAAO,IAAIC,KACPC,aAAaF,GACbA,EAAQ3hB,OAAOgY,YAAW,IAAMyJ,KAAQC,EAAQ,CAExD,CDsJgCI,EAAS,IAAM5qB,KAAKiqB,OAAON,cAAc,IAG7D3pB,KAAKmX,GAAGjjB,IAAIkvB,iBAAiB,cAAepjB,KAAKiqB,OAAOG,SAExDj2B,SAASivB,iBAAiB,QAASpjB,KAAKiqB,OAAOI,aAE/CvhB,OAAOsa,iBAAiB,SAAUpjB,KAAKiqB,OAAOK,OAC9CxhB,OAAOsa,iBAAiB,SAAUpjB,KAAKiqB,OAAOK,OAErD,CAODF,QAAQ/G,GACJ,MAAMC,EAASD,EAAMC,OACrB,KAAMA,aAAkBhrB,SACpB,OAEJ0H,KAAKqjB,MAAQA,EAEb,MAAMxX,EAAOyX,EAAOS,QAAQ,YAC5B,IAAK/jB,KAAK8d,UAAYjS,EAAM,CACxBwX,EAAME,iBAEN,IAAItU,EAAIoU,EAAMwH,MACVxd,EAAIgW,EAAMyH,MAEV7b,EAAIjP,KAAK+qB,OAAO9b,IAChBA,GAAKjP,KAAKgrB,KAAK3P,OAGfhO,EAAIrN,KAAK+qB,OAAO1d,IAChBA,GAAKrN,KAAKgrB,KAAKrG,QAEnB3kB,KAAK+gB,WAAWnW,MAAM2S,IAAM,GAAGlQ,MAC/BrN,KAAK+gB,WAAWnW,MAAMqgB,KAAO,GAAGhc,MAChCjP,KAAKkrB,WACLlrB,KAAK2pB,YACR,CACJ,CAODxC,MAAM9D,GACF,MAAMC,EAASD,EAAMC,OACrB,GAAMA,aAAkBhrB,QAGxB,GAAI0H,KAAK6pB,SAAW7pB,KAAKtL,MAAQsL,KAAK+pB,YAAa,CAC/C,MAAMxnB,EAAQvC,KAAKmrB,SACdnrB,KAAKmrB,SAAS3T,cAAc,SAASxX,KAAKpK,QAAQ8T,QAAQnH,oBAC1DvC,KAAKmX,GAAG4J,WAAWvJ,cAAc,SAASxX,KAAKpK,QAAQ8T,QAAQnH,oBACpEvC,KAAKorB,SAAS7oB,EAAMhM,MACvB,MAAM,IAAKyJ,KAAK6pB,QAAS,CACtB,MAAMhe,EAAOyX,EAAOS,QAAQ,YACxBlY,IACA7L,KAAKuoB,SAAS1c,GACdwX,EAAME,iBAEb,CACJ,CAOD2G,QAAQ7G,GACJ,GAAIrjB,KAAKmrB,UACL,GAAkB,WAAd9H,EAAM/sB,IACF0J,KAAKpK,QAAQgzB,YAAY5oB,OACzBA,KAAKqrB,kBAEN,GAAkB,UAAdhI,EAAM/sB,IAEb,GAAI0J,KAAK+pB,YAAa,CAClB,MAAMxnB,EAASvC,KAAKmrB,SAAS3T,cAAc,SAASxX,KAAKpK,QAAQ8T,QAAQnH,oBACzEvC,KAAKorB,SAAS7oB,EAAMhM,MACvB,KAAM,CACH,MAAM+0B,EAAUz3B,MAAMgG,KAAKmG,KAAKmrB,SAAS9U,iBAAiB,SAASrW,KAAKpK,QAAQ8T,QAAQnH,qBACxFvC,KAAKurB,QAAQD,EAAO12B,KAAI2N,GAASA,EAAMhM,MAAMwN,SAAS/D,KAAKtL,KAAKiX,IACnE,OAIF,GAAI3L,KAAK6pB,SAAW7pB,KAAKtL,KAC5B,GAAkB,UAAd2uB,EAAM/sB,KAEN,GAAI0J,KAAK+pB,YAAa,CAClB,MAAMxnB,EAASvC,KAAKmX,GAAG4J,WAAWvJ,cAAc,SAASxX,KAAKpK,QAAQ8T,QAAQnH,oBAC9EvC,KAAKorB,SAAS7oB,EAAMhM,MACvB,MAAM,GAAIyJ,KAAK8pB,WAAY,CACxB,MAAMwB,EAAUz3B,MAAMgG,KAAKmG,KAAKmX,GAAG4J,WAAW1K,iBAAiB,SAASrW,KAAKpK,QAAQ8T,QAAQnH,qBAC7FvC,KAAKurB,QAAQD,EAAO12B,KAAI2N,GAASA,EAAMhM,MAAMwN,SAAS/D,KAAKtL,KAAKiX,IACnE,MACoB,WAAd0X,EAAM/sB,MAET0J,KAAK+pB,YACL/pB,KAAKorB,SAASprB,KAAKtL,KAAK8gB,SACjBxV,KAAK8pB,YACZ9pB,KAAKurB,QAAQ,KAAMvrB,KAAKtL,KAAKiX,KAI5C,CAOD4c,SAASxc,GACL,MAAMzW,EAAcJ,EAAqB6W,EAAGyf,UAAWxrB,KAAKmX,GAAG/hB,QAAQqhB,UACvE,GAAIzW,KAAKpK,QAAQuzB,eAAe10B,SAASa,GAErC,YADA0K,KAAKyrB,YAGT,MAAMC,EAAW5V,SAAS/J,EAAGiP,cAActE,QAAQ5c,MAAO,IAEpD+R,EADM7L,KAAKmX,GAAGziB,KAAKA,KAAKg3B,GACbp2B,GAEjB0K,KAAKtL,KAAO,CACRmX,OACA6f,WACAp2B,cACAkgB,QAAS3J,EAAK7W,MAAQ+V,OAAOc,EAAKnX,OAEtCsL,KAAK6pB,SAAU,EACf7pB,KAAK+pB,aAAc,EACf/pB,KAAKpK,QAAQmzB,OACb/oB,KAAKmX,GAAGU,SAER7X,KAAK2rB,gBAET3rB,KAAKyrB,WACR,CAEDE,gBACI,MAAM9f,EAAO7L,KAAKtL,KAAKmX,KACjBvW,EAAc0K,KAAKtL,KAAKY,YACxBkpB,EAAQxe,KAAKmX,GAAGziB,KAAK6U,SAASjU,GAAaN,MAAQ+V,OAAO/K,KAAKmX,GAAGziB,KAAK6U,SAASjU,GAAaZ,MAC7F4oB,EAAW,CACb,eAAetd,KAAKpK,QAAQ8T,QAAQwe,UACpC,eAAeloB,KAAKpK,QAAQ8T,QAAQ2B,WACpC,OAAOrL,KAAKpK,QAAQonB,OAAOuL,gBAC3B,kBAAkBvoB,KAAKpK,QAAQ8T,QAAQue,2CAA2CjoB,KAAKpK,QAAQonB,OAAOsL,kBACtG,UACA,eAAetoB,KAAKpK,QAAQ8T,QAAQgO,UACpC,gBAAgB1X,KAAKpK,QAAQ8T,QAAQme,SACrC,eAAe7nB,KAAKpK,QAAQ8T,QAAQiC,QACpC,iBAAiB3L,KAAKpK,QAAQ8T,QAAQ8U,UAAUzpB,EAAWypB,aAC3D,iBAAiBxe,KAAKpK,QAAQ8T,QAAQnH,iBAAiBxN,EAAW8W,EAAK7W,MAAQ+V,OAAOc,EAAKnX,OAAS,oBACpG,SACA,eAAesL,KAAKpK,QAAQ8T,QAAQiC,QACpC,kBAAkB3L,KAAKpK,QAAQ8T,QAAQse,4CAA4ChoB,KAAKpK,QAAQonB,OAAOgL,kBACvG,kBAAkBhoB,KAAKpK,QAAQ8T,QAAQqe,wCAAwC/nB,KAAKpK,QAAQonB,OAAO+K,gBACnG,SACA,UACA,SACA,UACFjzB,KAAK,IACDq2B,EAAWp3B,EAAc,MAAO,CAClCsW,MAAOrK,KAAKpK,QAAQ8T,QAAQye,MAC5B9jB,KAAMiZ,IAEVtd,KAAKmrB,SAAWA,EAChBnrB,KAAK4rB,YACL,MAAMrpB,EAAS4oB,EAAS3T,cAAc,SAASxX,KAAKpK,QAAQ8T,QAAQnH,oBACpEA,EAAMspB,QACNtpB,EAAMupB,eAAiBvpB,EAAMwpB,aAAexpB,EAAMhM,MAAMgB,OAExD4zB,EAAS/H,iBAAiB,SAAUC,IAChC,MAAMC,EAASD,EAAMC,OACfA,aAAkBhrB,UAGpBgrB,EAAOU,aAAa,uBACpBX,EAAME,iBACFvjB,KAAKpK,QAAQgzB,YAAY5oB,OACzBA,KAAKqrB,cAEF/H,EAAOU,aAAa,sBAC3BX,EAAME,iBAENvjB,KAAKorB,SAAS7oB,EAAMhM,QACvB,GAER,CAQD60B,SAAS70B,GACL,MAAMy1B,EAAUhsB,KAAKtL,KAAK8gB,QAEpB9T,EAAO1B,KAAKmX,GAAG/hB,QAAQqhB,SAASzW,KAAKtL,KAAKY,aAAaoM,MAAQ1B,KAAKmX,GAAGvhB,QAAQ8L,KAC/EuqB,EAAc11B,EAAMwN,OAC1B,IAAI8H,EACJ,GAAa,WAATnK,EACAmK,EAAO,CAACnX,KAAMuiB,WAAWgV,SACtB,GAAa,YAATvqB,EAEHmK,EADA,CAAC,GAAI,QAAS,KAAKpX,SAASw3B,GACrB,CAACv3B,MAAM,EACVM,KAAM,QACN6gB,MAAO,GAEJ,CAACnhB,MAAM,EACVM,KAAM,OACN6gB,MAAO,QAEZ,GAAa,SAATnU,EACPmK,EAAO,CAACnX,KAAM,CACV,CAACV,SAAU,QACPU,KAAM6B,IAEdvB,KAAMuB,EACNsf,MAAOtf,QACJ,GAAa,WAATmL,EACPmK,EAAO,CAACnX,KAAM6B,QACX,GAAa,SAATmL,EAAiB,CACxB,MAAMiI,EAAS3J,KAAKmX,GAAG/hB,QAAQqhB,SAASzW,KAAKtL,KAAKY,aAAaqU,QAAU3J,KAAKmX,GAAGvhB,QAAQ+T,OACzFkC,EAAO,CAACnX,KAAM6B,EACVsf,MAAON,EAAUxK,OAAOxU,GAAQoT,GACvC,MACGkC,EAAO,CAACnX,KAAM6B,GAGlByJ,KAAKmX,GAAGziB,KAAKA,KAAKsL,KAAKtL,KAAKg3B,UAAU1rB,KAAKtL,KAAKY,aAAeuW,EAC/D7L,KAAKqrB,aACL,MAAMK,EAAW1rB,KAAKtL,KAAKg3B,SACrBp2B,EAAc0K,KAAKtL,KAAKY,YAC9B0K,KAAKtL,KAAO,GACZsL,KAAKmX,GAAGU,QAAO,GACf7X,KAAK6pB,SAAU,EACf7pB,KAAK+pB,aAAc,EACnB/pB,KAAKmX,GAAGQ,KAAK,qBAAsBphB,EAAOy1B,EAASN,EAAUp2B,EAChE,CAODkzB,QAAQ5c,GACJ,IAAKA,GAAsB,OAAhBA,EAAG5X,UAAqBgM,KAAK6pB,QAAS,OACjD,MAAM6B,EAAW5V,SAASlK,EAAG8K,QAAQ5c,MAAO,IACtC6R,EAAM3L,KAAKmX,GAAGziB,KAAKA,KAAKg3B,GAC9B1rB,KAAKtL,KAAO,CACRiX,MACA+f,YAEJ1rB,KAAK6pB,SAAU,EACf7pB,KAAK8pB,YAAa,EACd9pB,KAAKpK,QAAQmzB,OACb/oB,KAAKmX,GAAGU,SAER7X,KAAKksB,eAETlsB,KAAKyrB,WACR,CAEDS,eACI,MAAMvgB,EAAM3L,KAAKtL,KAAKiX,IAEhB2R,EAAW,CACb,eAAetd,KAAKpK,QAAQ8T,QAAQwe,UACpC,eAAeloB,KAAKpK,QAAQ8T,QAAQ2B,WACpC,OAAOrL,KAAKpK,QAAQonB,OAAOwL,eAC3B,kBAAkBxoB,KAAKpK,QAAQ8T,QAAQue,2CAA2CjoB,KAAKpK,QAAQonB,OAAOsL,kBACtG,UACA,eAAetoB,KAAKpK,QAAQ8T,QAAQgO,UACpC,gBAAgB1X,KAAKpK,QAAQ8T,QAAQme,SACrC,eAAe7nB,KAAKpK,QAAQ8T,QAAQiC,QACpC,kBAAkB3L,KAAKpK,QAAQ8T,QAAQse,4CAA4ChoB,KAAKpK,QAAQonB,OAAOgL,kBACvG,kBAAkBhoB,KAAKpK,QAAQ8T,QAAQqe,wCAAwC/nB,KAAKpK,QAAQonB,OAAO+K,gBACnG,SACA,UACA,SACA,UACFjzB,KAAK,IACDq2B,EAAWp3B,EAAc,MAAO,CAClCsW,MAAOrK,KAAKpK,QAAQ8T,QAAQye,MAC5B9jB,KAAMiZ,IAEJ4K,EAAQiD,EAASjQ,kBACvB,IAAKgN,EACD,OAEJ,MAAML,EAAOK,EAAMiE,kBAAkBjR,kBACrC,IAAK2M,EACD,OAGJlc,EAAIvV,SAAQ,CAACyV,EAAgB1M,KACzB,MAAMqK,EAAiBxJ,KAAKmX,GAAG/hB,QAAQqhB,SAAStX,GAChD,KAAMqK,EAAejU,QAAWiU,EAAejU,QAAUyK,KAAKpK,QAAQozB,iBAAoBhpB,KAAKpK,QAAQuzB,eAAe10B,SAAS0K,GAAI,CAC/H,MAAMqf,EAAQxe,KAAKmX,GAAGziB,KAAK6U,SAASpK,GAAGnK,MAAQ+V,OAAO/K,KAAKmX,GAAGziB,KAAK6U,SAASpK,GAAGzK,MAC/EmzB,EAAK7tB,aAAajG,EAAc,MAAO,CACnCsW,MAAOrK,KAAKpK,QAAQ8T,QAAQiC,IAC5BtH,KAAM,CACF,eAAerE,KAAKpK,QAAQ8T,QAAQiC,QACpC,iBAAiB3L,KAAKpK,QAAQ8T,QAAQ8U,UAAUzpB,EAAWypB,aAC3D,iBAAiBxe,KAAKpK,QAAQ8T,QAAQnH,iBAAiBxN,EAAW8W,EAAK7W,MAAQ+V,OAAOc,EAAKnX,OAAS,oBACpG,UACFI,KAAK,MACP+yB,EAAKsE,iBACZ,KAELnsB,KAAKmrB,SAAWA,EAChBnrB,KAAK4rB,YAEL,MAAMN,EAASz3B,MAAMgG,KAAKguB,EAAKxR,iBAAiB,SAASrW,KAAKpK,QAAQ8T,QAAQnH,qBAE9E+oB,EAAOc,MAGPjB,EAAS/H,iBAAiB,SAAUC,IAChC,MAAMC,EAASD,EAAMC,OACfA,aAAkBhrB,UAGpBgrB,EAAOU,aAAa,sBAChBhkB,KAAKpK,QAAQgzB,YAAY5oB,OACzBA,KAAKqrB,aAEF/H,EAAOU,aAAa,qBAE3BhkB,KAAKurB,QAAQD,EAAO12B,KAAK2N,GAA4BA,EAAMhM,MAAMwN,SAAS/D,KAAKtL,KAAKiX,KACvF,GAER,CAQD4f,QAAQ72B,EAAgBiX,GAEpB,MAAMqgB,EAAUrgB,EAAI/W,KAAKiX,GAAmBA,EAAK7W,MAAQ+V,OAAOc,EAAKnX,QACjEA,IACAsL,KAAKmX,GAAGziB,KAAKA,KAAKsL,KAAKtL,KAAKg3B,UAAY1rB,KAAKmX,GAAGziB,KAAKA,KAAKsL,KAAKtL,KAAKg3B,UAAU92B,KAAI,CAACy3B,EAASC,KAExF,GADsBtsB,KAAKmX,GAAG/hB,QAAQqhB,SAAS6V,GAC7B/2B,QAAUyK,KAAKpK,QAAQuzB,eAAe10B,SAAS63B,GAC7D,OAAOD,EAEX,MAAM3qB,EAAO1B,KAAKmX,GAAG/hB,QAAQqhB,SAAS6V,GAAU5qB,MAAQ1B,KAAKmX,GAAGvhB,QAAQ8L,KAClEnL,EAAQ7B,EAAKc,EAAqB82B,EAAUtsB,KAAKmX,GAAG/hB,QAAQqhB,WAC5DwV,EAAc11B,EAAMwN,OAC1B,IAAI8H,EACJ,GAAa,WAATnK,EACAmK,EAAO,CAACnX,KAAMuiB,WAAWgV,SACtB,GAAa,YAATvqB,EAEHmK,EADA,CAAC,GAAI,QAAS,KAAKpX,SAASw3B,GACrB,CAACv3B,MAAM,EACVM,KAAM,QACN6gB,MAAO,GAEJ,CAACnhB,MAAM,EACVM,KAAM,OACN6gB,MAAO,QAEZ,GAAa,SAATnU,EACPmK,EAAO,CAACnX,KAAM,CACV,CAACV,SAAU,QACPU,KAAM6B,IAEdvB,KAAMuB,EACNsf,MAAOtf,QACJ,GAAa,WAATmL,EACPmK,EAAO,CAACnX,KAAM6B,QACX,GAAa,SAATmL,EAAiB,CACxB,MAAMiI,EAAS3J,KAAKmX,GAAG/hB,QAAQqhB,SAAS6V,GAAU3iB,QAAU3J,KAAKmX,GAAGvhB,QAAQ+T,OAC5EkC,EAAO,CAACnX,KAAM6B,EACVsf,MAAON,EAAUxK,OAAOxU,GAAQoT,GACvC,MACGkC,EAAO,CAACnX,KAAM6B,GAElB,OAAOsV,CAAI,KAInB,MACM0gB,EADavsB,KAAKmX,GAAGziB,KAAKA,KAAKsL,KAAKtL,KAAKg3B,UACpB92B,KAAIiX,GAAQA,EAAK7W,MAAQ+V,OAAOc,EAAKnX,QAEhEsL,KAAKtL,KAAO,GACZsL,KAAKmX,GAAGU,QAAO,GACf7X,KAAKqrB,aACLrrB,KAAK6pB,SAAU,EACf7pB,KAAKmX,GAAGQ,KAAK,oBAAqB4U,EAASP,EAASrgB,EACvD,CAMDigB,YACQ5rB,KAAKmrB,UACLh3B,SAAS0xB,KAAKrvB,YAAYwJ,KAAKmrB,SAEtC,CAMDE,aACQrrB,KAAK6pB,SAAW7pB,KAAKmrB,WACrBh3B,SAAS0xB,KAAKjsB,YAAYoG,KAAKmrB,UAC/BnrB,KAAKmrB,SAAWnrB,KAAK6pB,QAAU7pB,KAAK8pB,WAAa9pB,KAAK+pB,aAAc,EAE3E,CAODtB,UAAU7c,GACN,IAAKA,GAAsB,OAAhBA,EAAG5X,UAAqBgM,KAAK6pB,QAAS,OACjD,MAAM/vB,EAAQgc,SAASlK,EAAG8K,QAAQ5c,MAAO,IACzCkG,KAAKmX,GAAGhM,KAAK2M,OAAOhe,GACpBkG,KAAKyrB,WACR,CAMD9B,aACI,MAAM6C,EAAU1jB,OAAO0jB,SAAW1jB,OAAO2jB,YACnC3iB,EAAUhB,OAAOgB,SAAWhB,OAAO4jB,YACzC1sB,KAAKgrB,KAAOhrB,KAAK+gB,WAAWW,wBAC5B1hB,KAAK+qB,OAAS,CACV9b,EAAGnG,OAAO6jB,WAAaH,EAAUxsB,KAAKgrB,KAAK3P,MAC3ChO,EAAGvE,OAAO8jB,YAAc9iB,EAAU9J,KAAKgrB,KAAKrG,OAEnD,CAOD0F,YAAYhH,GACR,MAAMC,EAASD,EAAMC,OACrB,KAAMA,aAAkBhrB,UAAY0H,KAAK+gB,WAAWL,SAAS4C,GACzD,OAEJ,IAAIuJ,GAAQ,EACR7sB,KAAK6pB,UACLgD,GAAUvJ,EAAOtkB,QAAQ,SAASgB,KAAKpK,QAAQ8T,QAAQnH,qBAEvDsqB,GACA7sB,KAAKyrB,WAEZ,CAMDP,WACI,GAAIlrB,KAAK6pB,SAAW7pB,KAAKtL,MAAQsL,KAAK+pB,YAAa,CAC/C,MAAMxnB,EAAQvC,KAAKmrB,SACdnrB,KAAKmrB,SAAS3T,cAAc,SAASxX,KAAKpK,QAAQ8T,QAAQnH,oBAC1DvC,KAAKmX,GAAG4J,WAAWvJ,cAAc,SAASxX,KAAKpK,QAAQ8T,QAAQnH,oBAEpEvC,KAAKorB,SAAS7oB,EAAMhM,MACvB,CACDpC,SAAS0xB,KAAKrvB,YAAYwJ,KAAKohB,cAC/BphB,KAAK4pB,UAAW,EAChB5pB,KAAKmX,GAAGQ,KAAK,wBAChB,CAMD8T,YACQzrB,KAAK4pB,WACL5pB,KAAK4pB,UAAW,EAChBz1B,SAAS0xB,KAAKjsB,YAAYoG,KAAKohB,cAC/BphB,KAAKmX,GAAGQ,KAAK,0BAEpB,CAMD2M,UACItkB,KAAKmX,GAAGjjB,IAAIqwB,oBAAoBvkB,KAAKpK,QAAQszB,WAAYlpB,KAAKiqB,OAAO9C,OACrEnnB,KAAKmX,GAAGjjB,IAAIqwB,oBAAoB,cAAevkB,KAAKiqB,OAAOG,SAC3Dj2B,SAASowB,oBAAoB,QAASvkB,KAAKiqB,OAAOI,aAClDl2B,SAASowB,oBAAoB,UAAWvkB,KAAKiqB,OAAOC,SACpDphB,OAAOyb,oBAAoB,SAAUvkB,KAAKiqB,OAAOK,OACjDxhB,OAAOyb,oBAAoB,SAAUvkB,KAAKiqB,OAAOK,OAC7Cn2B,SAAS0xB,KAAKnF,SAAS1gB,KAAKohB,eAC5BjtB,SAAS0xB,KAAKjsB,YAAYoG,KAAKohB,cAE/BphB,KAAKpK,QAAQmzB,SACb/oB,KAAKmX,GAAGvhB,QAAQ2V,UAAYvL,KAAKwpB,mBAErCxpB,KAAKsgB,aAAc,CACtB,CAED/U,UAAUI,EAAKC,EAAI9R,GACf,IAAKkG,KAAKtL,MAAQsL,KAAKtL,KAAKg3B,WAAa5xB,EACrC,OAAO8R,EAGX,GAAI5L,KAAK+pB,YAAa,CAELne,EAAGjX,WAAWa,EAAqBwK,KAAKtL,KAAKY,YAAa0K,KAAKmX,GAAG/hB,QAAQqhB,WAClF9hB,WAAa,CACd,CACIX,SAAU,QACVkC,WAAY,CACRwL,KAAM,OACNnL,MAAOyJ,KAAKtL,KAAK8gB,QACjBnL,MAAOrK,KAAKpK,QAAQ8T,QAAQnH,QAI3C,MAIGqJ,EAAGjX,WAAWyB,SAAQ,CAACyV,EAAuB1M,KAC1C,MAAMrF,EAAQ5E,EAAqBiK,EAAGa,KAAKmX,GAAG/hB,QAAQqhB,UAChDqW,EAAWnhB,EAAI7R,GACrB,IAAKkG,KAAKpK,QAAQuzB,eAAe10B,SAASqF,GAAQ,CACjC8R,EAAGjX,WAAWwK,GACtBxK,WAAa,CACd,CACIX,SAAU,QACVkC,WAAY,CACRwL,KAAM,OACNnL,MAAOxB,EAAW+3B,EAAS93B,MAAQ+V,OAAO+hB,EAASp4B,OAAS,IAC5D2V,MAAOrK,KAAKpK,QAAQ8T,QAAQnH,QAI3C,KAIT,OAAOqJ,CAEV,oBAGuB,SAAS2d,EAAsB3zB,EAAU,IACjE,MAAMizB,EAAS,IAAIS,EAAOC,EAAW3zB,GAOrC,OANI2zB,EAAUjJ,YACVuI,EAAOjjB,OAEP2jB,EAAUvD,GAAG,kBAAkB,IAAM6C,EAAOjjB,SAGzCijB,CACX,IATa,ME5sBAlN,EAAgB,CACzBjS,QAAS,CACLqjB,OAAQ,iCACRjF,KAAM,+BACNpK,UAAW,oCACXY,QAAS,mCAEbtB,OAAQ,CACJ+P,OAAQ,mCAEZ/D,cAAe,ICPnB,MAAMgE,GA4BFtX,YAAY6T,EAAsB3zB,EAAU,IACxCoK,KAAKmX,GAAKoS,EACVvpB,KAAKpK,QAAU,IACR+lB,KACA/lB,EAEV,CAEDgQ,OAEI,GAAI5F,KAAKsgB,YACL,OAGJ,IAAI2M,EAAmCjtB,KAAKmX,GAAG4J,WAAWvJ,cAAc,IAAIxX,KAAKpK,QAAQ8T,QAAQqjB,UACjG,IAAKE,EAAW,CACZA,EAAYl5B,EACR,SACA,CACIsW,MAAOrK,KAAKpK,QAAQ8T,QAAQqjB,OAC5B1oB,KAAM,MAId,MAAM6oB,EAAgBltB,KAAKmX,GAAG4J,WAAWvJ,cAAc,IAAIxX,KAAKmX,GAAGvhB,QAAQ8T,QAAQ+T,UAC/EyP,EACAA,EAAc12B,YAAYy2B,GAE1BjtB,KAAKmX,GAAG4J,WAAWvqB,YAAYy2B,GAEnCjtB,KAAKmtB,gBAAiB,CACzB,CACDntB,KAAKitB,UAAYA,EAGjBjtB,KAAKohB,aAAertB,EAAc,MAAO,CACrCuH,GAAI0E,KAAKpK,QAAQ8T,QAAQgU,YAE7B1d,KAAK+gB,WAAahtB,EAAc,MAAO,CACnCsW,MAAOrK,KAAKpK,QAAQ8T,QAAQ4U,UAEhCte,KAAK0pB,QAAU31B,EAAc,KAAM,CAC/BsW,MAAOrK,KAAKpK,QAAQ8T,QAAQoe,KAC5BzjB,KAAMrE,KAAKmX,GAAGziB,KAAK6U,SAAS3U,KACxB,CAACqV,EAASnQ,KACN,MAAM2c,EAAWzW,KAAKmX,GAAG/hB,QAAQqhB,SAAS3c,GAC1C,OAAIkG,KAAKpK,QAAQozB,cAAcv0B,SAASqF,GAC7B,GAEJ,oBAAoBA,8DACSmQ,EAAQjV,MAAQiV,EAAQvV,SAAS+hB,EAASlhB,OAAS,GAAK,+EAElF0U,EAAQjV,MAAQiV,EAAQvV,mEAE5B,IAEZI,KAAK,MAEXkL,KAAK+gB,WAAWvqB,YAAYwJ,KAAK0pB,SACjC1pB,KAAKohB,aAAa5qB,YAAYwJ,KAAK+gB,YACnC/gB,KAAKotB,gBAELptB,KAAKqtB,QAELrtB,KAAKsgB,aAAc,CAEtB,CAEDgN,UACQttB,KAAKmtB,gBAAkBntB,KAAKitB,UAAUjS,eACtChb,KAAKitB,UAAUjS,cAAcphB,YAAYoG,KAAKitB,WAElD94B,SAASowB,oBAAoB,QAASvkB,KAAKiqB,OAAO9C,MACrD,CAEDkG,QACIrtB,KAAKiqB,OAAS,CACV9C,MAAOnnB,KAAKutB,OAAOpD,KAAKnqB,OAE5B7L,SAASivB,iBAAiB,QAASpjB,KAAKiqB,OAAO9C,MAClD,CAEDqG,YACIr5B,SAAS0xB,KAAKrvB,YAAYwJ,KAAKohB,cAC/BphB,KAAKotB,gBACLptB,KAAK4pB,UAAW,EAChB5pB,KAAKmX,GAAGQ,KAAK,yBAChB,CAED8V,aACQztB,KAAK4pB,WACL5pB,KAAK4pB,UAAW,EAChBz1B,SAAS0xB,KAAKjsB,YAAYoG,KAAKohB,cAC/BphB,KAAKmX,GAAGQ,KAAK,2BAEpB,CAEDyV,gBACI,MAAMZ,EAAU1jB,OAAO0jB,SAAW1jB,OAAO2jB,YACnC3iB,EAAUhB,OAAOgB,SAAWhB,OAAO4jB,YACzC1sB,KAAKgrB,KAAOhrB,KAAK+gB,WAAWW,wBAC5B1hB,KAAK+qB,OAAS,CACV9b,EAAGnG,OAAO6jB,WAAaH,EAAUxsB,KAAKgrB,KAAK3P,MAC3ChO,EAAGvE,OAAO8jB,YAAc9iB,EAAU9J,KAAKgrB,KAAKrG,OAEnD,CAED4I,OAAOlK,GACH,MAAMC,EAASD,EAAMC,OACrB,GAAMA,aAAkBhrB,QAKxB,GAFA0H,KAAKqjB,MAAQA,EAETrjB,KAAKitB,UAAUvM,SAAS4C,GAAS,CAEjC,GADAD,EAAME,iBACFvjB,KAAK4pB,SAEL,YADA5pB,KAAKytB,aAGTztB,KAAKwtB,YAEL,IAAIve,EAAIoU,EAAMwH,MACVxd,EAAIgW,EAAMyH,MAEV7b,EAAIjP,KAAK+qB,OAAO9b,IAChBA,GAAKjP,KAAKgrB,KAAK3P,OAGfhO,EAAIrN,KAAK+qB,OAAO1d,IAChBA,GAAKrN,KAAKgrB,KAAKrG,QAEnB3kB,KAAK+gB,WAAWnW,MAAM2S,IAAM,GAAGlQ,MAC/BrN,KAAK+gB,WAAWnW,MAAMqgB,KAAO,GAAGhc,KACnC,MAAM,GAAIjP,KAAK0pB,QAAQhJ,SAAS4C,GAAS,CACtC,MAAM9nB,EAAK8nB,EAAOS,QAAQ,IAAI/jB,KAAKpK,QAAQ8T,QAAQoe,aACnD,IAAKtsB,EACD,OAEJ,MAAMkyB,EAAWlyB,EAAGgc,cAAc,wBAC7BkW,EAAShN,SAAS4C,KACnBoK,EAASx2B,SAAWw2B,EAASx2B,SAEjC,MAAMgT,EAASyH,OAAOnW,EAAGkb,QAAQxM,QAC7BwjB,EAASx2B,QACT8I,KAAKmX,GAAG/hB,QAAQgkB,KAAK,CAAClP,IAEtBlK,KAAKmX,GAAG/hB,QAAQ+jB,KAAK,CAACjP,GAE7B,MAAUlK,KAAK4pB,UACZ5pB,KAAKytB,YAEZ,uBAK0B,SAASlE,EAAsB3zB,EAAU,IACpE,MAAM+3B,EAAe,IAAIX,GAAazD,EAAW3zB,GAOjD,OANI2zB,EAAUjJ,YACVqN,EAAa/nB,OAEb2jB,EAAUvD,GAAG,kBAAkB,IAAM2H,EAAa/nB,SAG/C+nB,CACX"}