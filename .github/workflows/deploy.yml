# @format

name: Build & Deploy
on:
  push:
    branches: [prod]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: capstone-app
      url: ${{ vars.APP_URL }}
    steps:
      - name: Set and Escape Env Variables
        run: |
          echo "APP_NAME=${{ vars.APP_NAME }}" >> $GITHUB_ENV
          echo "APP_ENV=${{ vars.APP_ENV }}" >> $GITHUB_ENV
          echo "APP_DEBUG=${{ vars.APP_DEBUG }}" >> $GITHUB_ENV
          echo "APP_URL=${{ vars.APP_URL }}" >> $GITHUB_ENV
          echo "COMPANY_NAME=${{ vars.COMPANY_NAME }}" >> $GITHUB_ENV
          echo "COMPANY_URL=${{ vars.COMPANY_URL }}" >> $GITHUB_ENV
          echo "CONTACT_EMAIL=${{ vars.CONTACT_EMAIL }}" >> $GITHUB_ENV
          echo "DB_CONNECTION=${{ vars.DB_CONNECTION }}" >> $GITHUB_ENV
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> $GITHUB_ENV
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
      - name: Escape Urls
        run: |
          echo "APP_URL=$(echo ${{ vars.APP_URL }} | sed 's/\//\\\//g')" >> $GITHUB_ENV
          echo "COMPANY_URL=$(echo ${{ vars.COMPANY_URL }} | sed 's/\//\\\//g')" >> $GITHUB_ENV
      - name: Deploy TalentFlow
        uses: appleboy/ssh-action@v1.0.3
        with:
          # Hostname or IP address of the server.
          host: ${{secrets.SSH_HOST}}
          # Username for authentication.
          username: ${{secrets.SSH_USERNAME}}
          # private key for either key-based or hostbased user authentication (OpenSSH format)
          key: ${{secrets.SSH_KEY}}
          # Command to execute on the remote server.
          script: |
            # Change to the domain directory
            cd /var/www/capstone.hostedprojects.net
            # Make the deployment folder
            mkdir public
            # Enter the folder
            cd public
            # Clone the repository
            git clone git@github.com:crimsonstrife/rym2.git
            # Update repo in the event it is already there
            git update
            # Pull changes
            git pull
            # Switch to the Prod branch
            git checkout prod
            # Clone Success Message
            echo 'Deployment Complete'
      - name: Pull LFS Files
        uses: appleboy/ssh-action@v1.0.3
        with:
          # Hostname or IP address of the server.
          host: ${{secrets.SSH_HOST}}
          # Username for authentication.
          username: ${{secrets.SSH_USERNAME}}
          # private key for either key-based or hostbased user authentication (OpenSSH format)
          key: ${{secrets.SSH_KEY}}
          # Command to execute on the remote server.
          script: |
            # Enter the application directory
            cd /var/www/capstone.hostedprojects.net/public/rym2
            # Update repo
            git update
            # Pull changes
            git pull
            # Initialize LFS (in case it isn't already)
            git lfs install
            # Pull current LFS files
            git lfs pull
            # Success Message
            echo 'LFS Files Updated'
      - name: Configure Environment
        uses: appleboy/ssh-action@v1.0.3
        with:
          # Hostname or IP address of the server.
          host: ${{secrets.SSH_HOST}}
          # Username for authentication.
          username: ${{secrets.SSH_USERNAME}}
          # private key for either key-based or hostbased user authentication (OpenSSH format)
          key: ${{secrets.SSH_KEY}}
          # Export all Env Vars
          allenvs: true
          # Command to execute on the remote server.
          script: |
            # Enter the application directory
            cd /var/www/capstone.hostedprojects.net/public/rym2
            # Copy the .env.example file to .env
            cp .env.example .env
            # Replace the .env file with the new values
            sed -i "s/APP_NAME=.*$/APP_NAME=\${{ env.INPUT_APPNAME }}/g" .env
            sed -i "s/APP_ENV=.*$/APP_ENV=\${{ env.INPUT_APPENV }}/g" .env
            sed -i "s/APP_DEBUG=.*$/APP_DEBUG=\${{ env.INPUT_APPDEBUG }}/g" .env
            sed -i "s/APP_URL=.*$/APP_URL=\${{ env.INPUT_APPURL }}/g" .env
            sed -i "s/COMPANY_NAME=.*$/COMPANY_NAME=\${{ env.INPUT_COMPANY }}/g" .env
            sed -i "s/COMPANY_URL=.*$/COMPANY_URL=\${{ env.INPUT_COMPANYURL }}/g" .env
            sed -i "s/CONTACT_EMAIL=.*$/CONTACT_EMAIL=\${{ env.INPUT_CONTACT }}/g" .env
            sed -i "s/DB_CONNECTION=.*$/DB_CONNECTION=\${{ env.INPUT_DBCONNECTION }}/g" .env
            sed -i "s/DB_HOST=.*$/DB_HOST=\${{ env.INPUT_DBHOST }}/g" .env
            sed -i "s/DB_PORT=.*$/DB_PORT=\${{ env.INPUT_DBPORT }}/g" .env
            sed -i "s/DB_DATABASE=.*$/DB_DATABASE=\${{ env.INPUT_DBNAME }}/g" .env
            sed -i "s/DB_USERNAME=.*$/DB_USERNAME=\${{ env.INPUT_DBUSER }}/g" .env
            sed -i "s/DB_PASSWORD=.*$/DB_PASSWORD=\${{ env.INPUT_DBPASS }}/g" .env
            # Success Message
            echo 'Environment Configured'
      - name: Install Composer Dependencies
        uses: appleboy/ssh-action@v1.0.3
        with:
          # Hostname or IP address of the server.
          host: ${{secrets.SSH_HOST}}
          # Username for authentication.
          username: ${{secrets.SSH_USERNAME}}
          # private key for either key-based or hostbased user authentication (OpenSSH format)
          key: ${{secrets.SSH_KEY}}
          # Command to execute on the remote server.
          script: |
            # Enter the application directory
            cd /var/www/capstone.hostedprojects.net/public/rym2
            # Install Composer Dependencies
            composer install
            # Success Message
            echo 'Composer Dependencies Installed'
      - name: Install NPM Dependencies
        uses: appleboy/ssh-action@v1.0.3
        with:
          # Hostname or IP address of the server.
          host: ${{secrets.SSH_HOST}}
          # Username for authentication.
          username: ${{secrets.SSH_USERNAME}}
          # private key for either key-based or hostbased user authentication (OpenSSH format)
          key: ${{secrets.SSH_KEY}}
          # Command to execute on the remote server.
          script: |
            # Enter the application directory
            cd /var/www/capstone.hostedprojects.net/public/rym2
            # Install NPM Dependencies
            npm install
            # Success Message
            echo 'NPM Dependencies Installed'
      - name: Update Dependencies
        uses: appleboy/ssh-action@v1.0.3
        with:
          # Hostname or IP address of the server.
          host: ${{secrets.SSH_HOST}}
          # Username for authentication.
          username: ${{secrets.SSH_USERNAME}}
          # private key for either key-based or hostbased user authentication (OpenSSH format)
          key: ${{secrets.SSH_KEY}}
          # Command to execute on the remote server.
          script: |
            # Enter the application directory
            cd /var/www/capstone.hostedprojects.net/public/rym2
            # Update Dependencies
            composer update
            # Success Message
            echo 'Dependencies Updated'
